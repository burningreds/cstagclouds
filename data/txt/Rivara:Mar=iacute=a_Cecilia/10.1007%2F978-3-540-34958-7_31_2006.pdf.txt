A Study on Delaunay Terminal Edge Method

Maria-Cecilia Rivara

Department of Computer Science, Universidad de Chile
mcrivara@dcc.uchile.cl

Summary. The Delaunay terminal edge algorithm for triangulation improvement
proceeds by iterative Lepp selection of a point M which is midpoint of a Delaunay
terminal edge in the mesh. The longest edge bisection of the associated terminal
triangles (sharing the terminal edge) can be seen as a ﬁrst step in the Delaunay
insertion of M . The method was introduced as a generalization of non-Delaunay
longest edge algorithms but formal termination proof had not been stated until now.
In this paper termination is proved and several geometric aspects of the algorithm
behavior are studied.

1 Introduction

Edge based reﬁnement methods for 2 and 3 dimensional triangulations have
been studied and used for developing adaptive software for PDEs since beginning 
of the eighties, e.g. Bank [5] , Rivara et al [6, 7, 18, 8, 13], Nambiar
et al, [11], Muthukrishnan et al [10], Morin et al, [9]. In particular, the methods 
based on the longest edge bisection of triangles guarantee that reﬁned
meshes of geometrical quality analogous to the input mesh are produced in
2-dimensions [6, 7].

More recently, methods that produce a sequence of improved constrained
Delaunay triangulations (CDT) have been developed to deal with the quality
triangulation problem of a planar straight line graph D. The combination of
edge reﬁnement and Delaunay insertion has been described by George and
Borouchaki , [4, 3] and Rivara and her collaborators, [13, 15, 16, 17, 18, 22].
Strong mesh improvement properties for iterative Delaunay reﬁnement based
on inserting the circumcentre of triangles to be reﬁned have been established
by Chew, [2], Ruppert [14], and Shewchuk [21]. In particular, under appropriate 
conditions on D, the method is guaranteed to produce optimal-size meshes
with the minimum angle larger that a speciﬁed angle tolerance. Applications
of this form of reﬁnement have been described by Weatherill et al [25, 26] and
Baker, [19]. Baker also published a comparison of edge based and circumcenter

544

M.-C. Rivara

based reﬁnement, [20]. An algorithm based on oﬀ-center insertions have been
recently presented by ¨Ungor [28].

The Delaunay terminal edge algorithm for triangulation improvement proceeds 
by iterative selection of a point M which is midpoint of a Delaunay
terminal edge (a longest edge for both triangles that share this edge) in the
mesh. This method combines the use of the longest edge propagating path associated 
to a bad quality processing triangle to determine a terminal edge in
the current mesh, with the Delaunay insertion of the midpoint of this terminal
edge. Note that the longest edge bisection of the associated terminal triangles 
(sharing the terminal edge) can be seen as a ﬁrst step in the Delaunay
insertion of M.

The Lepp Delaunay terminal edge method was introduced in a rather
intuitive basis as a generalization of previous longest edge algorithms in
[13, 18, 31]. This was supported by the improvement properties of both the
longest edge bisection of triangles and the Delaunay algorithm, and by the
result presented in Theorem 1 in next section. Later in [17] we discussed some
geometrical properties including some (rare) potential loop cases for angle tolerance 
greater than 22◦ and its management. However, while empirical studies
show that the method behaves analogously to the circumcircle method in 2dimensions 
[17, 18, 22], formal proofs on algorithm termination and on optimal
size property have not been established due to the diﬃculty of the analysis.
Recently in [29] we have presented some geometrical improvement properties
of an isolated insertion of a terminal edge midpoint M in the mesh. In this
paper we improve and extend these results and prove algorithm termination.

t 0

t 1

A

B

t 2

t 3

(a)

*
t0

t1

t 3

t 2

D

C

(b)

Fig. 1. (a) AB is an interior terminal edge shared by terminal triangles (t2, t3)
associated to Lepp(t0) ={t0, t1, t2}; (b) CD is a boundary terminal edge with unique
terminal triangle t2 associated to Lepp(t

0, t1, t2, t3}.
∗

0 = {t
∗

A Study on Delaunay Terminal Edge Method

545

2 Concepts and Preliminary Results

2.1 The Longest Edge Propagating Path (Lepp) and Terminal
Edge Triangles

The following concepts were introduced and used in references [13, 17, 18].
An edge E is called a terminal edge in triangulation τ if E is the longest
edge of every triangle that shares E, while the triangles that share E are
called terminal triangles. Note that in 2-dimensions either E is shared by two
terminal triangles t1, t2 if E is an interior edge, or E is shared by a single
terminal triangle t1 if E is a boundary (constrained) edge. See Figure 1 where
edge AB is an interior terminal edge shared by two terminal triangles t2, t3,
while edge CD is a boundary terminal edge with associated terminal triangle
t3.
For any triangle t0 in τ, the longest edge propagating path of t0, called
Lepp(t0), is the ordered sequence {tj}N +1
, where tj is the neighbor triangle on
a longest edge of tj−1, and longest-edge (tj) > longest-edge (tj−1), for j=1,...
N. Edge E = longest-edge(tN +1) = longest-edge(tN ) is a terminal edge in τ
and this condition determines N. Consequently either E is shared by a couple
of terminal triangles (tN , tN +1) ifE is an interior edge in τ, or E is shared by
a unique terminal triangle tN with boundary (constrained) longest edge. See
Figure 1 for an illustration of these ideas.

0

C

C
γ

A

B

A

R

(a)

B

Z

O

D

(b)

Fig. 2. R is the geometrical place of the fourth vertex D for Delaunay terminal
triangles ABC, ABD; (b) R reduces to one point when γ = 2π/3 (triangle ADB
equilateral).

For a Delaunay mesh, an unconstrained terminal edge imposes the following 
constraint on the largest angles of the associated terminal triangles
[13, 18]:
Theorem 1. For any pair of Delaunay terminal-triangles t1, t2 sharing a nonconstrained 
terminal edge, largest angle(ti) ≤ 2π/3 for i = 1, 2.

546

M.-C. Rivara

Proof For any Delaunay terminal triangles BAC of longest AB (see Figure
2(a)), the third vertex D of the neighbor terminal triangle ABD must be
situated in the exterior of circumcircle CC(BAC) and inside the circles of
center A,B and radius | A − B |. This deﬁnes a geometrical place R for D
which reduces to one point when angle BCA = 2π/3 where OZ = r/2 (see
Figure 2(b)), implying that R = φ when angle BCA > 2π/3.

2.2 The Longest Edge Bisection of Triangles

For an arbitrary triangle, t, the longest edge bisection of t is the splitting of
t into two triangles tA, tB by joining the midpoint of a longest edge to the
opposite vertex as shown in Figure 3 where |B − C| ≤ |C − A| ≤ |B − A|.
Using the notation of Figure 3, the following theorem presents some simple
properties of a the ﬁrst longest edge bisection of any t.

Fig. 3. notation for longest edge bisection.

Theorem 2. a) α1 ≥ α0/2
b) If t is obtuse, α1 ≥ α0
c) β2 ≥ 3α0/2
d) if t is obtuse, β2 ≥ 2α0
e) if t is acute, β1 > α0 if α0 < π/6
f) tB is acute if α0 > arcsin(1/3) = 19.5◦ (suﬃcient, but not necessary.)

Assertion a) follows from the following strong result due to Rosenberg and
∗ obtained in the iterative longest edge bisection
Stenger [27]: For any triangle t
∗ is greater than or equal to α0/2. Assertion
process, the smallest angle of t
(b) was proved in [12]. Assertions c) and d) are obtained by noting that
β2 = α1 + α0. Assertions (e) and (f) were proved in [29].

2.3 Delaunay Insertion of Point M

It is well known that among all triangulations, the Delaunay triangulation
maximizes the minimum angle. In fact, a much stronger statement holds [30].

A Study on Delaunay Terminal Edge Method

547

Among all triangulations with the same smallest angle, the Delaunay triangulation 
maximizes the second smallest angle, and so on. In particular, we can
associate an angle vector to any triangulation, that is the increasing sequence
of angles (α1, α2, ..., α3m) (where m is the total number of triangles in any
triangulation of the associated vertex set). That is, α1 ≤ α2 ≤ ... ≤ α3m. We
say (α1, α2, ...α3m) > (β1, β2, ..., β3m) if there exists an i such that αi > βi
and for all j < i, αj = βj. This is the standard lexicographic order on vectors.
So, given 2 triangulations, we can compare their angle vectors using this order
[30].

Theorem 3. Among all triangulations of a given point set, the Delaunay triangulation 
has the largest angle vector.

Consequentely if we call TS the non-Delaunay triangulation obtained by
simple insertion of point M (longest edge bisection of both terminal triangles),
and TD to the Delaunay triangulation obtained by Delaunay insertion of M,
then TD is better than TS in sense of Theorem 3.

3 An Algorithmic Description of the Lepp Delaunay
Terminal Edge Method

We are interested in improvement of angles in the mesh, so we introduce a
minimum angle tolerance θtol. Given these criteria, we will refer to any triangle
t such that a smallest angle of t is less than θtol as a bad triangle.

The algorithm can be simply described as follows: iteratively, each bad
triangle tbad in the current triangulation is eliminated by ﬁnding Lepp(tbad),
a pair of terminal triangles t1, t2, and associated terminal edge l. If nonconstrained 
edges are involved, then the midpoint M of l is Delaunay inserted
in the mesh. Otherwise the constrained point insertion criterion of
3.1 is
used. The process is repeated until tbad is destroyed in the mesh, and the algorithm 
ﬁnishes when the minimum angle in the mesh is greater than or equal
to an angle tolerance θtol. The algorithm including point selection strategies
for constrained terminal triangles is given below. A restriction on the size of
θtol will be presented in

,

,

3.1.

Lepp-Delaunay-Terminal-Edge Algorithm
Input = a CDT, τ, and angle tolerance θtol
Find Sbad = the set of bad triangles with respect to θtol
for each t in Sbad do

while t remains in τ do

Find Lepp (tbad), terminal triangles t1, t2 and terminal edge l. Triangle
t2 can be null for boundary l.
Select Point (P, t1, t2, l)
Perform constrained Delaunay insertion of P into τ
Update Sbad

548

M.-C. Rivara

end while

end for

Select Point (P, tterm1, tterm2, lterm)
if (second longest edge of tterm1 is not constrained and second longest edge
of tterm2 is not constrained) or lterm is constrained then

Select P = midpoint of lterm and return

else

for j = 1,2 do

if ttermj is not null and has constrained second longest edge l

if (α0 < 30◦ or α1 < 30◦) then

Select P = midpoint of l

∗ and return

∗ then

else

end if

Select P = midpoint of lterm

end if
end for

end if

3.1 Potential Loop Conditions to be Avoided

When the second longest edge CA is a constrained edge, the swapping of this
edge is forbidden. In such a case, the insertion of point M would imply that the
later processing of bad quality triangle MAC would introduce triangle M AM1
(see Figure 4(a)) similar to triangle ABC implying an inﬁnite loop situation.
To avoid this behavior we introduce the following additional operation:
α0 < 30◦ or α1 < 30◦ then insert midpoint M1 of edge CA.
Lemma 1. If triangle BM1A (see Figure 4(b)) has largest angle greater than
2π/3, then M is not inserted in the mesh by processing triangle M1BA.

Constrained edge point insertion: If CA is a constrained edge and

Proof See Theorem 12
The condition (α0 < 30◦ or α1 < 30◦) has been introduced to avoid
the undesirable boundary loop condition, as well as to avoid the insertion of
unnecesary vertices in the boundary. We have chosen 30◦ value because the
algorithm behaves well in practice for θtol = 30◦ [13, 17, 18]

For simplicity we will omit consideration of a rare special loop case discussed 
in [17], where a triangle M AM1 similar to a bad-quality triangle ABC
can be also obtained for a non-constrained edge CA. This happens when
quadritalerals BEAC and ADCM (see Figure 4(a)) are terminal quadrilaterals 
(where edges BA and CA are terminal edges respectively) together with
some non-frequent conditions on neighbor constrained items. A necessary but
not suﬃcient condition on the triangle ABC for this to happen is that angle
BM C ≥ π/3 which implies α0 ≥ αlimit = arctan
> 22◦ for obtuse

15−√
√

√

3

3+

5

A Study on Delaunay Terminal Edge Method

549

D

C

C

M
1

M

1

B

M

A

B

A

(b)

E
(a)

Fig. 4. (a) Over constrained edge CA, the insertion of M and M1 produces triangle
M AM1 similar to triangle BAC; (b) Insertion of M1 avoids this situation.

triangle BAC [17]. This loop case can be avoided by adding some extra conditions 
to the algorithm. However, to simplify the analysis we will restrict the
angle tolerance to αlimit.

4 Characterization of Delaunay Terminal Triangles

In this section we present a characterization of Delaunay terminal triangles
based on ﬁxing the second longest edge CA and choosing the smallest angle
at vertex A.

C

α 1

N

α 0

A

M

H’

F’

G’

F

B

E’

H

I

G

E

Fig. 5. Regions EFC and E’F’C’ are geometrical places for vertex B and midpoint
M for a terminal triangle BAC with respective smallest and largest angle of vertices
A and C.

Figure 5 shows the possible locations for vertex B and the midpoint M.
This supports an analysis of properties of the longest edge sons of triangle
BAC as parametrized by B. Since CB is a shortest edge and BA is a longest
edge, the following two conditions hold: Condition (1) constrains B to lie
inside the circular arc EF A of centre C and radius |C − A|. Consequently,

550

M.-C. Rivara

(cid:4)

A of centre N = (C + A)/2 and radius
M lies inside the circular arc CF
|C − A|/2. Condition (2) constrains B to lie outside the circular arc CF of
centre A and radius |C − A|, and so M lies outside circular arc N F
(cid:4) of centre
A, radius |C − A|/2. The line CE makes an angle of 120◦ with CA; this
constraint is a direct application of Theorem 1 for an unconstrained Delaunay
terminal triangle. Some of the properties of the triangles of the diagram are
summarized in the table given below. We denote the smallest and largest angle
of any triangle t by θmin(t) and θmax(t) respectively.

B is in/on
edge CE
arc EF

arc CF

property
θmax(t) = 120◦
t is an isosceles triangle with smallest edge equal
to second longest edge
t is an isosceles triangles with longest edge equal
to second longest edge
t is a right triangle, α0 = α1, θmin(tA) =α 0 = α1

edge CG
interior of region CEG obtuse triangles, α1 > α0, θmin(tA) = α0
interior of region CGF acute triangles with α1 < α0, θmin(tA) = α1

5 Angle Size Bounds

In this section we use the characterization of the preceding section to obtain
a theorem that improves the bounds of Theorem 2 on α1 for acute Delaunay 
terminal triangles. We ﬁrstly present a study on the distribution of the
ordered pair of angles (α0, α1) for unconstrained Delaunay terminal triangles
and we develop better bounds on α1 for acute triangles. The study on the distribution 
of (α0, α1) is summarized in Figure 6 which is a relabelled version of
Figure 5.
Note that the segments EH and UW respectively correspond to the terminal 
triangles with smallest angles equal to 30◦ and αlimit ≈ 22, 2◦. Note
that for α0 = 30◦, the angle α1 decreases from 60◦ to approximately 23.79◦
along EH, while for α0 = αlimit the α1 angle decreases approximately from
37.75◦ to 19.25◦ along UW. Remember that segment line CG indentiﬁes right
terminal triangles with α0 = α1. Note that the ratio α1/α0 ≥ 1 for obtuse
triangles (B in CEG) as expected according to part (b) of Theorem 2; while
for acute triangles, the ratio α1/α0 increases from 0.5 to 1 both along arc F
to C, and along arc F to G. These properties and continuity reasoning allows
to state the following lemma:

Lemma 2. For acute Delaunay terminal triangles, there exist ﬁxed constants
C1, C2 (C1 ≈ 0.79, C2 ≈ 0.886) such that:

a) For smallest angle α0 ≤ 30◦ (B in region CIH), α1 ≥ C1α0.
b) For smallest angle α0 ≤ αlimit (B in region CVW), α1 ≥ C2α0.

A Study on Delaunay Terminal Edge Method

551

C

A

22

w(22,19.25)

U(22,37) V(22,22)

H(30,23.79)

E(30,60)

I(30,30)

G(45,45)

F(60,30)

Fig. 6. Distribution of angles (α0, α1) for a terminal triangle with B in CEF.

becomes a right triangle.

c) The ratio α1/α0 approaches 1.0 both when α0 decreases, and when BAC
d) Using the notation of Figure 3, β2 ≥ (1 + C1)α0 for α0 ≤ 30◦.
Proof for (d) note that β2 = α1 + α02

6 Bounds on the Distance from M to Previous Vertices

In this section we bound the distance from M to previous vertices in the mesh
for a bad quality terminal triangle BAC. We use both the properties of the
longest edge bisection of a Delaunay terminal triangle BAC and the constraint
on the empty circuncircle.

Note that the circumcenter O of an obtuse (acute) triangle is situated in
the exterior (the interior) of the triangle, as illustrated in Figure 7. Furthermore 
for any non constrained Delaunay obtuse triangle t, the distance d from
the circuncenter O to the longest edge BA (see Figure 7(a)) satisﬁes that
0 < d < r/2, where r is the cicumradius. We will consider the limit cases
d = r/2 and d = 0, which respectively correspond to largest angles equal to
2π/3 and π/2, to state bounds for obtuse and acute triangles.

6.1 Obtuse Delaunay Terminal Triangles

Consider the limit Delaunay terminal triangle BAC with largest angle equal
> 22.2◦ which
to 2π/3 and smallest angle α equal to αlimit = arctan
holds if and only if angle BMC is equal to π/3.

15−√
√

√

Consider Figure 8 and without loss of generality, asume r = 1. Then
by using a coordinate system of center O and axes OZ and O ˜Z, the point
m = tan120◦ = −√
C(xC, yC) satisﬁes the equations yC = mxC + 1/2 and x2
C = 1, where

3. By solving this system we get:

C + y2

3

3+

5

552

M.-C. Rivara

d

O

(a)

O

(b)

Fig. 7. (a) obtuse triangle; (b) acute triangle.

Z

C

B

60º

H

M

α

A

O

Z

Fig. 8. BAC is a limit triangle with angle BCA = 3π/2, α = αlimit ≈ 22
◦
BM C = π/3, and OM = r/2.

, angle

√

3−√

yC = −√

 √

3−√

!
+ 1
2.
15−√
√

3

5

15

,

8

,

3

3+

!

15
 √

3.1) and

3)/8
15)/8

√
3/2

(as discussed in

xC =
8
This implies that αlimit = arctan
√
OM = M Z = 1/2
15 − √
√
BA =
3, BM = M A =
3 − √
√
HM = (
√
15 − √
√
BH = (5
√
3 − √
3(
CH =
(cid:11)
15 − √
√
BC =
3
M C = (
Note also that any previous neighbor vertex D of neighbor triangle CAD
must be situated in the exterior of CC(BAC), which implies |D − M| >
|Z − M|.
Lemma 3. For any obtuse bad quality Delaunay terminal triangle,

5)/2
3)/4)

3)/8

|M − C| ≥ C1|B − C|, and |M − D| ≥ C2|B − C|
√
3−√
1√
where C1 =

≈ 0.7 and C2 =

15−√
√
3−√

√
√

3

3

5

3

5

2

≈ 0.66

A Study on Delaunay Terminal Edge Method

553

Lemma 4. For α ≤ αlimit and π/2 ≤ γ ≤ 2π/3, there exist functions
˜C1(α, γ), ˜C2(α, γ) such that

|M − C| = ˜C1(α, γ)|B − C| and |M − D| = ˜C2(α, γ)|B − C|
where ˜C1(α, γ) ≥ C1, and ˜C2(α, γ) ≥ C2
Furthermore,
(i) for ﬁxed α = ˜α, both ˜C1(˜α, γ) and ˜C2(˜α, γ) increase as γ decreases.
(ii) For ﬁxed γ = ˜γ, both C1(α, ˜γ) and ˜C2(α, ˜γ) increase as α decreases.

6.2 Acute Delaunay Terminal Triangles

Consider the right triangle with smallest angle equal to αlimit, where M coincides 
with the circumcenter O. Assuming r = 1, it holds that

|B − C| ≈1. 3|B − C|.

|B − C| = 2sin αlimit and |M C| = |M Z| = 1, which implies that
|M − C| = |M − Z| =
Furthermore for acute isosceles triangle with smallest angle equal to αlimit,
it holds that |M − C| > |M − B| and |M − Z| > r. Assuming r = 1, after
some computation we get |B − C| < 0.4 and| M − B| > 0.98 which implies
|M − C| > 2.4|B − C|, and |M − Z > 2.5|B − C|. Consequentely the following
theorem can be stated:

1

2 sin αlimit

Theorem 4. For acute Delaunay terminal triangles, there exist constants
CC > 1, CD > 1 such that

|M − C| ≥ CC|B − C| and |M − D| ≥ CD|B − C|.

7 Elimination of Too-Obtuse Triangles

7.1 Elimination of Too Obtuse Triangle MAC

Let triangle tA = M AC be the obtuse triangle resulting from bisecting terminal 
edge BA of triangle BAC, and assume that MAC remains in the mesh
after the Delaunay insertion of M. We consider the case in which the largest
angle of triangle M AC is greater than 2π/3, in which case we refer to M AC
as a too-obtuse triangle. See Figure 9. According to Theorem 1, M AC can
not become a terminal triangle in the mesh and will be necessarily eliminated
by swapping of edge CA, when another terminal edge midpoint M1, is inserted 
in a neighbor terminal edge E associated to Lepp(M AC). This can be
∗ such
performed by processing either triangle M AC or another bad triangle t
that Lepp(t

∗) intersects Lepp(M AC).

Consider the case shown in Figure 9, in which the neighboring triangle of
M AC on edge AC is triangle ACD and terminal edge E is either AD or CD
(cid:4) when E is equal to CD). Then the following
(in Figure 9, D is denoted as D
constraints apply to M1:

554

M.-C. Rivara

(i) D must be in the exterior of CC(M AC)
(ii) M1 must be in the interior of CC(M AC) in order that the swapping of
AC ≤
(iii) Theorem 1 applies, implying that angle DCA ≤ 2π/3 (or angle D

edge CA applies.

(cid:4)

2π/3), which restricts M1 to the shadowed region of Figure 9.

J

D

X

C

B

Z

D’

A

M1

Y

M

Fig. 9. DA (or D
where angle JCA = angle XY A = angle CY Z = 2π/3.

C) terminal edge implies that M1 must belong to region XY Z

(cid:4)

The following Lemma presents some useful geometrical properties to state
angle bounds on the smallest angle of neighbor terminal triangle DAC as a
function of the size of angle CM A.

10(a));

Lemma 5. Consider triangle MAC and the line JC such that angle JCA=2π/3
as shown in Figure 10. Then
(a) If angle CM A = 120◦, then JC is tangent to CC(M AC) at C (see Figure
(b) If angle CM A > 120◦, then JC intersects CC(M AC) at a point G (see
(c) If angle CM A = 150◦, then the triangle GCA is isosceles with angles
(d) If angle CM A ≥ 150◦, the angle CAD ≥ 30◦ and the smallest angle of

Figure 10(b));
, 120◦;
30◦

, 30◦

triangle CAD is always at D.

Remark Note that according to Theorem 2 and Lemma 2, triangle M AC
is almost isosceles. This implies that for the limit case where angle CM A =
120◦, the smallest angle of triangle MAC is greater than or equal to αlimit
Lemma 6. Consider triangle MAC having neighbor terminal edge AD of midpoint 
M1. If angle CMA > 120◦, then M1 belongs to region KG’UV in Figure
11, where angle KLA = 120◦, VL ⊥ CA, and U is midpoint of VA. Furthermore 
angle CAD ≥ angle CAG.

Proof Part (b) of Lemma 5 applies. Thus D must be situated in the
exterior of CC(M AC) and to the right of line JG in Figure 10(b), which
allows to ﬁnd the region for M12

A Study on Delaunay Terminal Edge Method

555

J

J

G

120º

C

A

120º
M

(a)

120º

C

A

M

(b)

Fig. 10. (a) angle CM A = 120
◦
angle CM A > 120

implies that JC intersects CC(M AC) at a pointG.

◦

implies JC is tangent to CC(M AC) at C; (b)

V

U

A

J

K

D

G

C

G’

L

M

Fig. 11. Largest angle of triangle CMA impose constraints on neighbor terminal
triangle DCA; D in region JGKV by above CC(MAC) and to the right of JG, and
M1 in KG’UV.

Figure 12 shows the case in which F F

(cid:4) is a terminal edge. Here the constrains 
on M1 also assure that points unnecesarily close to midpoint M and
to previous points A, C, F, F

(cid:4) are not inserted.

7.2 Too-Obtuse Triangles of the Initial Mesh

Lemma 5 and Lemma 6 are indeed valid for any non-constrained too-obtuse
triangle in a CDT, and consequently the results of the proceding section also
apply to the triangles of the initial mesh. Note however that the remark which
is below Lemma 5 does not apply, and an initial too-obtuse triangle can have
a small smallest-edge corresponding to a local feature size of the geometry.

Consider now the case where a sequence of non-constrained too-obtuse
triangles appear in the initial CDT. This represents an initial conﬁguration
which ends either with a constrained edge (this is mandatory if the last triangle
is too-obtuse) or with a couple of terminal triangles. In any case the insertion

556

M.-C. Rivara

F

1M

M

C

F’

A

Fig. 12. FF’ is terminal edge in Lepp(CMA) implying that midpoint M1 belongs
to the shadowed region.

of a terminal edge midpoint M in general implies the big improvement of a
subsequence of too-obtuse triangles, where the circumcircle of each triangle
of the subsequence contains M.

8 Improvement Steps

The results of last section guarantee that M1 is not inserted near to previous
vertices A, C, neither too close to the midpoint of CA. Furthermore the Delaunay 
insertion of M1 eliminates triangle CMA by introducing new triangles
t1, t2 as shown in Figure 13, which are both less obtuse than triangle CM A.
If M1 is inside circumcircle CC(M AC) and far from its boundary, both triangles 
t1, t2 are better than triangle MAC and even more, they can be good
triangles. However if M1 is close to the circumcircle boundary, the smallest
angle(s) of vertex M1 can be close to, or even can be worst than the smallest
angle of triangle BAC (in the case that triangle BAC is acute).

In this section we prove that after a ﬁnite number of point insertions (usually 
one or two additional point insertions) a signiﬁcant discrete improvement

M1

t 1

t 2

C

B

A

M

Fig. 13. M1 close to the circumcircle introduces bad triangles t1, t2.

A Study on Delaunay Terminal Edge Method

557

is achieved in the smallest angles involved. Consequentely slow angle improvement,
 neither slow angle worsening does not happen throughout the process.

We need to consider two cases:
Case 1: M M1 is a terminal edge.

M1

M2

t~

1

~
t2

C

A

M

Fig. 14. M1M is a terminal edge.

Case 2: t1, t2 are Lepp triangles. Here we assume that t2 belongs to
Lepp(t1), which implies that the longest edge of t2 is larger than the longest
edge of t1.

Thus the following result holds:

Theorem 5. Consider that M1 is close to the circumcircle boundary as shown
in Figure 13. Then a signiﬁcant discrete improvement of the smallest angles
of the triangles t1, t2 is attained by inserting a ﬁnite number of terminal edge
midpoints inside CC(t2).

Proof Case 1. Here t1, t2 are terminal triangles (one obtuse and one acute).
Then by Delaunay insertion of midpoint M2 (see Figure 14), the triangles
t1, t2 are replaced by highly improved triangle ˜t1, ˜t2 according to Theorem 2
and Lemma 2. Note also that this implies the introduction of bad too-obtuse
triangles M1CM2 and M1M2A, whose elimination will be be performed by
edge swapping.

Case 2. Since M1 is inside circumcircle CC(M AC) and close to its boundary,
 this implies that both CC(t1) andCC (t2) are approximately equal to
CC(M AC). So both triangles t1, t2 are eliminated by inserting a point M2
inside CC(t2) unless M2 is too close to the boundary of CC(t2) but outside
CC(t1).

We need to consider three cases:

(i) M1A is terminal edge and M2 is midpoint of M1A
(ii) M2 is midpoint of a neighbor terminal edge and is far from the boundary

of CC(t2).

(iii) M2 is near to the boundary of CC(t2)

558

M.-C. Rivara

In the case (i), the insertion of M2 produces highly improved, more equilateral 
triangles (see Figure 15(a)). Note that triangle M2M A is the best longest
edge son of triangle M1M A, for which the angle bounds of Theorem 2 and
Lemma 2 apply. Note also that triangle M1CM2 is an obtuse longest edge son
of better triangle M1CA.

M1

M2

C

A

C

M

(a)

M1

t~

3

t~

2

t~

1

M

(b)

M2

A

Fig. 15. (a) M1A is a terminal edge; (b) M2 is midpoint of neighbor terminal edge
and far from the boundary of CC(t2).

For the case (ii), the insertion of M2 produces a conﬁguration of better 
triangles ˜t1, ˜t2, ˜t3 (see Figure 15(b)) similar to that of case (i), where
CC(M2M A) contains the midpoint of edge CM2 and probably the midpoint
of edge CM1. Thus if any of these triangles is not acceptable, its processing
will imply the insertion of either the midpoint of CM2 and / or the midpoint
of CM1 which will produce a signiﬁcant discrete improvement of the current
bad angles without introducing too-obtuse angles.

For the case iii) we need to consider in turn two cases: iii(1) M2 is inside
CC(t1). Here the insertion of M2 close to the boundary of CC(t2) implies the
conﬁguration of Figure 16(a), where either CM1 or CM2 becomes a terminal
edge with midpoint M3, in the interior of CC(t1), whose Delaunay insertion
produces signiﬁcant discrete improvement of the smallest angles. Figure 16(a)
illustrates the case where M3 is midpoint of CM2; note that CM M3 is the
best longest edge son of trianlge CM M2, edge M M2 is swapped by edge M3A
which eliminates the smallest angle at M2 introducing highly more equilateral
triangles; moreover angle CM1M3 > angle CM1M.

iii(2) M2 is outside CC(t1). Here the insertion of M2 implies the conﬁguration 
of Figure 16(b), where M1M becomes a terminal edge with midpoint
M3, whose Delaunay insertion will produce highly improved triangles and
eventually one too-obtuse triangle2

A Study on Delaunay Terminal Edge Method

559

M1

M3

M 2

M1

M3

M

C

A

C

A

M

(a)

M

(b)

Fig. 16. M2 close to the boundary of CC(t2) produces terminal edges inside CC(t2)
a) M2 is inside CC(t1); (b) M2 is outside CC(t1).

9 Algorithm Termination

,

In the case that an acute bad triangle t is being processed, an intermediate
worst too obtuse triangle tA is introduced and eliminated by edge swapping
(tA not necessarily belongs to an intermediate Delaunay triangulation). As
discussed in
8, this operation can introduce a bigger acute triangle that is
worse than t as shown in Figure 13. We will show that only a ﬁnite chain of
worsening triangles can occassionally appear in the mesh. Indeed the following
more general result holds:

Lemma 7. Only a ﬁnite sequence of worsening and / or lightly improving
too-obtuse triangles can (rarely) appear in the processing mesh.

i=1, and worst obtuse triangles {ti

A

Proof Firstly assume that there exists an inﬁnite sequence of monotoni-
}∞
cally worst acute triangles {ti}∞
i=1, where
A) is bigger than CC(ti) and contains a point Pi (a
each circumcircle CC(ti
previous point or an added point) close to the circumcircle boundary and far
A, consequently edge swapping applies producing a worst bigger acute
from ti
triangle ti+1, a worst bigger ti+1
A ), for
i = 1, 2, ... However since the geometry is ﬁnite eventually one of these circumcircles 
will cointain a boundary vertex and will intersect boundary constrained
edges, which will stop the generation of bigger triangles.
obtuse triangles {ti
worsening obtuse triangles2

An analogous reasoning can be used for a sequence of lightly improving
}, and for a sequence that combines lightly improving /

A and an increasing circumcircle CC(ti+1

A

Imposing the following assumption we can prove algorithm termination:

(I) Geometry assumption The PSLG geometry does not have constrained

angle less than π/2 (analogously to the Ruppert condition).

560

M.-C. Rivara

Theorem 6. Given the assumption (I) and angle tolerance θtol ≤ αlimit, the
algorithm terminates.

,

Proof Consider a CDT of the input geometry data, and let tr be a right
constrained terminal triangle (with constrained right angle). Firstly we study
the constrained edge point insertion criterion of
3.1 for this kind of triangles.
We need to consider two cases: (i) If the smallest angle is α0 ≥ 30◦, then the
midpoint of the longest edge is Delaunay inserted in the constrained mesh,
which implies the introduction of two quality triangles, each one having one
constrained edge. (ii) Otherwise if α0 < 30◦, the midpoint of the second
longest edge is Delaunay inserted in the constrained mesh. This introduces a
better right constrained triangle tr, and a too-obtuse triangle with constrained
smallest edge, which is consequently eliminated by swapping of its longest
edge. The process is repeated for the new right constrained triangle either
until this is a good triangle, or until its smallest angle is ≥ 30◦. In the latter
case, if the current tr becomes a terminal triangle, case (i) again applies.

Finally termination is based on the angle improvement results of theorems

2, 3, 5, lemmas, 1, 2 and on Lemma 72

10 Concluding Remarks

We have presented a geometrical characterization of unconstrained Delaunay
terminal triangles. Also, for a bad Delaunay terminal triangle t, we have presented 
bounds on the angles and bounds on the distance from the terminal
edge midpoint M to previous vertices. We have developed constraints on the
next points inserted after M, which allow to consider improvement steps that
use several consecutive point insertions to highly improve too obtuse triangles
introduced by longest edge bisection of t. We have used these results to prove
algorithm termination. In future research we expect to prove that optimal-size
triangulations are obtained.

Aknowledgements

I am happy to aknowledge helpful discussions with Bruce Simpson. I thank
the referees whose comments helped to improve this paper. This research has
been partially supported by Proyecto Fondecyt 1040713.

A Study on Delaunay Terminal Edge Method

561

References

1. M. Bern, D. Eppstein and J. Gilbert, Provably good mesh generation. Journal

Computer System Science, 48, 1994, 384–409.

2. L.P.Chew, Guaranteed-quality triangular meshes. Technical report TR-98-983,

Computer Science Department, Cornell University, Ithaca, NY, 1989.

3. P L George and H Borouchaki, Delaunay Triangulation and Meshing. Hermes,

1998.

4. H Borouchaki and P L George, Aspects of 2-D Delaunay Mesh Generation.
International Journal for Numerical Methods in Engineering, 40, 1997, 1957–
1975.

5. R.E.Bank, PLTMG: A Software Package for Solving Elliptic Partial Diﬀerential

Equations, Users’ Guide 8.0. SIAM, 1998.

6. M. C. Rivara, Algorithms for reﬁning triangular grids suitable for adaptive and
multigrid techniques, International Journal for Numerical Methods in Engineering,
 20, 1984, 745–756.

7. M. C. Rivara. Selective reﬁnement/dereﬁnement algorithms for sequences of
nested triangulations. International Journal for Numerical Methods in Engineering,
 28, 1989, 2889–2906.

8. M. C. Rivara and C. Levin. A 3d Reﬁnement Algorithm for adaptive and multigrid 
Techniques. Communications in Applied Numerical Methods, 8, 1992, 281–
290.

9. P Morin, R H Nochetto, and K G Siebert, Convergence of Adaptive Finite

Element Methods, SIAM Review. 44 631–658.

10. S. N. Muthukrishnan, P. S. Shiakolos R. V. Nambiar, and K. L. Lawrence.
Simple algorithm for adaptative reﬁnement of three-dimensional ﬁnite element
tetrahedral meshes. AIAA Journal, 33, 1995, 928–932.

11. N. Nambiar, R. Valera, K. L. Lawrence, R. B. Morgan, and D. Amil. An algorithm 
for adaptive reﬁnement of triangular ﬁnite element meshes. International
Journal for Numerical Methods in Engineering, 36, 1993, 499–509.

12. M. C. Rivara and G. Iribarren, The 4-triangles longest-edge partition of triangles
and linear reﬁnement algorithms, Mathematics of Computation, 65, 1996, 1485–
1502.

13. M. C. Rivara. New longest-edge algorithms for the reﬁnement and/or improvement 
of unstructured triangulations. International Journal for Numerical Methods 
in Engineering, 40, 1997, 3313–3324.

14. J Ruppert. A Delaunay reﬁnement algorithm for quality 2-dimensional mesh

generation. J. of Algorithms, 18, 1995, 548–585.

15. N. Hitschfeld and M.C. Rivara. Automatic construction of non-obtuse boundary
and/or interface Delaunay triangulations for control volume methods. International 
Journal for Numerical Methods in Engineering, 55, 2002, 803–816.

16. N. Hitschfeld, L. Villablanca, J. Krause, and M.C. Rivara. Improving the quality
of meshes for the simulation of semiconductor devices using Lepp-based algorithms.
 to appear. International Journal for Numerical Methods in Engineering,
2003.

17. M. C. Rivara, N. Hitschfeld, and R. B. Simpson. Terminal edges Delaunay (small
angle based) algorithm for the quality triangulation problem. Computer-Aided
Design, 33, 2001, 263–277.

562

M.-C. Rivara

18. M. C. Rivara and M. Palma. New LEPP Algorithms for Quality Polygon and
Volume Triangulation: Implementation Issues and Practical Behavior. In Trends
unstructured mesh generation, Eds: S. A. Cannan . Saigal, AMD, 220, 1997, 1–8.
19. T.J. Baker, Automatic mesh generation for complex three dimensional regions
using a constrained Delaunay triangulation. Engineering with Computers, 5,
1989, 161–175.

20. T. J. Baker, Triangulations, Mesh Generation and Point Placement Strategies.

Computing the Future, ed. D Caughey,John Wiley, 61–75.

21. J R Shewchuk, Triangle: Engineering a 2D Quality Mesh Generator and Delaunay 
Triangulator. First Workshop on Applied Computational Geometry, ACM,
1996, 124–133.

22. R.B. Simpson, N. Hitschfeld and M.C. Rivara, Approximate quality mesh generation,
 Engineering with computers, 17, 2001, 287–298.

23. M. Bern, Triangulations, In Handbook of Discrete and Computational Geometry

J. E. Goodman and J O’Rourke (eds.), CRC Press Boca Raton, 1997.

24. D. T. Lee and A. Lin Generalized Delaunay triangulation for planar graphs.

Disc and Comp Geom, bf 1, 1986, 201–217.

25. N.P. Weatherill and O. Hassan, Eﬃcient three-dimensional Delaunay triangulation 
with automatic point creation and imposed boundary constraints. IJMNE,
bf 37, 1994, 2005–2039.

26. D.L. Marcum and N.P. Weatherill, Aerospace applications of solution adaptive

ﬁnite element analysis. CAGEOD, bf 12, 1995, 709–731

27. I.G. Rosenberg and F. Stenger, A lower bound on the angles of triangles constructed 
by bisecting the longest side, Mathematics of Computation, 29, 1975,
390–395.

28. A. ¨Ungor, Oﬀ-centers: a new type of Steiner points for computing size-optimal
quality-guaranteed Delaunay triangulations, Latin 2004, LNCS 2076, 2004, 152–
161.

29. B. Simpson and M.C. Rivara, Geometrical mesh improvement properties of
Delaunay terminal edge reﬁnement, Geometric Modeling and Processing 2006,
Pittsburgh, 2006.

30. M.de Berg, M Van Kreveld, M. Overmars, O. Schwarzkopf, Computational

Geometry, algorithms and applications, second edition, Springer, 2000.

31. M. C. Rivara, New mathematical tools and techniques for the reﬁnement and
/ or improvement of unstructured triangulations, Proceedings 5th International
Meshing Roundtable, Pittsburgh, 77–86, 1996.

