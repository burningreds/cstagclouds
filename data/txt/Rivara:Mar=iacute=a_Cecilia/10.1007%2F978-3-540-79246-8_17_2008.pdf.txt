Lepp Terminal Centroid Method for Quality
Triangulation: A Study on a New Algorithm

Maria-Cecilia Rivara and Carlo Calderon

Department of Computer Science, University of Chile

{mcrivara,carcalde}@dcc.uchile.cl

Abstract. We introduce a new Lepp-Delaunay algorithm for quality
triangulation. For every bad triangle t with smallest angle less than a
threshold angle θ, a Lepp-search is used to ﬁnd an associated convex terminal 
quadrilateral formed by the union of two terminal triangles which
share a local longest edge (terminal edge) in the mesh. The centroid of
this terminal quad is computed and Delaunay inserted in the mesh. The
algorithm improves the behavior of a previous Lepp-Delaunay terminal
edge midpoint algorithm. The centroid method computes signiﬁcantly
smaller triangulation than the terminal edge midpoint variant, produces
globally better triangulations, and terminates for higher threshold angle
θ (up to 36◦). We present geometrical results which explain the better
performance of the centroid method. Also the centroid method behaves
better than the oﬀ-center algorithm for θ bigger than 25◦.

Keywords: mesh generation, triangulations, Lepp Delaunay algorithms,
Lepp centroid.

1 Introduction

In the last decade, methods that produce a sequence of improved constrained
Delaunay triangulations (CDT) have been developed to deal with the quality
triangulation of a planar straight line graph D. The combination of edge reﬁnement 
and Delaunay insertion has been described by George and Borouchaki
[3,2] and Rivara and collaborators, [8,9,10,11]. Mesh improvement properties for
iterative Delaunay reﬁnement based on inserting the circumcentre of triangles
to be reﬁned have been established by Chew, [1], Ruppert [12], and Shewchuk
[15]. Applications of this form of reﬁnement have been described by Weatherill
et al [17] and Baker [13]. Baker also published a comparison of edge based and
circumcenter based reﬁnement [14]. Algorithms based on oﬀ-center insertions
have been recently presented by ¨Ungor and collaborators [19,24]. Algorithms for
uniform triangular meshes are discussed in [16]. For a theoretical review on mesh
generation see the monograph of Edelsbrunner [4].

Longest edge reﬁnement algorithms. The longest edge bisection of any
triangle t is the bisection of t by the midpoint of its longest edge and the opposite

F. Chen and B. J¨uttler (Eds.): GMP 2008, LNCS 4975, pp. 215–230, 2008.
c(cid:2) Springer-Verlag Berlin Heidelberg 2008

216

M.-C. Rivara and C. Calderon

vertex (Figure 3). Longest edge based algorithms [5,6,7,8,9,11] were designed
to take advantage of the following mathematical properties on the quality of
triangles generated by iterative longest edge bisection of triangles [18,21,22],
and require of a resonably good quality input triangulation to start with.

Theorem 1. For any triangle t0 of smallest angle α0.
(i) The iterative longest edge bisection of t0 assures that for any longest edge son
t of smallest angle αt, it holds that αt ≥ α0/2, the equality holding only for equilateral 
triangles. (ii) A ﬁnite number of similarly distint triangles is generated.
(iii) The area of t0 tends to be covered by quasi equilateral triangles (for which
at most 4 similarly diﬀerent, good quality triangles are obtained by longest edge
bisection of t0).

Lepp (Delaunay terminal edge) midpoint method. The algorithm was
designed to improve the smallest angles in a Delaunay triangulation. This proceeds 
by iterative selection of a point M which is midpoint of a Delaunay terminal 
edge (a longest edge for both triangles that share this edge) which is then
Delaunay inserted in the mesh. This method uses the longest edge propagating
path associated to a bad quality processing triangle to determine a terminal edge
in the current mesh. The algorithm was introduced in a rather intuitive basis
as a generalization of previous longest edge algorithms in [9,10,11]. This was
supported by the improvement properties of both the longest edge bisection of
triangles (Theorem 1) and the Delaunay algorithm, and by the result presented
in Theorem 2 in next section. Later in [10] we discussed some geometrical properties 
including a (rare) loop case for angle tolerance greater than 22◦ and its
management. However, while empirical studies show that the method behaves
analogously to the circumcircle method in 2-dimensions [9,10,11], formal proofs
on algorithm termination and on optimal size property have not been fully established 
due to the diﬃculty of the analysis. Recently in [20] we have presented
some geometrical improvement properties of an isolated insertion of a terminal
edge midpoint M in the mesh. In [23] a ﬁrst termination proof is presented and
several geometric aspects of the algorithm are studied.

Lepp-centroid algorithm. In order to improve the performance of the previous 
Lepp midpoint algorithm, in this paper we introduce a new Lepp-centroid
algorithm for quality triangulation. For any general (planar straight line graph)
input data, and a quality threshold angle θ, the algorithm constructs constrained
Delaunay triangulations that have all angles at least θ as follows: for every bad
triangle t with smallest angle less than θ, a Lepp-search is used to ﬁnd an associated 
convex terminal quadrilateral formed by the union of two terminal triangles
which share a local longest edge (terminal edge) in the mesh. The centroid of
this terminal quad is computed and Delaunay inserted in the mesh. The process
is repeated until the triangle t is destroyed in the mesh.

In section 2 we introduce the basic concepts of longest edge propagating path
(Lepp), terminal edges and terminal triangles, and a relevant constraint on the

Lepp Terminal Centroid Method for Quality Triangulation

217

largest angle of Delaunay terminal triangles. In section 3 we describe the Leppmidpoint 
algorithm, discuss a special loop case that rarely occurs for angles
greater than 22◦, and a geometric characterization on Delaunay terminal triangles.
 We use this characterization to state improved angle bounds on the smallest
angles, and to prove that the new points are not inserted too close to previous
vertices in the mesh. In section 4 we formulate the new Lepp centroid algorithm
and state geometrical results which explain the better performance of the Lepp
centroid method, and guarantee that the loop case is avoided. In section 5 we
present an empirical study that compares the behavior of Lepp-centroid and
Lepp-midpoint methods. The centroid method computes signiﬁcantly smaller
triangulation than the terminal edge midpoint variant, produces globally better
triangulations, and terminates for higher threshold angle θ (up to 36◦). We also
show that the Lepp centroid method behaves better than the oﬀ-center algorithm
for θ > 25◦.

2 Concepts and Preliminary Results

An edge E is called a terminal edge in triangulation τ if E is the longest edge of
every triangle that shares E, while the triangles that share E are called terminal
triangles [9,10,11]. Note that in 2-dimensions either E is shared by two terminal
triangles t1, t2 if E is an interior edge, or E is shared by a single terminal
triangle t1 if E is a boundary (constrained) edge. See Figure 1 where edge AB is
an interior terminal edge shared by two terminal triangles t2, t3, while edge CD
is a boundary terminal edge with associated terminal triangle t3.

t 0

t 1

A

t 2

t 3

(a)

B

*
t0

t1

t 3

t 2

D

C

(b)

Fig. 1. (a) AB is an interior terminal edge shared by terminal triangles (t2, t3) associated 
to Lepp(t0) ={t0, t1, t2, t3}; (b) CD is a boundary terminal edge with unique
terminal triangle t3 associated to Lepp(t

0, t1, t2, t3}
∗

0) = {t
∗

For any triangle t0 in τ, the longest edge propagating path of t0, called
Lepp(t0), is the ordered sequence {tj}N+1
, where tj is the neighbor triangle
on a longest edge of tj−1, and longest-edge (tj) > longest-edge (tj−1), for j=1,...
N. Edge E = longest-edge(tN+1) = longest-edge(tN) is a terminal edge in τ and

0

218

M.-C. Rivara and C. Calderon

Fig. 2. R is the geometrical place of the fourth vertex D for Delaunay terminal triangles
ABC, ABD; (b) R reduces to one point when γ = 2π/3 (triangle ADB equilateral); (c)
For a bad terminal triangle BAC, Lepp-midpoint method inserts midpoint M

this condition determines N. Consequently either E is shared by a couple of
terminal triangles (tN , tN+1) if E is an interior edge in τ, or E is shared by
a unique terminal triangle tN with boundary (constrained) longest edge. See
Figure 1.

For a Delaunay mesh, an unconstrained terminal edge imposes the following

constraint on the largest angles of the associated terminal triangles [8,9,11]:

Theorem 2. For any pair of Delaunay terminal-triangles t1, t2 sharing a nonconstrained 
terminal edge, largest angle(ti) ≤ 2π/3 for i = 1, 2.
Proof. For any Delaunay terminal triangles BAC of longest edge AB (see Figure
2(a)), the third vertex D of the neighbor terminal triangle ABD must be situated
in the exterior of circumcircle CC(BAC) and inside the circles of center A, B
and radius AB. This deﬁnes a geometrical place R for D which reduces to one
point when (cid:2) BCA = 2π/3 where OZ = r/2 (see Figure 2(b)), implying that
R = φ when angle BCA > 2π/32

For a single longest edge bisection of any triangle t, into two triangles tA, tB, the
following result holds:

α

1

C

t

Β

tΑ

β
2

B

α

0

A

Fig. 3. Notation for longest edge bisection

Lepp Terminal Centroid Method for Quality Triangulation

219

Proposition 1. For the longest edge bisection of any triangle t (see Figure 3),
where BC ≤ CA ≤ BA, its holds that: a) α1 ≥ α0/2 which implies β2 ≥
3α0/2; b) If t is obtuse, α1 ≥ α0 which implies β2 ≥ 2α0
Lemma 1. The longest edge bisection of any bad triangle BAC produces an
improved triangle tB and a bad quality triangle tA. Usually tA has largest angle
greater than 2π/3 and it is consequentely eliminated by edge swapping.

3 Lepp (Terminal Edge) Midpoint Method

Given an angle tolerance θtol, the algorithm can be simply described as follows:
iteratively, each bad triangle tbad with smallest angle less than θtol in the current
triangulation is eliminated by ﬁnding Lepp(tbad), a pair of terminal triangles
t1, t2, and associated terminal edge l. If non-constrained edges are involved, then
the midpoint M of l is Delaunay inserted in the mesh. Otherwise the constrained
point insertion criterion described below is used. The process is repeated until
tbad is destroyed in the mesh, and the algorithm ﬁnishes when the minimum
angle in the mesh is greater than or equal to an angle tolerance θtol.

When the second longest edge CA is a constrained edge, the swapping of this
edge is forbidden. In such a case, the insertion of point M would imply that the
later processing of bad quality triangle MAC would introduce triangle M AM1
(see Figure 4(a)) similar to triangle ABC implying an inﬁnite loop situation.
To avoid this behavior we introduce the following additional operation, which
guarantees that M is not inserted in the mesh by processing triangle M1BA.

D

C

C

M
1

M
1

B

M

A

B

A

E
(a)

(b)

Fig. 4. (a) Over constrained edge CA, the insertion of M and M1 produces triangle
M AM1 similar to triangle BAC; (b) Insertion of M1 avoids this situation

Constrained edge point insertion: If CA is a constrained edge and BA is
not a constrained edge, then insert midpoint M1 of edge CA.

Special loop case. For Lepp-midpoint method, there is a rare special loop
case discussed in [10], where a triangle M AM1 similar to a bad-quality triangle

220

M.-C. Rivara and C. Calderon

ABC can be obtained for a non-constrained edge CA. This happens when quadritalerals 
BEAC and ADCM (see Figure 4(a)) are terminal quadrilaterals (where
edges BA and CA are terminal edges respectively) together with some nonfrequent 
conditions on neighbor constrained items. A necessary but not suﬃcient
condition on the triangle ABC for this to happen is that angle BM C ≥ π/3
which implies α0 ≥ αlimit = arctan
5 > 22◦ for obtuse triangle BAC
[10]. This loop case can be avoided by adding some extra conditions to the
algorithm. To simplify the analysis we restrict the angle tolerance to αlimit
which is slightly bigger than the limit tolerance, equal to 20.7◦, used to study
both for the circuncenter and the oﬀ-center methods. The algorithm is given
below:

15−√
√

3+

√

3

Lepp Midpoint Algorithm
Input = a CDT, τ, and angle tolerance θtol
Find Sbad = the set of bad triangles with respect to θtol
for each t in Sbad do

while t remains in τ do

Find Lepp (tbad), terminal triangles t1, t2 and terminal edge l. Triangle
t2 can be null for boundary l.
Select Point (P, t1, t2, l)
Perform constrained Delaunay insertion of P into τ
Update Sbad

end while

end for
Select Point (P, tterm1, tterm2, lterm)
if
of tterm2 is not constrained) or lterm is constrained then

(second longest edge of tterm1 is not constrained and second longest edge

Select P = midpoint of lterm and return

else

for j = 1,2 do

∗ then

if

ttermj is not null and has constrained second longest edge l
Select P = midpoint of l

∗ and return

end if
end for

end if

Angle and edge size bounds for Lepp midpoint method. The results of
this section improve results discussed in [23]. Firstly we present a characterization 
of Delaunay terminal triangles based on ﬁxing the second longest edge CA
and choosing the smallest angle at vertex A. The diagram of Figure 5 (a) shows
the possible locations for vertex B and the midpoint M. The diagram is deﬁned
as follows: (1) Since CB is a shortest edge, B lies inside the circular arc EF A
of centre C and radius |CA|. Consequently, M lies inside the circular arc E
A

F

(cid:6)

(cid:6)

Lepp Terminal Centroid Method for Quality Triangulation

221

C

α1

N

α0

A

C

A

22

F’

M

H’

G’

F

E

B

E’

H

I

G

(a)

w(22,19.25)

U(22,37) V(22,22)

H(30,23.79)

E(30,60)

F(60,30)

I(30,30)

G(45,45)

(b)

Fig. 5. (a) EFC and E’F’N’ are geometrical places for vertex B and midpoint M for a
terminal triangle BAC with respective smallest and largest angle of vertices A and C.
(b) Distribution of angles (α0, α1).

of centre N = (C + A)/2 and radius |CA|/2; (2) Since BA is a longest edge, B
lies outside the circular arc CF of centre A and radius |C − A|, and so M lies
(cid:6) of centre A, radius |CA|/2; (3) According to Theorem 2,
outside circular arc N F
the line CE makes an angle of 120◦ with CA.

Now we use the diagram of Figure 5(a) both to improve the bounds on α1
(Figure 3) and to bound the minimum distance from M to the previous neighbor
vertices in the mesh. To this end consider the distribution of the ordered pair
of angles (α0, α1) illustrated in Figure 5(b). As expected for the right triangles
(B over CG) α1 = α0. Also note that the ratio α1/α0 decreases from 2 to 1
along line EC (obtuse triangles with largest angle equal to 2π/3), while the
ratio α1/α0 increases from 1/2 to 1 along arc F to C (isosceles acute triangles
with two longest edges). Note that segment lines U W and EH correspond to
ﬁxed smallest angle equal to αlimit and 30◦ respectively.
Lemma 2. For acute Delaunay terminal triangles of smallest angle α, there
exist constants C1, C2 such that:

a) α0 ≤ 30◦ (B in region CIH) implies α1 ≥ C1α0 with C1 ≈ 0.79.
b) α0 ≤ αlimit (B in region CVW) implies α1 ≥ C2α0 C2 ≈ 0.866
c) The ratio α1/α0 approaches 1.0 both when α0 decreases, and when BAC
d) Using the notation of Figure 3, β2 ≥ (1 + C1)α0 for α0 ≤ 30◦.

becomes a right triangle.

Proof for (d) note that β2 = α1 + α0 (Figure 3)
In order to bound the minimum distance from M to previous vertices in the
mesh, we use both the properties of the longest edge bisection of a Delaunay
terminal triangle BAC and the constraint on the empty circuncircle. Note that
the circuncenter O of an obtuse (acute) triangle is situated in the exterior (the
interior) of the triangle. Furthermore for any non constrained Delaunay obtuse
triangle t, the distance d = M O from the circuncenter O to the longest edge

2

222

M.-C. Rivara and C. Calderon

BA (see Figure 2(c)) satisﬁes that 0 < d < r/2, where r is the cicunradius. We
will consider the limit cases d = r/2 and d = 0, which respectively correspond
to largest angles equal to 2π/3 and π/2, as well as the cases α = αlimit and
α = 14◦ to state bounds for obtuse and acute triangles.
Lemma 3. Consider any Delaunay terminal triangle t of smallest angle α and
terminal edge AB of midpoint M (Figure 2(c)), and let d(M) be the minimum
distance from M to any vertex of the mesh. Then there exists constants C1, C2,
C3, C4 such that
a) For acute t

b) For obtuse t

d(M) ≥ C1 | BC | with C1 > 1.3
d(M) ≥ C2 | BC | with C2 = 1

(i) α ≤ αlimit implies
(ii) α ≤ 30◦ implies
(i) α ≤ 14◦ implies d(M) ≥ C3 | BC | with C3 > 1
(ii) α ≤ αlimit implies d(M) ≥ C4 | BC | wiht C4 > 0.66
(iii) α ≤ 30◦ implies d(M) ≥ C5 | BC | with C4 = 0.5

> αlimit

c) obtuse t with α > 14◦ implies β2 > 28◦
The following theorem based on Proposition 1 and Lemmas 2 and 3 assure that
bad quality terminal triangles are quickly improved by introducing a sequence of
better triangles of edge CB, but not introducing points too close to the previous
vertices in the mesh. This improves the results presented in [23].
Theorem 3. Consider θtol ≤ αlimit. Then for any bad quality terminal triangle
of smallest angle α, a ﬁnite sequence of improved triangles tB (Figure 3), is
obtained until tB is good such that: (a) For α ≤ 14◦, none edge smaller than the
existing neighbor edges is inserted in the mesh. (b) Only at the last improvement
step (when α > 14◦) a small smallest edge, at least 0.66 times the size of a
previous neighbor smallest edge, can be occassionaly introduced in the mesh for
obtuse triangle t.

Remark: Note that the worst d(M) value is obtained for obtuse triangles, for
which in turn the angles are most improved.

4 Lepp Centroid Algorithm

The Lepp centroid method was designed both to avoid the loop situation discussed 
in section 3 and to improve the slower convergence reported in [11] for
θtol > 25◦ due to the fact that good quality acute terminal triangles can produce 
a slightly bad triangle tA (Figure 3). Instead of selecting an edge aligned
midpoint M, we select the centroid of a terminal quad deﬁned as the quadrilateral 
ACBD formed by a couple of terminal triangles BAC and BDA (Figure 6)
sharing an unsconstrained terminal edge. The algorithm is given below:

Lepp Terminal Centroid Method for Quality Triangulation

223

Lepp–Terminal-Centroid Algorithm
Input = a CDT, τ, and angle tolerance θtol
Find Sbad = the set of bad triangles with respect to θtol
for each t in Sbad do

while t remains in τ do

Find Lepp (tbad), terminal triangles t1, t2 and terminal edge l. Triangle
t2 can be null for boundary l.
Select Point (P, t1, t2, l)
Perform constrained Delaunay insertion of P into τ
Update Sbad

end while

end for

New Select Point (P, tterm1, tterm2, lterm)
if

lterm is constrained then
Select P = midpoint of lterm and return

end if
if
of tterm2 is not constrained) then

Select P = centroid of quad (tterm1, tterm2) and return

(second longest edge of tterm1 is not constrained and second longest edge

else

for j = 1,2 do

if

ttermj is not null and has constrained second longest edge l
if

ttermj does not contain the centroid then
Select P = midpoint of l

∗ and return

∗ then

else

end if

Select P = centroid of quad ((tterm1, tterm2)

end if
end for

end if

Geometrical properties of the centroid selection. Consider a terminal
quadrilateral ACBD formed by the union of a pair of terminal triangles ABC,
ABD sharing the terminal edge AB (Figure 6). In what follows we will prove
that inserting the terminal centroid Q, deﬁned as the centroid of the terminal
quadrilateral ACBD, always produce a better new triangle tB (Figure 3). Consider 
a coordinate system based on a bad quality triangle ABC of longest edge
BA, with center in B and x-axis over BA as shown in Figure 6. This is the
longest edge coordinate system introduced by Simpson [25]. As discussed in the
proof of Theorem 2, D must lie in the ’triangle’ U V W deﬁned by circumcircle
CC(ABC) and the lens V A and V B which are arcs of the circles of radious
BA and respective centers A and B. The coordinates of the vertices are B(0, 0),
A(lmax, 0), C(ac, bc) and D(aD, bD).

224

M.-C. Rivara and C. Calderon

C=(a  ,b  )c

c

B=(0,0)

M

α

O

A =(l     ,0)

max

Q

U

W

D=(a   ,b  )
D

D

V

Fig. 6. Estimating location of centroid Q

Let U(amin, bmin)

[W (amax, bmin] be the leftmost [rightmost] intersection
point of the lens and CC(ABC) as shown. The following lemma bounds the
location of Q by parameters determined by triangle ABC.
Lemma 4. Let the centroid Q have longest edge coordinates (aQ, bQ) with respect 
to triangle ABC. Then
amin/4 + lmax/4 < aQ < amax/4 + lmax/2, and bV /4 < bQ < (bc + bmin)/4
Proof. The proof follows from computing the centroid coordinates
aQ = (aC + aD + lmax)/4 and bQ = (bc + bD)/4
Corollary 1. For any terminal quad involving a pair of (obtuse acute) terminal
triangles, the quad centroid is situated in the interior of the acute triangle.
Corollary 2. Let ta, tb be terminal triangles forming a terminal quadrilateral,
and sharing a terminal edge, E. The shortest edge that results from the insertion
of the terminal centroid into the mesh is longer than the shortest edge that results
from inserting the midpoint of E.

Theorem 4. The algorithm does not suﬀer of the special loop case (section 3).

Proof. The centroid Q is not aligned with the vertices of the terminal edge
excepting the case of right isosceles triangles sharing a longest edge.
Remark 1. The constraint on θtol is not necessary and the analysis of the algorithm 
can be extended until θtol = 30◦.

5 Empirical Study and Concluding Remarks

We consider the 3 test problems of Figure 7 whose (bad quality) initial triangulations 
are shown in this ﬁgure. They correspond to a square with 400

Lepp Terminal Centroid Method for Quality Triangulation

225

Fig. 7. Initial triangulations for the test problems

equidistributed boundary points (Square400) and discretized circle having a discretized 
circular hole close to the boundary with 240 boundary points (Circle
240), a rectangle having 162 boundary points distributed as shown in Figure 7
(Rectangle 162). We also consider an A test case having 21 boundary points,
provided at the Triangle site. The initial triangulations are Delaunay excepting
the triangulation of the Rectangle 162 case, which is an example proposed by
Edelsbrunner [4] for the point triangulation problem.

Lepp centroid versus Lepp midpoint. We used the test cases of Figure 7
to compare the algorithms. We ran every case for diﬀerent θtol values, with the
input meshes of Figure 7, until reaching the maximum practical tolerance angle
θtol. We studied the mesh quality both with respect to the smallest angle and
with respect to the area quality measure deﬁned as q(t) = CA(t)/l2, where
A(t) is the area of triangle t, l is its longest edge and C is a constant such that
q(t) = 1 for the equilateral triangle. For both algorithms we studied the evolution
of the minimum smallest angle, the minimum area quality measure, the average
smallest angle, the normalized minimum edge size (wrt the minimum edge size
in the input mesh) and the average Lepp size. As expected the smallest angle
and the area quality measure show analogous behavior.

The empirical study shows that for every test problem, the Lepp centroid
method computes signiﬁcantly smaller triangulations than the Lepp midpoint
variant and terminates for higher threshold angle θtol. The Lepp centroid works
for θtol up to 36◦ while the previous midpoint method works for θtol ≤ 30◦
for these examples. If is worth noting that the Lepp centroid method produces
globally better triangulations having both signiﬁcantly higher average smallest
angle and a smaller percentage of bad quality triangles than the Lepp midpoint
variant for the same θtol value. To illustrate this see Figure 8 and Figure 9 which
respectively show the behavior of the minimum area quality measure and of the
average smallest angles for both algorithms. This is also illustrated in Figure 11
which shows the evolution of the area quality distribution for the Square 400
test problem for θtol equal to 10◦

, 25◦.

The normalized minimum edge size in the mesh (wrt the smallest edge in the
initial mesh) is shown in Figure 10. Note that this parameter behaves better

226

M.-C. Rivara and C. Calderon

Fig. 8. Evolution of the minimum area quality measure as a function of the number of
vertices for Lepp-centroid and Lepp-midpoint algorithms

Fig. 9. Evolution of the average smallest angle (degrees) as a function of the number
of vertices for Lepp-centroid and Lepp-midpoint algorithms

Fig. 10. Normalized minimum edge size (wrt the smallest edge in the initial mesh) as
a function of the angle tolerance θtol for centroid and midpoint algorithms

than predicted by the theoretical results of section 3, even for the Lepp midpoint
method. For all these problems the average Lepp size remains between 3 to
5, being this value slightly higher for the Lepp centroid method. Finally the
triangulation obtained with the Lepp-centroid method (and for the Triangle
method) for the Circles 240 test problem for θtol = 32◦ is shown in Figure 12.

Lepp Terminal Centroid Method for Quality Triangulation

227

Fig. 11. Area quality distribution for Square 400 for θtol = 10◦ (midpoint 230 points,
centroid 185 points) and θtol = 25◦ (midpoint 668 points, centroid 491 points)

Fig. 12. Triangulations obtained with Lepp-centroid and Triangle methods, θtol = 32◦

A comparison with Triangle. As reported previously in [11] the Lepp midpoint 
method showed a behavior analogous to the circumcenter algorithm implemented 
in a previous Triangle version [15]. Here we use the current Triangle
version based on the oﬀ-center point selection [19,24], to perform a comparison
with the Lepp centroid method for the test problems of Figure 7 and the A test
case. The evolution of the minimum angle in the mesh as a function of the number 
of vertices is shown in Figure 13 for the same set of θtol values used in the
preceding subsection. Note that for all these cases the Lepp-centroid method
worked well (with reasonable number of vertices inserted) for θtol up to 36◦,
while that the Triangle method worked for θtol up to 35◦ but increasing highly
the number of points inserted for θtol bigger than 25◦. Only for the small A-testcase,
 where basically boundary points are inserted, both algorithms have more

228

M.-C. Rivara and C. Calderon

Fig. 13. Evolution of the minimum angle in the mesh as a function of the number of
vertices for Lepp-centroid and Triangle methods

Number of points added

Minimum mesh

Square400

Circles240

Rectangle162

A-case

angle

Centroid Triangle Centroid Triangle Centroid Triangle Centroid Triangle

(degrees)

20
25
28
30
32
34
35
36

391
491
543
595
703
919
1264
1843

310
553
557
880
1202
1700
1997
-

274
335
371
416
493
722
911
1630

202
266
386
501
639
897
1811
-

217
271
286
310
363
490
570
5473

156
270
277
411
592
968
4853
-

30
43
44
49
57
85
121
239

27
35
45
47
63
81
112
-

similar behavior. A quantitative view of the behavior of both algorithms is given
in the Table below which shows the number of points added to the mesh for all
the test problems and diﬀerent values of θtol. The triangulations obtained for
the Circles240 case with the Lepp-centroid and Triangle methods for θtol = 32◦
are shown in Figure 12.

Lepp Terminal Centroid Method for Quality Triangulation

229

Concluding remarks. The results of this paper suggest that for Lepp-centroid
method the algorithm analysis can be extended until 30◦. In eﬀect, in section 3 we
prove that for the Lepp-midpoint method, under the constraint θtol ≤ αlimit ≈
22◦, and for improving a bad quality triangle ABC and its tB sons (Figure 3),
a small number of points is introduced which are not situated too close to the
previous vertices in the mesh. In exchange, the results of section 4 guarantee
both that the centroid method does not suﬀer of special looping conditions and
that smallest edges bigger than those introduced by the midpoint method are
introduced, which suggest that for the Lepp-centroid method the analysis can
be extended for θtol ≤ 30◦. In this paper we also provide empirical evidence
that show that the Lepp-centroid method behaves in practice better than the
oﬀ-center algorithm for θtol > 25◦.

Recently Erten and Ungor [24] have introduced algorithms that improve the
oﬀ-center performance with respect to the mesh size and the angle θtol by using
point selections depending on some triangle cases. We plan to improve the Leppbased 
algorithms also in this direction.

Acknowledgements. Research supported by DI ENL 07/03. We are grateful
with Bruce Simpson who contributed to an early formulation of this paper.

References

1. Chew, L.P.: Guaranteed-quality triangular meshes. Technical report TR-98-983,

Computer Science Department, Cornell University, Ithaca, NY (1989)

2. George, P.L., Borouchaki, H.: Delaunay Triangulation and Meshing. In: Hermes

(1998)

3. Borouchaki, H., George, P.L.: Aspects of 2-D Delaunay Mesh Generation. International 
Journal for Numerical Methods in Engineering 40, 1997 (1975)

4. Edelsbrunner, H.: Geometry and Topology for Mesh Generation. In: Cambridge
Monographs on Applied and Computational Mathematics, Cambridge Univ. Press,
Cambridge (2001)

5. Rivara, M.C.: Algorithms for reﬁning triangular grids suitable for adaptive and
multigrid techniques. International Journal for Numerical Methods in Engineering 
20, 745–756 (1984)

6. Rivara, M.C.: Selective reﬁnement/dereﬁnement algorithms for sequences of nested
triangulations. International Journal for Numerical Methods in Engineering 28,
2889–2906 (1989)

7. Rivara, M.C., Levin, C.: A 3d Reﬁnement Algorithm for adaptive and multigrid

Techniques. Communications in Applied Numerical Methods 8, 281–290 (1992)

8. Rivara, M.C.: New mathematical tools and techniques for the reﬁnement and /
or improvement of unstructured triangulations. In: Proceedings 5th International
Meshing Roundtable, Pittsburgh, pp. 77–86 (1996)

9. Rivara, M.C.: New longest-edge algorithms for the reﬁnement and/or improvement
of unstructured triangulations. International Journal for Numerical Methods in
Engineering 40, 3313–3324 (1997)

10. Rivara, M.C., Hitschfeld, N., Simpson, R.B.: Terminal edges Delaunay (small angle
based) algorithm for the quality triangulation problem. Computer-Aided Design 33,
263–277 (2001)

230

M.-C. Rivara and C. Calderon

11. Rivara, M.C., Palma, M.: New LEPP Algorithms for Quality Polygon and Volume
Triangulation: Implementation Issues and Practical Behavior. In: Cannan, S.A.
(ed.) Trends unstructured mesh generation, Saigal, AMD, vol. 220, pp. 1–8 (1997)
12. Ruppert, J.: A Delaunay reﬁnement algorithm for quality 2-dimensional mesh generation.
 J. of Algorithms 18, 548–585 (1995)

13. Baker, T.J.: Automatic mesh generation for complex three dimensional regions
using a constrained Delaunay triangulation. Engineering with Computers 5, 161–
175 (1989)

14. Baker, T.J.: Triangulations, Mesh Generation and Point Placement Strategies. In:
Caughey, D. (ed.) Computing the Future, pp. 61–75. John Wiley, Chichester (1995)
15. Shewchuk, J.R.: Triangle: Engineering a 2D Quality Mesh Generator and Delaunay
Triangulator. In: First Workshop on Applied Computational Geometry, pp. 124–
133. ACM Press, New York (1996)

16. Aurehammer, F., Katoh, N., Kokima, H., Ohsaki, M., Xu, Y.-F.: Approximating
uniform triangular meshes in polygons. Theoretical Computer Science, 879–895
(2002)

17. Weatherill, N.P., Hassan, O.: Eﬃcient three-dimensional Delaunay triangulation
with automatic point creation and imposed boundary constraints. International
Journal for Numerical Methods in Engineering (2039)

18. Rosenberg, I.G., Stenger, F.: A lower bound on the angles of triangles constructed

by bisecting the longest side. Mathematics of Computation 29, 390–395 (1975)

19. ¨Ungor, A.: Oﬀ-centers: a new type of Steiner points for computing size-optimal
quality-guaranteed Delaunay triangulations. In: Orejas, F., Spirakis, P.G., van
Leeuwen, J. (eds.) ICALP 2001. LNCS, vol. 2076, pp. 152–161. Springer, Heidelberg 
(2001)

20. Simpson, B., Rivara, M.C.: Geometrical mesh improvement properties of Delaunay
terminal edge reﬁnement. In: Kim, M.-S., Shimada, K. (eds.) GMP 2006. LNCS,
vol. 4077, pp. 536–544. Springer, Heidelberg (2006)

21. Stynes, M.: On Faster Convergence of the Bisection Method for certain Triangles.

Mathematics of Computation 33, 1195–1202 (1979)

22. Stynes, M.: On Faster Convergence of the Bisection Method for all Triangles. Mathematics 
of Computation 35, 1195–1202 (1980)

23. Rivara, M.C.: A study on Delaunay terminal edge method. In: P´ebay, P.P. (ed.)
Proceedings of the 15th International Roundtable, pp. 543–562. Springer, Heidelberg 
(2006)

24. Erten, H., ¨Ungor, A.: Triangulations with locally optimal Steiner points. In:
Belyaev, A., Garland, M. (eds.) Eurographics Symposium on Geometry Processing
(2007)

25. Simpson, R.B.: Gometry Independence for a Meshing Engine for 2D Manifolds.

International Journal for Numerical Methods in Engineering, 675–694 (2004)

