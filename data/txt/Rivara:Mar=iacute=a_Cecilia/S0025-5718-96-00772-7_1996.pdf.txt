MATHEMATICS OF COMPUTATION
Volume 65, Number 216
October 1996, Pages 1485{1502

THE 4-TRIANGLES LONGEST-SIDE PARTITION OF

TRIANGLES AND LINEAR REFINEMENT ALGORITHMS

MAR(cid:19)IA-CECILIA RIVARA AND GABRIEL IRIBARREN

Abstract. In this paper we study geometrical properties of the iterative 4triangles 
longest-side partition of triangles (and of a 3-triangles partition), as
well as practical algorithms based on these partitions, used both directly for the
triangulation re(cid:12)nement problem, and as a basis for point insertion strategies
in Delaunay re(cid:12)nement algorithms. The 4-triangles partition is obtained by
joining the midpoint of the longest side with the opposite vertex and the midpoints 
of the two remaining sides. By means of simple geometrical arguments
we show that the iterative partition of obtuse triangles systematically improves
the triangles (while they remain obtuse) in the following sense: the sequence
of smallest angles monotonically increases while the sequence of largest angles
monotonically decreases in an amount (at least) equal to the smallest angle of
each iteration. This allows us to improve the known bound on the smallest
angle (without making use of previous results), and to obtain a better a priori 
bound on the number of similarly distinct triangles, as a function of the
geometry of the initial triangle. Numerical evidence, showing that the practical 
behavior of the 4-triangles partition is in complete agreement with this
theory, is included. A 4-triangles re(cid:12)nement algorithm is also discussed and
illustrated. Furthermore, we show that the time cost of the algorithm is linear
independently of the size of the triangulation.

1. Introduction: The triangulation refinement problem

During the last 10 years an increasing e(cid:11)ort has been devoted to the development 
of adaptive and/or multigrid (cid:12)nite element methods [1, 4, 13, 14]. In this
context, adaptivity of the grid is the central feature that relieves the user of critical
decisions and allows use of all ﬂexibility of the (cid:12)nite element method for getting
a minimum number of vertices. In this sense, the generation of the discretization
(triangulation) should not be a (cid:12)rst separate step of the (cid:12)nite element solution
process, but a dynamic adaptive process. In order to deal with singular solutions,
the capability for managing local re(cid:12)nement of the discretization is indispensable,
and mesh re(cid:12)nement algorithms that maintain the nondegeneracy of the elements
and the conformity and smoothness of the grid are certainly desirable. Conformity
refers to the requirement that the intersection of nondisjoint triangles is either a
common vertex or a common side, and the smoothness condition states that the
transition between small and large elements should be smooth.

The algorithms based on the longest-side bisection of triangles were developed
to deal with this speci(cid:12)c question [11, 12, 13, 14, 15, 16]. They guarantee the

Received by the editor September 5, 1994 and, in revised form, May 30, 1995.
1991 Mathematics Subject Classi(cid:12)cation. Primary 65M50, 65N50, 65M60, 65N30, 51N30,

51M15; Secondary 65Y25, 68U05, 65M55.

c(cid:13)1996 American Mathematical Society

1485

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-use1486

MAR(cid:19)IA-CECILIA RIVARA AND GABRIEL IRIBARREN

construction of good-quality irregular and nested triangulations. This is due both
to the boundedness condition on the small angles of the triangles generated, and
to the natural re(cid:12)nement propagation strategy outside the target re(cid:12)nement area
(which ensure the construction of smooth irregular triangulations). Furthermore, in
spite of this inherent propagation strategy, the time cost of this kind of algorithms
is linear, independently of the size of the triangulation [19].

The algorithms have been successfully used to implement adaptive (and adaptive
multigrid) software in two dimensions [8, 10, 13, 14], and have been generalized and
used in the 3-dimensional context [5, 7, 18]. Dere(cid:12)nement algorithms, suitable to
re(cid:12)ne and dere(cid:12)ne the mesh in the course of adaptive computations, such as needed
in complex time-dependent problems (which require moving regions of re(cid:12)nement)
have also been developed [16]. Recently, the 2D algorithms have been used both for
surface (cid:12)tting, by means of automatic and adaptive Powell-Sabin Splines over triangulations 
[3], and to develop parallel re(cid:12)nement algorithms for complex applications
[6, 22]. Longest-side based partitions of triangles have also been the basis of point
insertion strategies that ensure the construction of good-quality triangulations, for
local Delaunay re(cid:12)nement algorithms [2, 10].

It should be pointed out here that the triangulation re(cid:12)nement problem [17, 19] is
essentially di(cid:11)erent than the classical triangulation problem in the following sense:
instead of having a (cid:12)xed set of points to be triangulated, one has the freedom to
choose the points to be added in order to construct a mesh with a desired resolution.
The construction of the mesh is dynamically performed. Furthermore, it is possible
to exploit the existence of the reference triangulation (constructed for instance by
means of the Delaunay algorithm) in order to reduce the computational cost to
construct the re(cid:12)ned mesh.

By introducing a subregion R to de(cid:12)ne the re(cid:12)nement area (usually a changing
set of triangles in the adaptive context), a condition over the diameter (longest-
side) of the triangles, and a resolution parameter " to (cid:12)x the desired resolution,
the Triangulation Re(cid:12)nement Problem can be stated as follows: given an acceptable
triangulation of a polygonal region Ω, construct a locally re(cid:12)ned triangulation such
that the diameter of the triangles that intersect the re(cid:12)nement area R be less than
".

In the context of the triangulation re(cid:12)nement problem, the algorithms based on
the longest-side bisection of triangles bene(cid:12)t from a natural point insertion strategy
(longest-side midpoint insertion) which together with the boundedness condition on
the small angles generated and their inherent propagation strategy, guarantee the
construction of good-quality smooth irregular triangulations. On the other hand,
even when the Delaunay algorithm constructs the optimal mesh (the most equilateral 
one) for the classical triangulation problem (given a (cid:12)xed set of vertices), this
algorithm does not have a natural point insertion strategy that guarantees the construction 
of good-quality irregular triangulations when the algorithm is iteratively
used to re(cid:12)ne a mesh. Simple experiments with the \intuitive" centroid insertion
idea show that this strategy rapidly deteriorates the quality of the triangulations
(especially along the boundaries), even when global re(cid:12)nement is performed. To
illustrate this fact, Figure 1 shows three di(cid:11)erent steps of the global iterative Delaunay 
re(cid:12)nement of an initial simple triangulation (a single triangle). The centroid
of each triangle of the current triangulation was iteratively added as a point to be
inserted in each re(cid:12)nement step. After a few re(cid:12)nement steps, a quite unacceptable
triangulation is obtained (triangulation (c) in Figure 1).

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-useTHE 4-TRIANGLES LONGEST-SIDE PARTITION OF TRIANGLES

1487

Figure 1

Brieﬂy, in order to obtain robust local Delaunay re(cid:12)nement software, it is necessary 
to make use of a companion methodology that automatically introduces a
point distribution that (after arbitrary steps of local re(cid:12)nement) guarantees the
construction of smooth nondegenerate triangulations. As was pointed out previously,
 the longest-side based partition of triangles has been the basis to develop
mixed longest-side bisection Delaunay re(cid:12)nement algorithms [2, 10], which ensure
the construction of such triangulations. Thus, for instance, Penman and Grieve
[10] use a heuristic method that chooses between either a longest-side midpoint
insertion strategy, or a centroid insertion strategy, depending on the shape of the
triangles involved. On the other hand, Bova and Carey [2] have developed a more
sophisticated method that takes advantage of the fractal properties of the longestside 
bisection algorithms [2, 19] to introduce an automatic graded distribution of
points. In [10], triangulations of analogous quality to those obtained with Rivara
re(cid:12)nement algorithms have been reported.

It should be emphasized here that both the longest-side bisection re(cid:12)nement algorithms 
and the mixed (longest-side bisection) Delaunay re(cid:12)nement algorithms are
competitive linear algorithms for dealing with the triangulation re(cid:12)nement problem 
[19]. However, pure longest-side bisection-based algorithms are the most suitable 
ones in two important contexts: (1) in the adaptive re(cid:12)nement/dere(cid:12)nement
of triangulations such as needed in complex time-dependent problems [16]; (2)
in the practical use of multigrid (cid:12)nite element methods over irregular meshes
[4, 12, 13, 14, 15, 16] (since the algorithms guarantee the construction of nested
triangulations). Finally, it should be pointed out also that 3D longest-edge bisection 
re(cid:12)nement algorithms for tetrahedral meshes have shown to be very useful in
practice [5, 7, 18]. However, in this context there are no mathematical results available 
analogous to those of this paper or to those of references [20, 21] (which were
indeed the basis to initially develop the algorithms). Notice that the 3D problem
has been considered an interesting open problem in the Computational Geometry
(cid:12)eld [9].

The results we include here characterize in a geometrical sense the point distribution 
introduced by longest-side re(cid:12)nement algorithms in two dimensions, and were

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-use1488

MAR(cid:19)IA-CECILIA RIVARA AND GABRIEL IRIBARREN

found looking for new paths to deal with the 3-dimensional problem. In particular,
in this paper we show that the iterative 4-triangles partition of obtuse triangles
systematically improves the triangles (while they remain obtuse) in the following
sense: the sequence of smallest angles monotonically increases while the sequence of
largest angles monotonically decreases in an amount (at least) equal to the smallest
angle of each iteration. This allows us to improve the known bound on the smallest 
angle, without making use of the previous result on the longest side bisection
[20, 21], and to obtain a better a priori bound on the number of similarly distinct
triangles as a function of the geometry of the triangle. We also include numerical
evidence showing that the practical behavior of the 4-triangles partition is in complete 
agreement with the theory. A practical 4-triangles re(cid:12)nement algorithm is
also introduced, discussed and illustrated. Finally, we show that the time cost of
this algorithm is linear independently of the size of the triangulation.

2. The 4-triangles partition: Definitions, notations and

statement of the problem

De(cid:12)nition 1. The longest-side partition of any triangle t is obtained by joining
the midpoint of the longest side of t with the opposite vertex. The 4-triangles
longest-side partition is obtaining by joining the midpoint of the longest side with
the opposite vertex and the midpoint of the two remaining sides (see Figure 2(b)).

Notation. For any triangle t, its sides and angles will be respectively denoted in

decreasing order r1 (cid:21) r2 (cid:21) r3, and γ (cid:21) (cid:12) (cid:21) (cid:11). In addition, r4 will be the new side

generated by joining the midpoint of the longest side and the opposite vertex (side
CD in Figure 2(b)). Furthermore, t((cid:11); (cid:12); γ) will be the class of similar triangles
of angles γ (cid:21) (cid:12) (cid:21) (cid:11).
Interchangeably, t will represent an element of the class
t 2 t((cid:11); (cid:12); γ) or the class itself.

Since the (cid:12)rst 4-triangles longest-side partition of any triangle t0 introduces new

sides parallel to the sides of t0, the following results hold:

Proposition 1. (a) The (cid:12)rst 4-triangles longest-side partition of any triangle t0
produces two triangles similar to t0 and two (potentially) new similar triangles t1
(see Figure 2(b)).

(b) The iterative 4-triangles longest-side partition of any triangle t introduces

(at most) one new distinct (up to similarity) triangle for iteration. 2

In the remainder of this paper we shall always consider the triangle t1 (the unique
distinct triangle obtained after the (cid:12)rst 4-triangles partition of t0) which has the
midpoints of r1 and r2 as vertices (see Figure 3).

r3

2r

0t

r1
( a )

C

t1

t1

D

( b )

t0

A

Figure 2

t0

B

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-useTHE 4-TRIANGLES LONGEST-SIDE PARTITION OF TRIANGLES

1489

2r

t 1

r 1

Figure 3

Notation. For the triangle t1, we shall call ", (cid:27), (cid:14) the angles of t1 having, respectively,
 the following vertices: the vertex of t0 opposite to the longest side, the
midpoint of r1, and the midpoint of r2.

The (cid:12)rst aim of this paper is to prove that for general obtuse triangles, the
iterative 4-triangles longest-side partition, produces a (cid:12)nite sequence of \better"
triangles satisfying the properties illustrated in the following diagram until tN becomes 
nonobtuse,

!

t0

(obtuse)

(cid:11)0
γ0

t1

(obtuse)
(cid:11)1 > (cid:11)0

γ1 (cid:20) γ0 − (cid:11)1

!

t2

(obtuse)
(cid:11)2 > (cid:11)1

γ2 (cid:20) γ1 − (cid:11)2

! : : : !

tN−1

!

tN

(obtuse)

(cid:11)N−1 > (cid:11)N−2

γN−1 (cid:20) γN−2 − (cid:11)N−1

(NONOBTUSE)

(cid:11)N > (cid:11)N−1

γN (cid:20) γN−1 − (cid:11)N

Diagram 1

where (cid:11)i and γi are respectively the smallest and the largest angles of triangle ti.
The arrow emanating from triangle tj to triangle tj+1 should be understood in the
following sense: the ((cid:12)rst) 4-triangles longest-side partition of triangle tj produces
the new (similarly distinct) triangle tj+1.

Notice that, according to the diagram, the smallest angles monotonically increase,
 while the largest angles are clearly decreasing in an amount (at least) equal
to the smallest angle of the current iteration. This allows one to establish a sharp
a priori bound for N .

Furthermore, in the case of nonobtuse triangles, at most two similarly distinct
triangles are generated (by iterative use of the 4-triangles longest-side partition).
This means that for each nonobtuse triangle t, there exists an obtuse triangle ~t such
that t generates ~t and ~t generates t. As a consequence, the process described in the
preceding diagram can only (cid:12)nish in one of the three ways illustrated in Diagram
2.

In Diagram 2, tN−1 and tN are the last two triangles of Diagram 1. Notice that
in the three cases the process (cid:12)nishes with a closed loop : either two triangles are
generated alternately (cases 1 and 3), or the right triangle generates itself (case
2). Only in the third case can tN +1 be \worse" than the preceding triangles, in
the sense that a triangle can be generated having a largest angle greater than the
preceding ones.

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-usee
d
s
1490

(1)

MAR(cid:19)IA-CECILIA RIVARA AND GABRIEL IRIBARREN
tN−1 (cid:10)

tN

γN−1 + γN = (cid:25)

obtuse

(2)

tN−1 !

nonobtuse

(cid:5)(cid:7) (cid:4)

?
t
N

γN = (cid:25)=2

obtuse

right-angled

(3)

tN−1 !

tN

(cid:10) tN +1

γN + γN +1 = (cid:25)

obtuse

nonobtuse

obtuse

Diagram 2

3. Properties of the 4-triangles longest-side partition of

nonobtuse triangles

The following lemma allows us to restrict the number of cases to be studied.

Lemma 1. The (cid:12)rst 4-triangles longest-side partition of any triangle t0 of sides
r1 (cid:21) r2 > r3 and angles γ0 > (cid:12)0 > (cid:11)0 produces a new triangle t1 (of angles
γ1 (cid:21) (cid:12)1 > (cid:11)1) such that

(a) γ1 6= ",
(b) (cid:11)1 6= (cid:27).

Proof. First consider the case r1 = r2 > r3. This implies that t0 is nonobtuse,
γ1 = (cid:14) > (cid:25)=2 and (cid:11)1 = ", and the result holds. For the case r1 > r2 > r3, consider
triangle t1 equal to triangle ABC in Figure 4. In this (cid:12)gure, the angle " is opposite
side AB which is equal to r3=2, and angle (cid:27) is opposite side BC which is equal to
r2=2. Since r3=2 < r2=2, it follows that " < (cid:27), which in turn implies the result.
Remark. An ambiguity arises in the case r1 (cid:21) r2 = r3, which implies that " = (cid:27) (t1
is isosceles), and consequently, either γ1 = " = (cid:27) or (cid:11)1 = " = (cid:27). In order to be
consistent with Lemma 1, in the remainder of this paper we shall assume that γ1
= (cid:27) in the (cid:12)rst case and (cid:11)1 = " in the second case. With this convention, the
results of Lemma 1 are valid for any triangle t0 of sides r1 (cid:21) r2 (cid:21) r3 and angles
γ0 (cid:21) (cid:12)0 (cid:21) (cid:11)0.

C

3r

t

0

2r
2

t

1

A

Figure 4

Bg
t0

0

0

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-used
e
a
s
THE 4-TRIANGLES LONGEST-SIDE PARTITION OF TRIANGLES

1491

t2

Figure 5

The following theorem characterizes the (cid:12)rst partitions of nonobtuse triangles:

Theorem 1. If t0 is a nonobtuse triangle of largest angle γ0 (cid:20) (cid:25)=2, then t1 is an

obtuse triangle such that

(a) γ1 = (cid:14),
(b) γ0 + γ1 = (cid:25) and either t1 is an obtuse triangle (γ0 < (cid:25)=2), or t1 is a right

triangle (if γ0 = (cid:25)=2),

(c) the 4-triangles longest-side partition of t1 produces t0.
Proof. According to Figure 4, γ0 + (cid:14) = (cid:25), and since γ0 (cid:20) (cid:25)=2, clearly (cid:14) (cid:21) (cid:25)=2,
which implies γ1 = (cid:14) and γ0 + γ1 = (cid:25). Furthermore, because of γ1 = (cid:14) in Figure 4,
the partition of t1 must be necessarily performed as illustrated in Figure 5, which
produces a triangle t2 of sides parallel to the sides of t0, so that t2 is similar to
t1.

Corollary 1. If t0 is a right triangle, then t1 = t0 and the iterative partition of t0
only produces t0 itself.

Corollary 2. The iterative 4-triangles longest-side partition of any nonobtuse triangle 
with γ0 < (cid:25)=2 produces two distinct (up to similarity) triangles t0 and t1 such
that triangle t1 satis(cid:12)es the properties of Theorem 1. Furthermore, t1 only produces
the triangles t0 and t1.

4. Properties of the 4-triangles longest-side partition of

obtuse triangles

The following theorem characterizes the triangles obtained by means of the 4triangles 
longest-side partition of obtuse triangles.

Theorem 2. The 4-triangles longest-side partition of any obtuse triangle t0 (γ0 >
(cid:25)=2) produces a new triangle t1 of smallest angle (cid:11)1 > (cid:11)0 and largest angle γ1 (cid:20)
γ0 − (cid:11)1. Furthermore, either γ1 = (cid:27) while t1 remains obtuse; or γ1 = (cid:14) and
γ0 + γ1 = (cid:25), when t1 becomes nonobtuse.
Proof. Notice that the hypothesis γ0 > (cid:25)=2 implies γ0 > (cid:12)0 (cid:21) (cid:11)0 and r1 > r2 (cid:21) r3.
According to Lemma 1, after one 4-triangles longest-side partition of t0, the largest
angle γ1 of t1 can be either (cid:27) or (cid:14) in Figure 3.
In the case γ1 = (cid:14), clearly γ1 = (cid:25) − γ0 < (cid:25)=2 and t1 is a nonobtuse triangle,
(cid:11)1 = " < (cid:11)0 and γ1 (cid:20) γ0− (cid:11)1. In the case γ1 = (cid:27), the angles of t1 are distributed
as shown in Figure 6(b) (according to Lemma 1), where (cid:11)1 can be either " or
(cid:14). We shall show that in both cases the hypothesis holds. Consider (cid:11)1 = " and
triangle ABC. In this triangle, the angles " and (cid:11)0 are respectively opposite the

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-use1492

MAR(cid:19)IA-CECILIA RIVARA AND GABRIEL IRIBARREN

3r

2r

r4

1r

( a )

C
g 1

g 1
A

( b )

B

0

Figure 6

sides r1=2 and r4. Because of the position of γ1 it follows that r2=2 (cid:21) r4, and since
r1 > r2, necessarily r1=2 > r2=2 (cid:21) r4, which implies " > (cid:11)0. Furthermore, the
angle of vertex C is γ0 = γ1 + ", which implies γ1 = γ0 − ", and the hypothesis
holds. Consider now the angles (cid:11)1 = (cid:14) and (cid:11)0. In this case, (cid:14) = (cid:25) − γ0, and since
γ0 = (cid:25) − (cid:11)0 − (cid:12)0, it follows that (cid:14) > (cid:11)0 and (cid:11)1 > (cid:11)0. Furthermore, the angle of
vertex C is γ0 = γ1 + (cid:15) = γ1 + (cid:12)1, which implies γ1 = γ0 − (cid:12)1 (cid:20) γ0 − (cid:11)1.

The following theorem characterizes the iterative partition of obtuse triangles.

Theorem 3. The iterative 4-triangles longest-side partition of any obtuse triangle

t0 produces a (cid:12)nite sequence of \better" distinct (up to similarity) triangles ftigN

1

such that

(a) ti is obtuse for i = 1; 2; : : : ; N − 1, and tN is nonobtuse,
(b) (cid:11)j > (cid:11)j−1 for j = 1, : : : , N ,
(c) γj (cid:20) γj−1 − (cid:11)j for j = 1; 2; : : : , N ,
(d) the next partition of tN only (at most) produces a new obtuse triangle tN +1,

and at this point the generation of new triangles stops.

Proof. Parts (a), (b) and (c) follow from a direct iterative application of Theorem
2. Part (d) is a consequence of Theorem 1 and Corollaries 1 and 2.

Corollary 3. The iterative partition of any obtuse triangle t0 produces a sequence
of distinct (up to similarity) triangles ftigN
i , ti obtuse for i = 1, : : : ; N − 1 and tN
nonobtuse, such that (cid:11)j > (cid:11)0 and γj < γ0 − j(cid:11)0 for j = 1; 2; : : : ; N . In addition,
only (at most) a new obtuse triangle can be obtained by partition of tN .

Finally, Corollary 3 allows us to establish an a priori bound on the number of

distinct triangles generated as a function of the geometry of the initial triangle.

Theorem 4. For any obtuse triangle t, the number K of distinct (up to similarity)
triangles generated throughout the process is bounded as follows:

K (cid:20) d γ0−(cid:25)=3
Proof. From Corollary 3, the angle γN satis(cid:12)es

(cid:11)0

e + 1:

which implies N (cid:20) d γ0−(cid:25)=3
generated in iteration N + 1, then K (cid:20) N + 1 and the result holds.

(cid:25)=3 (cid:20) γN (cid:20) γ0 − N (cid:11)0;
e. Since at most a new distinct (obtuse) triangle is

(cid:11)0

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-usea
d
e
THE 4-TRIANGLES LONGEST-SIDE PARTITION OF TRIANGLES

1493

5. A 3-triangles partition

As a by-product of the study performed in the preceding sections, we have implicitly 
introduced a 3-triangles longest-side partition that also improves obtuse
triangles and that can be used to advantage (together with the pure longest-side
bisection) to perform re(cid:12)nement propagation in local re(cid:12)nement algorithms for
triangulations [12, 15].

De(cid:12)nition 2. The 3-triangles longest-side partition of any triangle t0 (of sides
r1 (cid:21) r2 (cid:21) r3 and angles γ0 (cid:21) (cid:12)0 (cid:21) (cid:11)0) is obtained by joining the midpoint of
the longest side r1 with the opposite vertex and the midpoint of side r2. (For an
illustration see Figure 7).

C

t 2

E

t 1

D

Figure 7

b 0

B

0a

A

This partition also improves obtuse triangles, as stated in Theorem 5.

Theorem 5. The 3-triangles longest-side partition of any obtuse triangle t0 (of
angles γ0 > (cid:12)0 > (cid:11)0) produces two new distinct (up to similarity) triangles ti =
ti(γi; (cid:12)i; (cid:11)i) which are better than t0 in the following sense:
γi < γ0 and (cid:11)i > (cid:11)0 f or i = 1; 2.

Proof. Clearly, two new (distinct) triangles are generated: triangles t1 and t2 of
Figure 7. For the triangle t1, the result follows directly from Theorem 2. Let us
consider triangle t2. First we shall study γ2, the largest angle of triangle t2. Clearly,
(cid:14) < γ0 and (cid:12)0 < γ0. Moreover, t0 is a nonisosceles, obtuse triangle, which implies
(cid:27) < (cid:25)=2 < γ0. Thus, γ2 < γ0. Now we shall consider (cid:11)2, the smallest angle of
triangle t2. Clearly, (cid:12)0 > (cid:11)0 and (cid:14) > (cid:25)=4 > (cid:11)0 while from Theorem 2 it follows
that (cid:27) = (cid:11)0 + " (cid:20) (cid:11)0 + (cid:11)1, which together implies (cid:11)2 > (cid:11)0.

6. Numerical experiments

In order to illustrate the practical behavior of the 4-triangles longest-side partition 
of triangles, we have included in Table 1 the sequence of distinct (up to
similarity) triangles generated for six di(cid:11)erent input triangles. In this table, each
triangle has been identi(cid:12)ed by its interior angles (in decreasing order), the input
triangle being the (cid:12)rst one of each column (iteration 0). For each sequence we have
also included the exact number of distinct (up to similarity) triangles generated, as
well as the a priori computed bound of Theorem 4.

Notice that the numerical results obtained are in complete agreement with the
theory: the iterative 4-triangles longest-side partition of obtuse triangles systematically 
improves the triangles (both the sequence of largest angles monotonically

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-used
s
d
e
1494

MAR(cid:19)IA-CECILIA RIVARA AND GABRIEL IRIBARREN

Table 1. Sequences of distinct triangles obtained by 4-triangles
longest-side partition of triangles

Triangle 1

Triangle 2

number of distinct triangles 15

number of distinct triangles 11

computed bound

45

computed bound

190

It.
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

γ
145.455
143.292
140.885
138.200
135.202
131.850
128.107
123.937
119.316
114.235
108.715
102.811
96.618
90.266
89.734
90.266

(cid:12)
32.595
34.545
36.708
39.115
41.800
44.798
48.150
51.893
56.063
60.684
65.765
71.285
77.189
83.382
83.907
83.382

(cid:11)
1.950
2.164
2.407
2.684
2.998
3.351
3.743
4.170
4.621
5.081
5.520
5.904
6.193
6.352
6.359
6.352

γ
173.972
173.216
172.245
170.952
169.148
166.462
162.066
153.735
133.923
84.274
95.726
84.274

(cid:12)

5.423
6.028
6.784
7.755
9.048
10.852
13.538
17.934
26.265
49.648
43.599
49.648

(cid:11)
0.605
0.756
0.971
1.293
1.804
2.686
4.396
8.331
19.812
46.077
40.676
46.077

Triangle 3

Triangle 4

number of distinct triangles 8

number of distinct triangles 4

computed bound

73

computed bound

It.
0
1
2
3
4
5
6
7
8

γ
169.900
167.721
164.371
158.625
146.921
117.268
63.237
116.763
63.237

(cid:12)

8.572
10.100
12.279
15.629
21.375
33.079
62.732
33.270
62.732

(cid:11)
1.527
2.180
3.349
5.747
11.704
29.652
54.031
29.967
54.031

γ
114.624
102.073
88.250
91.750
88.250

(cid:12)
54.900
65.376
77.927
74.623
77.927

7

(cid:11)

10.475
12.551
13.824
13.627
13.824

Triangle 5

Triangle 6

number of distinct triangles 3 number of distinct triangles 2

computed bound

5

computed bound

It.
0
1
2
3

γ
130.542
76.437
103.563
76.437

(cid:12)
27.127
54.105
39.659
54.105

(cid:11)

22.332
49.458
36.777
49.458

γ
116.565
90.000
90.000

(cid:12)
45.000
63.435
63.435

5

(cid:11)

18.435
26.565
26.565

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-useTHE 4-TRIANGLES LONGEST-SIDE PARTITION OF TRIANGLES

1495

decreases and the sequence of smallest angles monotonically increases). Furthermore,
 the partition of nonobtuse triangles produces reasonably good obtuse triangles,
 which in turn reproduce the same previous nonobtuse triangle, and so on,
alternately, as explained in Diagram 2 of x2 (the generation of new triangles stops
when a previously generated triangle is reobtained). More speci(cid:12)cally, triangles 1
and 5 of Table 1 illustrate case (1) of Diagram 2, while triangle 6 illustrates case
(2), and triangles 2, 3 and 4 illustrate case (3) of this diagram. Notice that in
practice the input triangles having the smallest (cid:12)0 produce better (cid:12)nal triangles
than those having the biggest (cid:12)0. It seems this is due to the fact that the sequence
of angles (cid:12) is also a monotonically increasing sequence.

7. A 4-triangles refinement algorithm

A 4-triangles re(cid:12)nement algorithm that uses 4-triangles partitions over the re-
(cid:12)nement region R (variable in the adaptive context) and both 3-triangles partitions
and longest-side bisections to assure conformity of the mesh (re(cid:12)nement propaga-
tion), has been studied, discussed and illustrated in [15]. Software that combines
this algorithm with an adaptive and multigrid (linear) (cid:12)nite element method has
been extensively discussed in [13, 14]. Numerical experiments performed with this
software to solve singular problems have shown that, in adaptive mode, the numerical 
rate of convergence of the (cid:12)nite element method approaches the maximum
theoretical rate of convergence predicted for linear (cid:12)nite elements [13, 14].

A simpler 4-triangles re(cid:12)nement algorithm (whose time cost is easier to analyze)
that only uses longest-side bisection of triangles in the re(cid:12)nement propagation step,
can be schematically described as follows:

Triangulation-re(cid:12)nement ((cid:28) , R, ")
While there exist triangles t 2 (cid:28) , t \ R 6= ? and diam(t) > " do

Perform 4-triangles bisection of each t with t\ R 6= ? and diam(t) > "
For each t 2 (cid:28) having 1, 2 or 3 nonconforming side midpoints P do
While P is nonconforming do

(cid:3)
Find the neighbor t
(cid:3)
Longest-side bisection ((cid:28) , t

)

of t (by the side containing P )

This algorithm makes use of the following recursive basic longest-side re(cid:12)nement

algorithm (to re(cid:12)ne a unique triangle t) [19]:

Longest-side bisection ((cid:28); t)
Perform a longest-side bisection of t

(Let P be the point generated)

While P is nonconforming do

(cid:3)
Find the neighbor t
(cid:3)
Longest-side bisection ((cid:28) , t

)

of t (by the side containing P )

Figure 8 illustrates the use of the 4-triangles re(cid:12)nement algorithm to perform one
re(cid:12)nement step over the simple re(cid:12)nement region R = ftg in the triangulation of
Figure 8(a). Here, (cid:12)rst a 4-triangles partition of triangle t was performed, followed
by the recursive longest-side bisection of the neighboring nonconforming triangles in
order to make the mesh conforming (i.e., to eliminate the nonconforming midpoints
1 and 2 in Figure 8(b)).

To conclude this section, Figures 9 and 10 illustrate the practical use of the
4-triangles re(cid:12)nement algorithm to solve (adaptively) the Laplace problem with
Dirichlet boundary conditions over the polygonal re-entrant region of Figure 9.

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-use1496

MAR(cid:19)IA-CECILIA RIVARA AND GABRIEL IRIBARREN

1

2

4

3

(c)

5

t

(a)

1

2

3

(b)

Figure 8

Figure 9

Figure 10

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-useTHE 4-TRIANGLES LONGEST-SIDE PARTITION OF TRIANGLES

1497

The solution of this problem is the function u = r2=3 sin(2(cid:18)/3), which is singular
at the origin, owing to the re-entrant corner. The triangulation of Figure 9 was
adaptively constructed starting with a 5-triangles initial triangulation, while that
Figure 10 corresponds to the numerical (cid:12)nite element solution obtained for this
mesh.

8. Cost analysis: The algorithm is linear

The time cost analysis of the algorithm should study its asymptotic behavior to
obtain triangles of size " over the re(cid:12)nement region R. From this point of view the
re(cid:12)nement algorithm performs two essential tasks:

(i) Task 1. Insertion of N vertices inside the region R (re(cid:12)nement of the target
triangles) which ensures that the tolerance condition on the diameters of the
triangles is satis(cid:12)ed.

(ii) Task 2. Insertion of K vertices outside the region R (by re(cid:12)nement of some

nontarget triangles), which ensures the conformity of the re(cid:12)ned mesh.

Both issues should be addressed in the time-cost analysis of the algorithm. In
[19], the cost analysis of the pure longest-side bisection re(cid:12)nement algorithm has
been performed. We shall follow here an analogous reasoning to that of this paper.
Since the time cost of each triangle partition (4-triangles partition and pure
longest-side bisection) is constant, the time cost of inserting an arbitrary number
of points in the input triangulation (a consequence of the partition of a set of
triangles) is linear, independently of the size (number of vertices) of the input
triangulation (cid:28) . This allows us to state the following results:

Theorem 6. The time cost of performing Task 1 and Task 2 is respectively linear
in N (it the number of vertices inserted inside of R) and K (the number of vertices
inserted in ΩnR).

Theorem 7. The number of points inserted in R (Task 1) is optimal.

Proof. Since a (cid:12)nite number of distinct (up to similarity) triangles is used throughout 
the entire process (which only depends on the initial triangulation) the number
of points inserted inside R (to obtain triangles of size ") is N = kNe, where k is a
constant and Ne is the number of vertices used in an equilateral triangulation.

Thus, the key issues of the analysis have been reduced to answer the following
question: how is the size of K compared with N ? The answer is certainly related
to the properties of the distribution of points introduced in the propagation step of
the pure longest-side re(cid:12)nement algorithm, which is used to conform the mesh in
the algorithm of the previous section. To this end, we need to study the behavior
of the (longest-side) algorithm to re(cid:12)ne triangulations around one vertex. In this
particular case, the re(cid:12)nement region is R = fPg, where P is a vertex. The onetriangle 
longest-side re(cid:12)nement algorithm of the previous section is iteratively used
until the diameter of the triangles that share the vertex P is less than or equal to
". For this particular problem the following result holds [19]:

Theorem 8. Let (cid:28) be any conforming triangulation. For any vertex P of (cid:28) , the
arbitrary iterative use of the longest-side re(cid:12)nement algorithm to re(cid:12)ne the trianLicense 
or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-use1498

MAR(cid:19)IA-CECILIA RIVARA AND GABRIEL IRIBARREN

C

Figure 11

C

A

(a)

B

A

Figure 12

(b)

B

gulation around vertex P divides the angles converging in P in a (cid:12)nite number of k
parts.

Proof. This follows directly from the fact that the angles obtained by longest-side
bisection of any triangle are bounded [20].

De(cid:12)nition 3. For any conforming triangulation (cid:28) and any vertex P of (cid:28) , we shall
call the stable molecule associated with vertex P to be the (cid:12)xed partition of the
plane around vertex P , induced by the iterative use of the longest-side re(cid:12)nement
algorithm, for re(cid:12)ning the triangulation around the vertex P . The size of the stable
molecule will be the number of angles converging in P .

The examples of Figures 11 and 12 illustrate these ideas. More speci(cid:12)cally, the
shadowed polygons of Figures 11(a) and 11(b), respectively correspond to the stable
molecule associated with the vertices C and P (the angles converging in C and P
are not re(cid:12)ned anymore). In Figure 12, the longest-side re(cid:12)nement algorithm was
used over a one-triangle initial triangulation (triangle ABC) in order to respectively
re(cid:12)ne the triangulation around the vertices C and B. Notice that the (cid:12)rst iterations
of the algorithm around vertex C have constructed the stable molecule, while the
next iterations of the algorithm only produce a fractal geometry around this vertex.
In the case of vertex B, in contrast, the algorithm immediately \(cid:12)nds" the fractal
geometry, since the stable molecule of vertex B is exactly de(cid:12)ned by the sides AB
and BC.

All these ideas can be summarized in Theorem 9 [19] and used to prove Theorem

10.

Theorem 9. Let (cid:28) be any conforming triangulation and consider any vertex P
of (cid:28) . The use of the longest-side re(cid:12)nement algorithm to re(cid:12)ne the triangulation
around the vertex P produces triangulations having the following characteristics:

(a) After a (cid:12)nite number of iterations, the algorithm produces a triangulation (cid:28)

such that the stable molecule associated with vertex P is obtained.

(cid:3)

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-useTHE 4-TRIANGLES LONGEST-SIDE PARTITION OF TRIANGLES

1499

(b) The next iterations of the algorithm do not partition the angles of the stable
molecule, but only introduce a set of new vertices distributed in geometric
progression along the sides of the stable molecule of P.

Proof. Part (b) follows from the fact that the triangles that share vertex P in each
intermediate triangulation have longest side coincident with one of the straight line
segments that de(cid:12)nes the stable molecule, where P is one of its end points. Thus,
the new points inserted are always the midpoints of these sides.

Corollary 4. The arbitrary iterative re(cid:12)nement of any triangulation (cid:28)0 produces
triangulations of maximal stable molecule of size k (cid:20) M , where M only depends on
(cid:28)0.

De(cid:12)nition 4. The constant M of Corollary 4 will be called the stable molecular
size of (cid:28)0.

Theorem 10. Suppose that the longest-side re(cid:12)nement algorithm is used to re(cid:12)ne
any triangulation (cid:28) around any vertex (of stable molecule of size k). Then, once
the stable molecule is obtained, the iterative re(cid:12)nement around vertex P to obtain
triangles of diameter (longest side) h introduces K vertices, where

K (cid:20) k[1 + log2(1 + 2L=h)]

and L is the length of the longest side of the stable molecule of P.

Proof. Along each side P P of the stable molecule of P , the algorithm introduces a
sequence of points P1, P2,..., Pj such that P1 is the midpoint of the side P P and Pj
the midpoint of the side P Pj−1. In order to ensure the condition on the diameters
of the triangles to be obtained around the vertex P , in particular, for the longest

side of the stable molecule, the algorithm should stop wheneh(cid:20) h
2 , whereeh is the
P
1(cid:20)i(cid:20)J 2i = L, which implies thateh(2J − 1) = L
length of the side P Pj. Buteh
and J=1+log2(1+L/eh). Thus, along each side of the stable molecule of P (of the

triangulation (cid:28) ), the algorithm introduces at most J vertices, and since the stable
molecule has k arms, the result follows.

Theorem 11. The time cost of solving the Point Triangulations Re(cid:12)nement Problem 
to obtain triangles of given size is O(K), where K is bounded as in Theorem
10.

Theorem 12. Let (cid:28)0 be any conforming coarse triangulation (of stable molecular
size M) of any bounded polygonal region Ω. Then for any circular re(cid:12)nement subregion 
C, of radius r, with C (cid:26) Ω, the use of the 4-triangles re(cid:12)nement algorithm to
solve the Triangulation Re(cid:12)nement Problem over C to obtain triangles of diameter

eh inside C, asymptotically introduces Ni points inside C and No points outside C,

such that Ni and No are bounded as follows:

(a)

Ni (cid:20) k1[1+(cid:25)(n2 + n)],

No < (cid:25)k2n[1 + log2(1 + L=eh)],

where k1 and k2 are constants, n = 2r=eh and L is the maximum distance from the

(b)

boundary of R to the boundary of Ω.

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-use1500

MAR(cid:19)IA-CECILIA RIVARA AND GABRIEL IRIBARREN

Proof. (a) According to Theorem 7, Ni (cid:20) kNe. In order to bound Ne, cover C

with concentric circles of radius h; 2h; 3h; :::; r, where h =eh/2, and over each circle,

consider a set of points uniformly distributed at distance h. Then

Ne < 1+

+

2(cid:25)h

h

2(cid:25)2h

2(cid:25)3h

+

h

h

+ (cid:1)(cid:1)(cid:1) +

2(cid:25)r
h

= 1 + 2(cid:25)(1 + 2 + (cid:1)(cid:1)(cid:1) + n) = 1 + (cid:25)(n2 + n);

where n = r=h = 2r=eh. Then Ni (cid:20) k1[1+(cid:25)(n2 + n)], and the (cid:12)rst part of the result
(b) Notice that the re(cid:12)nement inside C has introduced at most 4(cid:25)r=eh points

follows.

on the boundary of C. The number of points introduced in the exterior of C can
be bounded by the product of the stable molecular size M of (cid:28)0 and the number
of vertices introduced by local re(cid:12)nement along each vertex, assuming a stable
molecule of maximal side L. Thus,

No < M 2(cid:25)n[1 + log2(1 + Leh)]:

Corollary 5. Under the conditions of Theorem 12, the longest-side re(cid:12)nement
algorithm introduces an optimal number of points N = O(n2) inside the re(cid:12)nement
region. Furthermore, since Ω is a bounded region, the time cost of the algorithm is
linear in N .

A stronger result was introduced in [19]. Speci(cid:12)cally, it was proved that the
number of points inserted outside R is of order O(n log2 n), both for circular
and rectangular re(cid:12)nement regions, which allows us to conclude that this is true
for general convex re(cid:12)nement regions. Empirical evidence, which is in complete
agreement with the theory, even for small values of N , was also included in that
paper.

9. Concluding remarks

In this paper we have discussed results which characterize, in a geometrical
sense, the global point distribution introduced by the iterative 4-triangles longestside 
partition of triangles. We have also discussed a practical 4-triangles re(cid:12)nement
algorithm, proving that it has linear complexity, independently of the size of the
triangulation. To this end, the \fractal" properties of the longest-side bisection
algorithm (which characterize the local point distribution introduced by the algo-
rithm) were used. Numerical experiments illustrating the practical behavior of the
linear algorithm can be found in [19].

A discussion on the triangulation re(cid:12)nement problem and on the di(cid:14)culties
arising with the pure Delaunay algorithm to deal with this problem have also been
included in this paper. In essence, this algorithm does not contain a natural point
insertion strategy that guarantees the construction of good-quality irregular triangulations 
when iterative local re(cid:12)nement is performed. However, both the longestside 
bisection based algorithms, and mixed (longest-side midpoint insertion) Delaunay 
algorithms are competitive linear algorithms for the triangulation re(cid:12)nement
problem. In a forthcoming paper we shall discuss mixed Delaunay algorithms in
more detail.

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-useTHE 4-TRIANGLES LONGEST-SIDE PARTITION OF TRIANGLES

1501

Acknowledgments

This work has been partially supported by Proyecto FONDECYT 911220 and
Proyecto FONDECYT 1940323. The (cid:12)rst author acknowledges helpful discussions
with Patricio Poblete. The example of x7 and the triangulations of Figure 1 were
respectively obtained by Eduardo Mercader and Patricio Inostroza. The manuscript
was typed by Francia Orme~no.

References

1. I. Babu(cid:21)ska, O.C. Zienkiewcz, J. Gago and E. R. de A. Oliveira (eds.), Accuracy estimates and
adaptive re(cid:12)nements in (cid:12)nite element computations, John Wiley & Sons, Chichester (1986).
MR 87j:65004

2. S.W. Bova and G. F. Carey, Mesh generation/re(cid:12)nement using fractal concepts and iterated

function systems, Internat. J. Numer. Meth. in Engrg., 33 (1992), 287-305. MR 92j:65137

3. P. Dierckx, S. Van Leemput and T. Vermeire, Algorithms for surface (cid:12)tting using PowellSabin 
splines, IMA J. Numer. Anal., 12(1992), 271-299. MR 93b:65026

4. W. Hackbush, Multi-grid methods and applications, Springer-Verlag, Berlin (1985). MR

87e:65082

5. H. Kim, S. Hong, K. Choi, H. Jung and S. Hahn, A three dimensional adaptive (cid:12)nite element

method for magnetostatic problems, IEEE Trans. Magnetics, 27(1991), 4081-4084.

6. L. Freitag, M. Jones and P. Plassmann, New techniques for parallel simulation of hightemperature 
superconductors, Argonne National Laboratory 1994 Preprint MCS-P44-0594.

7. S.N. Muthukrishnan, P.S. Shiakolas, R. V. Nambiar and K.L. Lawrence, A simple algorithm
for the adaptive re(cid:12)nement of three dimensional (cid:12)nite element tetrahedral meshes, to appear
AIAA Journal.

8. R.V. Nambiar, R.S. Valera, K.L. Lawrence, R. B. Morgan and D. Amil, An algorithm for
adaptive re(cid:12)nement of triangular meshes, Internat. J. Numer. Meth. Engrg. 36 (1993), 499509.


9. J. O’Rourke, Computational Geometry Column 23, Internat. J. Comput. Geom. Appl.

4(1994), 239-242. MR 95j:52030

10. J. Penman and M.D. Grieve, Self-adaptive mesh generation technique for the (cid:12)nite element

method, IEE Proceedings, 134(1987), 634-650.

11. M.-C. Rivara, Mesh re(cid:12)nement processes based on the generalized bisection of simplices, SIAM

J. Numer. Anal. 21(1984), 604-613. MR 85i:65159

12.

13.

14.

15.

16.

17.

, Algorithms for re(cid:12)ning triangular grids suitable for adaptive and multigrid techniques,
 Internat. J. Numer. Methods Engrg., 20(1984), 745-756. MR 85h:65258

, Design and data structure for fully adaptive, multigrid (cid:12)nite-element software, ACM

Trans. Math. Software, 10(1984), 242-264. MR 86f:65207

, Adaptive (cid:12)nite element re(cid:12)nement and fully irregular and conforming triangulations,
 In Accuracy Estimates and Adaptive Re(cid:12)nements in Finite Element Computations,
I. Babu(cid:21)ska, O.C. Zienkiewicz, J. Gago and E.R. de A. Oliveira (eds.), John Wiley & Sons,
Chichester (1986), pp. 359-370.

, A grid generator based on 4-triangles conforming mesh re(cid:12)nement algorithms, Internat.
 J. Numer. Meth. Engrg., 24 (1987), 1343-1354.

, Selective re(cid:12)nement/dere(cid:12)nement algorithms for sequences of nested triangulations,

Internat. J. Numer. Meth. Engrg., 28(1989), 2889-2906. MR 90j:57018

, A discussion on the triangulation re(cid:12)nement problem, Proceedings of the Fifth Canadian 
Conference on Computational Geometry, University of Waterloo (1993), pp. 42-47.

18. M.-C. Rivara and C. Levin, A 3D re(cid:12)nement algorithm for adaptive and multigrid techniques,

Comm. Appl. Numer. Methods, 8 (1992), 281-290.

19. M.-C. Rivara and M. Venere, Cost analysis of the longest-side (triangle bisection) re(cid:12)nement

algorithms for triangulations (1994), to appear Engineering with Computers.

20. I. Rosenberg and F. Stenger, A lower bound on the angles of triangles constructed by bisecting

the longest side, Math. Comp. 29(1975), 390-395. MR 51:11264

21. M. Stynes, On faster convergence of the bisection method for all triangles, Math. of Comp.

36 (1980), 1195-1201. MR 81j:51023

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-use1502

MAR(cid:19)IA-CECILIA RIVARA AND GABRIEL IRIBARREN

22. R. Williams, Adaptive parallel meshes with complex geometry, In Numerical Grid Generation
in Computational Fluid Dynamics and Related Fields (A.S.Arcilla, J.Hauser, P.R.Eiseman,
J.F.Thompson, eds.), Elsevier Science Publishers B.V. (North-Holland) (1991). CMP 91:16

Department of Computer Science, University of Chile, Casilla 2777, Santiago, Chile
E-mail address: mcrivara@dcc.uchile.cl

E-mail address: giribar@dcc.uchile.cl

License or copyright restrictions may apply to redistribution; see http://www.ams.org/journal-terms-of-use