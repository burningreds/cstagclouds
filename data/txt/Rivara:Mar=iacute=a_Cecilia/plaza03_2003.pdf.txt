MESH REFINEMENT BASED ON THE 8-TETRAHEDRA

LONGEST-EDGE PARTITION

´Angel Plaza1

Mar´ıa-Cecilia Rivara2

1University of Las Palmas de Gran Canaria, Spain, aplaza@dmat.ulpgc.es
2DCC, University of Chile, Santiago de Chile, Chile, mcrivara@dcc.uchile.cl

ABSTRACT

The 8-tetrahedra longest-edge (8T-LE) partition of any tetrahedron is deﬁned in terms of three consecutive edge
bisections, the ﬁrst one performed by the longest-edge. The associated local reﬁnement algorithm can be described
in terms of the polyhedron skeleton concept using either a set of precomputed partition patterns or by a simple edgemidpoint 
tetrahedron bisection procedure. An eﬀective 3D dereﬁnement algorithm can be also simply stated. In this
paper we discuss the 8-tetrahedra partition, the reﬁnement algorithm and its properties, including a non-degeneracy
fractal property. Empirical experiments show that the 3D partition has analogous behavior to the 2D case in the
sense that after the ﬁrst reﬁnement level, a clear monotonic improvement behavior holds. For some tetrahedra a
limited decreasing of the tetrahedron quality can be observed in the ﬁrst partition due to the introduction of a new
face which reﬂects a local feature size related with the tetrahedron thickness.

Keywords: mesh reﬁnement, longest-edge bisection, longest-edge algorithms, tetrahedral meshes

1.

INTRODUCTION

Skeleton algorithms for local mesh reﬁnement /dereﬁnement 
of triangular and tetrahedral meshes have
been proposed by Plaza and Carey [10, 11, 12]. In two
dimensions, the algorithm is an alternative formulation 
of the 4-triangles longest-edge algorithm [14, 15].
The 2-dimensional skeleton algorithm [10, 11] works
over the edges wireframe mesh aﬀected by the reﬁnement 
(target triangles and some neighbors to assure
the construction of a conforming mesh) by performing 
midpoint bisection of the involved edges. Then
this information is used to select the appropriate triangle 
partition pattern (between a set of three pat-
terns) to reﬁne each individual triangle. This idea
was then generalized to 3-dimensions [11, 12] by introducing 
an 8-tetrahedra partition which induces the
4-triangles partition of its faces.

mesh (by using the 4-triangles partition and associated
partial partitions), and (3) the volume reﬁnement of
each tetrahedron either by using a simple edge bisection 
procedure or according to an appropriate pattern,
selected between a set of precomputed partition patterns.


In this paper we study the properties of the 8tetrahedra 
partition showing that each full partition
pattern is equivalent to a sequence of seven tetrahedron 
edge bisections by the midpoint of the tetrahedron 
edges, the ﬁrst one being performed by the tetrahedron 
longest-edge. Then we take advantage from the
improvement and fractal properties of the 4-triangles
longest-edge partition to show some non-degeneracy
properties in 3-dimensions. We also show that for the
meshes globally reﬁned by using the 8-tetrahedra partition,
 the asymptotic average number of tetrahedra
sharing a ﬁxed vertex is equal to 24.

The 3-dimensional skeleton algorithm performs: (1)
the reﬁnement of the 3-dimensional edges wireframe
mesh aﬀected, (2) the reﬁnement of the faces surface

An empirical study about the behavior of the 8tetrahedra 
partition is also included. This shows that
consistently, from the second reﬁnement level, both

the distribution of quality tetrahedra, and the volume
percentage covered by better tetrahedra tend to be
improved as the 8T-LE partition proceeds.

1.1 Previous and related work

Reﬁnement algorithms based on longest-edge partitions,
 including Lepp based algorithms, have been extensively 
discussed [14, 15, 18, 17, 16], as well as skeleton 
based algorithms [10, 11, 12, 13].

In two-dimensions it has been shown that these algorithms 
improve the point distribution by maintaining 
some small-angled triangles which depend on the
quality of the initial mesh, in the following senses: the
iterative global reﬁnement of any triangle produces triangles 
whose minimum angle is bounded as a function
of the quality of the initial triangle, the process produces 
a ﬁnite number of similarly distinct triangles,
and both the percentage of good-quality triangles and
the area covered by these triangles increases as the
reﬁnement proceeds.

In [18] a pure three dimensional longest-edge reﬁnement 
method was considered. Empirical experimentation 
showing that the solid angle decreases slowly with
the reﬁnement iterations and that a quality-element
improvement behavior, analogous to the 2-dimensional
case holds in practice, were provided. However, there
has not been mathematical results available guaranteeing 
the non-degeneracy properties of the 3-dimensional
mesh.

In the last 12 years other triangle-bisection and
tetrahedron-bisection reﬁnement algorithms have been
proposed. Between them we can cite the newest-vertex
insertion method of Michell [9] in two dimensions, the
tetrahedron-bisection algorithm of B¨ansch [2] and the
8-tetrahedra bisection algorithm of Liu and Joe [7].
These algorithms essentially consist on performing
edge based partitions in such a way that triangles or
tetrahedra similar to those of the ﬁrst reﬁnement levels 
are obtained throughout the process. In particular,
 Liu and Joe have obtained a bound on the mesh
quality as a function of the initial geometry for their
algorithm [6].

Other studies report somewhat equivalent algorithms.
A recursive approach which imposes certain restrictions 
and pre-processing in the initial mesh is proposed
by Kossaczk´y [4]. Maubach [8] has developed and algorithm 
for n-simplicial grids generated by reﬂection.
Although the algorithm is valid in any dimension and
the number of similarity classes is bounded, this cannot 
be applied to a general tetrahedral grid, since an
additional closure reﬁnement is needed to avoid incompatibilities.
 Arnold et al. [1] have presented an
algorithm equivalent to those discussed in [2, 4] proving 
its equivalence with [8].

All these algorithms however, do not take practical advantage 
of the element-quality improvement properties
of longest-edge and skeleton algorithms. These algorithms,
 in exchange, can be applied to any valid initial
triangulation without any restriction on the shape of
the tetrahedra.

In what follows we speciﬁcally discuss the skeleton
algorithms of Plaza and Carey [10, 11, 12]. This
three dimensional approach is based on the application 
of the 2-dimensional algorithm over the
skeleton of the 3D triangulation, that is to the set
of the triangular faces of the tetrahedra. Being
this a longest-edge based algorithm we expect for
it analogous behavior to that reported in [18] for
pure 3-dimensional longest-edge reﬁnement algorithm.

2. THE 4-TRIANGLES ALGORITHM

AND PREVIOUS RESULTS

The 4-Triangles algorithm can be described in terms
of the three reﬁnement patterns of Figure 1, where P
is the midpoint of the longest-edge. The algorithm
consists on two basic steps: (1) reﬁnement of target
triangles by using the partition pattern (a) of Figure 1,
and (2) a local propagation step to assure a conforming
mesh which uses the partition patterns of (b) and (c)
of Figure 1.

P

(a)

P

(b)

P

(c)

Figure 1: 4-Triangles-reﬁnement patterns.

4-Triangles-Reﬁnement-Algorithm(τ, t)
/* Perform the 4-Triangles partition of t
for each edge e of t, of associated neighbor t∗

do

neighbor-reﬁnement(t∗, e)
t ← t∗
while t is non-conforming do

with associated neighbor t∗

ﬁnd the unique non-conforming edge e ∈ t
neighbor-reﬁnement(t∗, e)
t ← t∗

end while

end for

neighbor-reﬁnement(t∗, e)
if e is longest-edge of t∗
else perform 3-Triangles partition of t∗

perform LE bisection of t∗
by edge e

non-obtuse triangle tn is obtained. Furthermore, the
smallest angles αi and the largest angles γi of each
triangle ti satisfy the following improvement relations:

α0 < α1 < α2 < . . . < αn
γ0 > γ1 > γ2 > . . . > γn

For an illustration see Figure 2. Note that in the general 
case, the reﬁnement should propagate to neighbor
triangles by the edges AC and CB.

where γi = γi−1 − αi.

C

t

A

B

(a)

(c)

(b)

(d)

Figure 2: Example of 4-Triangles-Reﬁnement-Algorithm.

The 4-Triangles-Algorithm produces a subset of the
triangles obtained by longest-edge bisection and the
following theorem holds [14, 15]:

the iterative application of

Theorem 2.1 Over any conforming triangulation
τ0,
the 4-Triangles-
Algorithm: (1) produces nested triangulations in the
sense that each new triangle is embedded in its parent;
 (2) every triangle t generated in the process has
, where α0 is the
smallest angle greater or equal to
smallest angle of the triangle t0 in τ which embeds
t; (3) produces a ﬁnite number of similarity distinct
triangles; (4) the triangulations obtained tend to be
improved in the sense that both the percentage of the
good-quality triangles and the area covered by these triangles 
increases as the reﬁnement proceeds.

α0
2

Furthermore, for obtuse triangles the following monotone 
improvement behavior holds [17]:

Theorem 2.2 For any obtuse triangle t0 of smallest
angle α0 and largest angle γ0, the 4-Triangles partition 
of t0 produces a unique similarly distinct triangle
t1, whose 4-Triangles partition in turn produces a new
similarly distinct triangle t2, and so on, until a last

For the 4T-LE algorithm, a fractal property analogous
to that proved for the LE-bisection algorithm [17] also
holds:

Theorem 2.3 After a ﬁnite number of iterative (lo-
cal) applications of the 4-triangles algorithm around
any vertex P of any conforming triangulation τ , a stable 
molecule around P is obtained, in the sense that the
next iteration of the algorithm do not divide the angles
of vertex P , but only introduce new vertices along the
edges of the stable molecule. Furthermore, each new
triangle of vertex P produced throughout the next iterations 
will be similarly equal to a preceding triangle.

P

t1
t

t1

(a)

t

P

P

t

t

(b)

(c)

Figure 3: Fractal behavior of 4-triangles partition and
stable molecule.

2.1 The skeleton algorithms in two and

three dimensions

The skeleton version of the 4-Triangles reﬁnement algorithm 
performs the reﬁnement task by using two sequential 
steps: (1) Identifying and bisecting the edges
(not the triangles) involved throughout the overall reﬁnement 
process; and (2) partitioning each individual
triangle involved in the reﬁnement process by using
the triangles partitions of Figure 1 according to its
bisected edges.

The 3D-skeleton algorithm in exchange generalizes the
4-Triangles reﬁnement algorithm to 3-dimensions by

t

(a)

(b)

Figure 4: Example of the use of the 2D-skeleton algorithm.


making use of the skeleton concept which in turn generalizes 
the graph usually associated with the polygonal 
faces of any polyhedron [10, 11, 3]:

Deﬁnition 2.4 For any conforming 3D triangular
mesh τ (tetrahedral mesh), the 2D-Skeleton of τ is
the conforming surface mesh deﬁned by the triangular 
faces of the elements of τ . In addition, the 1DSkeleton 
of τ is the conforming wire mesh deﬁned by
the edges of the elements of τ .

By using the preceding concepts the algorithm can be
schematically described as follows:

3D-Skeleton Reﬁnement-Algorithm(τ, t)
Find and Partition involved Edges over
1-skeleton mesh
Partition involved Faces over 2-skeleton mesh
Partition involved Tetrahedra according
appropriate partition patterns

Note that with minor changes, both procedures (over
the 1-skeleton mesh and the 2-skeleton mesh) together
correspond to the application of the 4-Triangles-
Skeleton-Reﬁnement Algorithm to the surface triangulation 
formed by the faces of the tetrahedra of the initial 
3-dimensional triangulation. The Partition Tetrahedra 
procedure in exchange performs the volume partition 
of the set of tetrahedra whose faces were reﬁned
by the preceding procedures.

In the next Section we shall introduce and discuss
the 8-Tetrahedra-LE partition, proving the following
properties:
the 8-tetrahedra LE partition of every
tetrahedron t in the mesh produces both a conforming
volume mesh and a conforming surface mesh where
the surface mesh is obtained by the 4-Triangles
partition of the faces of t.

3. THE 8-TETRAHEDRA PARTITION

AND PROPERTIES

At this point, some deﬁnitions are in order:

Deﬁnition 3.1 For any tetrahedron t of unique
longest-edge, the primary faces of t are the two faces
of t that share the longest-edge of t. In addition, the
two remaining faces of t are called secondary faces of t.
Furthermore, the secondary edges of t are the longest
edges of the secondary faces of t (1 or 2 secondary
longest edges). In addition, the 3 or 4 remaining edges
of t are called third-class edges of t.

Note that for any tetrahedron t of unique longest-edge,
the primary faces of t have a common longest-edge
equal to the longest-edge of t. In order to avoid ambiguousness 
in the general case, we always suppose
that for each tetrahedron t having either a non-unique
longest-edge, or non-unique secondary edges, a unique
selection for each of such edges is performed a priori
in such a way that the longest-edge of the tetrahedron 
coincides with the longest-edge of the primary
faces of t, and this selection is consistently maintained
throughout the overall reﬁnement process.

The 8-Tetrahedra longest-edge partition can be deﬁned 
as follows:

Deﬁnition 3.2 For any tetrahedron t of unique
longest-edge and unique secondary edges,
the 8Tetrahedra 
Longest-Edge (8T-LE) partition of t is deﬁned 
as follows:

(1) LE-bisection of t producing tetrahedra t1, t2;
(2) bisection of ti by the midpoint of the unique edge
of ti which is also a secondary edge of t, producing
tetrahedra tij for i, j = 1, 2.

(3) bisection of each tij by the midpoint of the unique
edge equal to a third-class edge of t, for i, j = 1, 2.

In order to study the 8-tetrahedra partition, we need
to consider an intermediate 4-tetrahedra partition
characterized by the following proposition:

Proposition 3.3 Let t be any tetrahedron of unique
longest-edge AB and associated midpoint P (see Figure 
5. Then the 4-tetrahedra partition described by
the two ordered steps (1) and (2) of Deﬁnition (3.2)
produces a 4-tetrahedra volume triangulation of t satisfying 
the following properties:

a) The volume triangulation induces the longestedge

bisection of each triangular face of t.

b) The volume triangulation of t will be a conforming 
triangulation if and only if the distribution
of the longest-edge and secondary edges of t corresponds 
to either the cases (a), (b), or (c) in
Figure 5.

c) The volume triangulation will not be a conforming 
triangulation if and only if the secondary
edges share a vertex and one of these edges is opposite 
to the longest-edge of t (Figure 5 (d)).

A

A

D

1

(a)

2

2

C

D

1

2

C

(c)

2

B

A

D

1

2

B

A

C

(b)

D

2

(d)

1

2

C

B

B

A

D

1

2

C

D

(a)

2

B

A

2

C

A

1

B

A

2

2

2

D

1

(b)

D

1

2

B

B

C

(c)

C

(d)

Figure 5: Relative position of the longest-edge (numbered 
1) and secondary longest-edges (numbered 2) for
t.

Figure 6: 4-Tetrahedron partition obtained according to
the relative positions of the longest-edge and secondary
longest-edges of t.

The proof of part a) follows directly from the deﬁnition 
of the 4-tetrahedra partition, while the proof of
parts b) and c) are based on the study of the possible 
relative positions of the longest-edge of t and the
secondary edges of t. Clearly, only 4 relative conﬁgurations,
 invariant under translation, rotation, reﬂection
and uniform scaling are possible:

i) longest-edge of t opposite to the unique (com-
mon) secondary edge of the two secondary faces
of t (Figure 5 (a)).

ii) the secondary longest-edges and longest-edge of t

form a triangular face of t (Figure 5 (b)).

iii) opposite secondary edges, where each of such
edges shares a vertex with the longest-edge of t
(Figure 5 (c)).

iv) the secondary edges share a vertex and one of the
secondary edges is opposite to the longest-edge of
t (Figure 5 (d)).

Corollary 3.4 The 4-tetrahedra partition of Theorem 
3.3 produces four tetrahedra tij for i, j = 1, 2 such
that each tij has a unique edge equal to a third-class
edge of t.

The next proposition proves that, for the 4 cases of
Proposition 3.3 (Figure 6), the midpoint edge bisection
of the new tetrahedra (by the non-bisected edge of t)
produces a conforming volume triangulation of t.

Proposition 3.5 Let t be any tetrahedron having a
unique longest-edge and unique secondary edges. Then
if after applying the 4-tetrahedra partition deﬁned in
Proposition 3.3, each of the tetrahedra tij produced by

this partition is in turn bisected by the midpoint of the
(unique) edge equal to a third-class edge of t, a conforming 
volume triangulation is obtained having the
following properties:

a) The volume triangulation induces the 4-triangles

partition of each face of t.

b) Only an interior edge P ∗P is produced, where
P and P ∗
are respectively the midpoint of the
longest-edge of t, and the midpoint of the edge
opposite to the longest-edge of t.

c) Eight new internal faces appear inside the tetrahedron 
t.

The results of previous proposition allow us to state
Theorem 3.6:

Theorem 3.6 The 8-tetrahedra longest-edge partition 
of any tetrahedron t produces both a conforming
volume triangulation of t and a conforming surface triangulation 
of t such that:

(1) The conforming surface triangulation of t is identical 
to the surface triangulation obtained by the
4-triangles partition of the faces of t.

(2) Four diﬀerent triangulation patterns are obtained
(Figure 7) according with the relative position of
the longest-edge and the secondary edges of t.
Each one of these 4 patterns produces only one
new internal edge P ∗P (where P is the midpoint
of the longest-edge of t, and P ∗
is the midpoint of
the edge opposite to the longest-edge) and 8 new
internal faces.

Note that under the assumption that the longest-edge
and the secondary edges are unique, there is a univocal 
correspondence between the four volume partition

D

(a)
(a)

A
A

A
A

C

D

D

1

(b)
(b)

D

B
B

A
A

C

B
B

A
A

B
B

B
B

C

(c)
(c)

C

(d)
(d)

Figure 7: Diﬀerent possible 8-Tetrahedra Longest-Edge
partitions.

patterns produced by the 8-tetrahedra partition of any
tetrahedron t and the four surface partition patterns
obtained by the 4-triangles partition of the faces of t.

The careful study of the possible n-point partition
patterns produced for the diﬀerent relative positions
of the longest-edge and secondary edges of t,
for
n = 1, 2, . . . , 6 (which includes the four global
8-tetrahedra partition patterns) allows us to obtain
the set of partial partition patterns involved in the
mesh reﬁnement algorithm. It can be proved that the
are exactly 30 diﬀerent partition patterns (invariant
under translation, rotation, reﬂection, and uniform
scaling) associated to the 8-tetrahedra partition of
any tetrahedron.

4. THE 3D-SKELETON

REFINEMENT/DEREFINEMENT

ALGORITHM

The reﬁnement algorithm for reﬁning any tetrahedron
t in any conforming tetrahedral mesh τ can be formulated 
as follows:

3D-Skeleton-Reﬁnement-Algorithm(τ, t)
/* Find involved edges, faces, and tetrahedra */
Initialize SE, SF , and ST , respectively sets of
involved edges, faces, and tetrahedra
Initialize PE set of processing edges
for each edge E of t do
add edge E to set SE
add edge E to set PE

endfor
While PE (cid:3)= ∅, do

pick E from PE
for each tetrahedron t(cid:1) sharing edge E do

for each face F of t(cid:1) having an edge in SE do

ﬁnd longest-edge E(cid:1) of F
if E(cid:1) is not in SE do
add E(cid:1) to SE
add E(cid:1) to PE
add F to SF

endif

endfor
add t(cid:1) to ST

endfor

Endwhile
/* Partition involved edges */
for each edge E in SE do

create vertex P midpoint of E
bisect E

endfor
/* Partition involved faces */
for each edge F in SF do

partition F according its bisected edges

endfor
/* Partition involved tetrahedra */
for each tetrahedron T in ST do

partition T according to the partition of its faces

end for

The 3-dimensional skeleton reﬁnement algorithm generalizes 
the 2-dimensional 4T-LE algorithm in the following 
sense:

Theorem 4.1 The reﬁned volume mesh obtained by
the use of the 3D-Skeleton-Reﬁnement-Algorithm induces 
the surface reﬁnement of the associated 2DSkeleton 
mesh and viceversa. Furthermore, the surface 
reﬁned mesh is identical to the mesh obtained by
applying the 4-triangles mesh reﬁnement to the faces
of t.

Corollary 4.2 The 3-dimensional skeleton reﬁnement 
algorithm is ﬁnite.

Note that the tetrahedra partition step can be implemented 
either by successive application of a basic
tetrahedron bisection operation by an edge midpoint,
or by precomputing a set of partition patterns. Also,
an alternative algorithm working directly with the volume 
mesh (without using the mesh-skeleton concept)
can be developed.

The dereﬁnement algorithm works on the ﬁnite
sequence of nested meshes obtained by the reﬁnement
algorithm application T = {τ1 < . . . < τn} to
obtain another sequence of meshes. The algorithm
essentially comprises two main steps: the application
of the 4T-LE dereﬁnement algorithm to the skeleton
(working ﬁrstly both over the wireframe mesh and
the triangular surface mesh), then followed by the

redeﬁnition of the interior of the tetrahedra, for which
a slight variation of the 3D reﬁnement algorithm
is used. For a further discussion see Plaza et al. in [12].

5. ON THE NON-DEGENERACY
PROPERTIES OF THE 8T-LE
REFINEMENT ALGORITHMS

Theorem 5.1 Let τ0 be any initial conforming tetrahedral 
mesh having a number of vertices, edges, faces,
and tetrahedra respectively equal to N0, E0, F0, and
T0; and consider the global use of the 3D-Skeleton
Mesh Reﬁnement algorithm producing a sequence of
globally reﬁned meshes τ1, τ2, . . . , τn, . . . Then the average 
number of tetrahedra sharing a vertex in the
mesh is asymptotically equal to 24, the average number 
of faces sharing a vertex is asymptotically equal to
24, and the average number of edges per vertex tends
to 14.

The proof is based on the resolution of the recurrence
equations associated to the 8-tetrahedra longest-edge
partition. Note that the global reﬁnement of each
mesh τn−1 reduces to the 8-tetrahedra longest-edge
partition of all the tetrahedra of τn−1 which directly
produces a conforming mesh τn. By Theorem 3.6, the
number of vertices, edges, faces, and tetrahedra of the
mesh τn, respectively equal to Nn, En, Fn, and Tn,
satisfy the following recurrence relations as a function
of the values Nn−1, En−1, Fn−1, and Tn−1 of the previous 
mesh:

Av#(edges per node) =

2 · En
Nn

.

Once the recurrence relations (1) are solved, the
asymptotic values are obtained taking limits when n
tends to inﬁnity. See reference [13] for details.

The following theorem summarizes geometrical and
fractal properties of the 8T-LE reﬁnement algorithm.

Theorem 5.2 Both for the 8T-LE partition and for
the 3D-Skeleton Reﬁnement algorithm the following
mesh quality properties hold:

a) The 8T-LE partition of any tetrahedron t always
partitions the largest planar angles of the two
faces sharing the longest-edge of t.

b) The 8T-LE partition never partitions a solid angle 
such that, each one of the three associated planar 
angles is non-obtuse and diﬀerent from the
largest angle of the corresponding triangular face.

c) Over each triangular obtuse face F of any tetrahedron 
t, the iterative 8T-LE partition of t produces
a ﬁnite number of diﬀerent faces, such that each
new face produced is better than the preceding one
in the sense that the smallest angle and the largest
angle of the new face are respectively greater than
and less than those corresponding to the preceding
face generated in the preceding iteration.

d) Property c) extends to each new obtuse face produced 
throughout the 8T-LE reﬁnement process
(self corrective behavior).

Nn = Nn−1 + En−1 + Tn−1
En = 2 · En−1 + 3 · Fn−1 + Tn−1
Fn = 4 · Fn−1 + 8 · Tn−1
Tn = 8 · Tn−1

(1)

The theorem proof
is essentially based on the 2dimensional 
properties of the 4T-LE reﬁnement (Theorem 
2.2).

where N0, E0, F0, and T0 are given from the initial
mesh τ0.

Furthermore, since each tetrahedron has exactly four
vertices, the average number of tetrahedra sharing a
given vertex in the mesh τn reduces to:

Av#(tetrahedra per node) =

4 · Tn
Nn

And, in a similar way, the rest of the non-constant
adjacency relations are:

Av#(tet per edge) =

Av#(faces per edge) =

Av#(faces per node) =

6 · Tn
En
3 · Fn
En
3 · Fn
Nn

Theorem 5.3 (Fractal behavior) For any conforming 
tetrahedral mesh τ0, after a ﬁnite number of local
3D-Skeleton reﬁnements around any vertex P , a ﬁnite 
number of tetrahedra sharing vertex P is obtained
whose associated solid angles are never reﬁned again
as the reﬁnement around P proceeds.

At this point some remarks are in order:

1. Part (b) of Theorem 5.2 implies that whenever a
solid angle having non-obtuse planar angles (each
one not opposite to the longest-edge of the corresponding 
triangular face) is obtained throughout
the process, this solid angle remains untouched
forever in the mesh.
In other words, only new
vertices along the edges of this solid angle are
added as the reﬁnement proceeds.

2. Parts (c) and (d) of Theorem 5.2 together state
that the strong quality improvement properties of
the 2-dimensional 4-Triangles partition hold over
each triangular face of the 2D-Skeleton mesh, including 
the new faces.

3. Theorems 5.2 and 5.3 together do not certainly
guarantee that the size of the molecules (set of
tetrahedra sharing a given vertex of the mesh)
do not increase as new vertices are added in the
reﬁnement process. However, empirical experimentation 
shows that a rather constant standard
deviation around the average size of the molecules
is obtained through the reﬁnement steps, while
the maximum size of them remains rather constant 
(equal to 64) in the last three levels.

6. EMPIRICAL RESULTS

In this section we report empirical evidence that supports 
the conjecture on the non-degeneracy property
of both the 8T-LE partition and the mesh reﬁnement
algorithms based on this partition.

Here three numerical examples are presented. In every 
case the 8T-LE partition has been applied 7 times
to an initial tetrahedron and its descendants, so the
last level of division (τ8) contains 366, 145 vertices and
2, 097, 152 tetrahedra. For each test tetrahedron a set
of 3 tables have been produced: the ﬁrst one contains
the coordinates of the vertices, while that the second
and third ones summarize statistical information for
the meshes obtained. The values ΦT , Φmin and Φmax
expressed in sexagesimal degrees, refer to the solid an-
−1{(1 − cos2 αP − cos2 βP −
gle measure (ΦP = sin
cos2 γP +2 cos αP cos βP cos γP )1/2}, where αP , βP , γP
are the planar angles associated to vertx P ) used by
Rivara and Levin [18], where ΦT is the minimum Φvalue 
for the solid angles of tetrahedron T , and Φmin
and Φmax are respectively equal to the minimum and
maximum Φ-values attained for the mesh at level n.
◦
Note that 0 (cid:1) ΦT (cid:1) 45
and Φ = 0 implies a totally
degenerate tetrahedron. For a discussion on tetrahedron 
shape measures see [5].

It should be pointed out here that the improvement
behavior of any tetrahedron T will be in general studied 
relative to the quality of the tetrahedra of the ﬁrst
volume partition of T . This is due to the fact that the
quality measures ΦTi associated to the tetrahedra Ti
(i = 1, . . . , 8), of the ﬁrst partition of a tetrahedron
T , in general describe better the local feature sizes of
T than the ΦT measure itself. Consider for instance a
cap (very ﬂat) tetrahedron having four quality acceptable 
faces which clearly do not reﬂect well the tetrahedron 
quality; the ﬁrst 8-tetrahedra partition of T in

exchange, introduces at least a bad quality face that
describe well the thickness of T .

Table 1: Right-tetrahedron vertices

0.0
4.0
0.0
0.0

0.0
0.0
4.0
0.0

0.0
0.0
0.0
4.0

In the ﬁrst test problem the initial tetrahedron is a
right-tetrahedron, with a vertex in the origin of the
coordinate system, and three vertices over the axes
of the coordinate system to equal distance from the
origin. The evolution of the shape for the tetrahedra
as the partition proceeds is shown in Table 5. Note
that, as expected, the minimum solid angle remains
constant since the second global partition, while the
percentage of volume covered by bad-shaped elements
decreases monotonically from the third global partition.
 Figures 8, 9, and 10 show the evolution of the
average number of tetrahedra per vertex as the global
reﬁnement (partition) proceeds. Note that the distribution 
seems to tend to a bimodal distribution, with
concentrations between 15 and 20, and between 45 and
50, with average around 24, which is the asymptotic
average number for this partition. Also the maximum
number of tetrahedra per vertex is included in the ﬁgures.


The second example considers a needle tetrahedron.
Table 6 shows the evolution of the minimum and maximum 
angles, and the % of volume covered by badshaped 
elements, while Figure 9 shows the evolution of
tetrahedra per node for this needle tetrahedron where
the distribution also approaches the mean value 24.
Note that in this case, since the faces of T reﬂect well
the local feature sizes of this needle tetrahedron, the
worst solid angle remains constant throughout the process.


Table 2: Needle tetrahedron vertices

-0.5
0.5
0.0
0.0

0.0
0.0
0.2
0.0

0.0
0.0
0.0
7.0

The third example corresponds to a ﬂat tetrahedron.
Table 7 shows for this example the evolution of the
shape of the elements and meshes obtained at global
partitioning. Note that the minimum solid angle remains 
constant from the second global reﬁnement,
while the percentage of volume covered by bad-shaped
tetrahedra improves when the partitioning proceeds.

solid angle or on looking for results on the number of
similarly distinct tetrahedra produced. This last approach 
is a rather diﬃcult path to follow because of
the combinatorial issues involved in 3-dimensions.

In this paper we see that stronger improvement and
fractal properties proved for 2-dimensional longestedge 
based algorithms [17], also hold over the triangular 
faces of the volume meshes. The use of these properties 
seems to be a fruitful path for obtaining mathematical 
results on the 3-dimensional longest-edge algorithms.


This paper include theoretical and empirical results on
this direction: We have discussed a longest-edge based
volume algorithm which induces the 4-Triangles partition 
of the faces of the tetrahedra. The improvement
and fractal properties of the 4-Triangles longest-edge
partition have been in turn used to prove statistical
and fractal properties over the 8-Tetrahedra longestedge 
reﬁnement algorithm: (1) the asymptotic average 
number of tetrahedra surrounding each vertex is
equal to 24; (2) the number of tetrahedra surrounding
each ﬁxed vertex remains constant, after a few local
iterative reﬁnement around such a vertex; and (3) the
algorithm improves each triangular face produced as
the reﬁnement proceeds.

Empirical study carried out here not only supports
these results but also shows that, consistently throughout 
the reﬁnement levels the distribution of quality
tetrahedra improve and the volume percentage covered 
by better tetrahedra increase as the reﬁnement
proceeds.

Table 3: Flat tetrahedron vertices

-2.0
4.0
1.3
1.0

0.0
0.0
3.5
1.3

0.0
0.0
0.0
0.5

Finally, Table 4 shows the evolution of the average
number of tetrahedra per vertex in the ﬁrst 10 steps
of global iterative application of the 8T-LE partition
to any initial tetrahedron.

It should be pointed out here that the 3D partition
seems to have similar behavior to the 2D case in the
sense that for needle tetrahedra (equivalent to one
small-angled triangle), a clear monotonic improvement
behavior holds, while that for quality tetrahedra and
cap tetrahedra a limited decreasing of the tetrahedron
quality can be observed in the ﬁrst partition. Note
that in 2-dimensions, the 4-triangles partition of an
equilateral triangle produces some 30 degrees triangles,
 and this is the only case where the bound in part
(2) of Theorem 2.1 is attained. For the cap tetrahedron 
in exchange, the ﬁrst 3D partition introduces an
acute face that captures the thickness of this tetrahedron 
(a local feature size not described by its four
faces). Note that this is not the case of a needle tetrahedron 
where its faces fully describe its local feature
sizes.

Table 4: Statistical Measures

Level

Num. Tets. Av#(tets per node)

4
5
6
7
8
9
10
11
12
13

512
4, 096
32, 768
262, 144
2, 097, 152
16, 777, 216
134, 217, 728
1, 073, 741, 824
8, 589, 934, 592
68, 719, 476, 736

12.41
16.90
20.03
21.88
22.91
23.45
23.72
23.86
23.93
23.96

7. CONCLUDING REMARKS

Although in the last 15 years the longest-edge reﬁnement 
algorithms have become well-known and useful
techniques which guarantee the construction of quality 
reﬁned meshes in 2-dimensions, equivalent nondegeneracy 
properties had not been proved yet in 3dimensions.
 The question was essentially centered before 
either on ﬁnding a lower bound on the minimum

Table 5: Shape evolution for a right-tetrahedron

Level Num. of Num. of Φmin

Planar angles

Nodes
4
10
35
165
969
6545
47905
366145

Elems.
1
8
64
512
4096
32768
262144
2097152

associated to Φmin

45.00 # 60.00 # 45.00
19.47 #35.26 # 30.00
30.00 #35.26 # 19.47
30.00 #35.26 # 19.47
30.00 #35.26 # 19.47
30.00 #35.26 # 19.47
30.00 #35.26 # 19.47
30.00 #35.26 # 19.47

30.00
9.59
9.59
9.59
9.59
9.59
9.59
9.59

1
2
3
4
5
6
7
8

Φmax % bad elems.
(ΦT < 10)
0.00
25.00
25.00
20.31
15.62
11.82
8.89
6.67

90
90
90
90
90
90
90
90

%

 
s
e
c
i
t
r
e
V

 
f
o

 
r
e
b
m
u
N

70

60

50

40

30

20

10

0

6th mesh-level: 32,768 tets. Av = 23.54, SD = 12.38
7th mesh-level: 262,144 tets. Av = 23.77, SD = 12.86
8th mesh-level: 2,097,152 tets. Av = 23.88, SD = 13.20

Maximum values

60

64

0

5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90

Number of Tetrahedra per vertex

Figure 8: Distribution of vertices versus number of tetrahedra per vertex. Right-Shaped Tetrahedron.

Table 6: Shape evolution for a needle tetrahedron.

Level Num. of Num. of Φmin

Planar angles

Nodes
4
10
35
165
969
6545
47905
366145

Elems.
1
8
64
512
4096
32768
262144
2097152

associated to Φmin
8.00 # 4.36 # 4.28
8.00 # 4.26 # 4.28
4.26 # 4.36 # 8.00
4.28 # 4.36 # 8.01
4.23 # 4.35 # 7.96
4.23 # 4.35 # 7.96
7.96 # 4.23 # 4.35
7.96 # 4.23 # 4.35

0.23
0.23
0.22
0.22
0.22
0.22
0.22
0.22

1
2
3
4
5
6
7
8

Φmax % bad elems.
(ΦT < 0.24)
100.00
75.00
68.75
67.19
66.80
66.71
66.63
66.63

43.58
67.84
68.14
68.14
68.14
68.14
68.14
68.14

%

 
s
e
c
i
t
r
e
V

 
f
o

 
r
e
b
m
u
N

60

50

40

30

20

10

0

6th mesh-level: 32,768 tets. Av = 23.54, SD = 12.38
7th mesh-level: 262,144 tets. Av = 23.77, SD = 12.86
8th mesh-level: 2,097,152 tets. Av = 23.88, SD = 13.20

Maximum values

64

0

5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90

Number of Tetrahedra per vertex

Figure 9: Distribution of vertices versus number of tetrahedra per vertex. Needle Tetrahedron.

Table 7: Shape evolution for a ﬂat tetrahedron.

Level Num. of Num. of Φmin

Planar angles

Nodes
4
10
35
165
969
6545
47905
366145

Elems.
1
8
64
512
4096
32768
262144
2097152

associated to Φmin

24.90 # 24.74 # 46.78
40.11 # 6.08 # 38.42
46.68 # 27.74 # 19.70
46.68 # 27.74 # 19.70
46.68 # 27.74 # 19.70
46.68 #27.74 #19.70
46.68 # 27.74# 19.70
19.70#46.78# 27.74

6.31
3.68
3.12
3.12
3.12
3.12
3.12
3.12

1
2
3
4
5
6
7
8

Φmax % bad elems.
(ΦT < 10)
100.00
62.50
45.31
37.50
30.03
22.97
17.13
12.57

24.94
33.30
75.29
75.29
75.29
75.29
75.29
74.85

%

 
s
e
c
i
t
r
e
V

 
f
o
 
r
e
b
m
u
N

60

50

40

30

20

10

0

6th mesh-level: 32,768 tets. Av = 22.72, SD = 11.72
7th mesh-level: 262,144 tets. Av = 23.33, SD = 12.46
8th mesh-level: 2,097,152 tets. Av = 23.66, SD = 12.89

Maximum values

64

0

5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90

Number of Tetrahedra per vertex

Figure 10: Distribution of vertices versus number of tetrahedra per vertex. Flat Tetrahedron.

[16] Rivara M.C. “New longest-edge algorithm for the
reﬁnement and/or improvement of unstructured
triangulations.” Int. J. Num. Meth. Eng., vol. 40,
3313–3324, 1997

[17] Rivara M.C.,

Iribarren G.

“The 4-Triangles
Longest-Side Partition and Linear Reﬁnement Algorithms.
” Math. Comp., vol. 65, 1485–1502,
1996

[18] Rivara M.C., Levin C. “A 3D Reﬁnement Algorithm 
Suitable for Adaptive and Multigrid Techniques.
” Comm. Appl. Num. Meth., vol. 8, 281–
290, 1992

References

[1] Arnold D.N., Mukherjee A., Pouly L. “Locally adapted 
tetrahedra meshes using bisection.” SIAM
J. Sci. Comp., vol. 22 (2), 431–448, 2001

[2] B¨ansch E. “Local Mesh Reﬁnement in 2 and 3
Dimensions.” IMPACT Comp. Sci. Eng., vol. 3,
181–191, 1991

[3] Berger M. Geometry. Springer-Verlag, Berlin,

1987

[4] Kosaczk´y I. “A recursive approach to local mesh
J.

reﬁnement in two and three dimensions.”
Compt. Appl. Math., vol. 55, 275–288, 1994

[5] Liu A., Joe B. “Relationship between tetrahedron

shape measures.” BIT, vol. 34, 268–287, 1994

[6] Liu A., Joe B. “On the shape of tetrahedra from
bisection.” Mathematics of Computation, vol. 63,
no. 207, 141–154, 1994

[7] Liu A., Joe B. “Quality local reﬁnement of tetrahedral 
meshes based on bisection.” SIAM J. Sci.
Compt., vol. 16, 1269–1291, 1995

[8] Maubach J.M. “Local bisection reﬁnement for nsimplicial 
grids generated by reﬂection.” SIAM
J. Sci. Compt., vol. 16, 210–227, 1995

[9] Mitchell W.F. “Optimal multilevel iterative methods 
for adaptive grids.” SIAM J. Sci. Stat.
Comput., vol. 13, 146–167, 1992

[10] Plaza A., Carey G.F. “About local reﬁnement of
tetrahedral grids based on bisection.” Proceedings
5th Int. Meshing Roundtable, pp. 123–136. 1996

[11] Plaza A., Carey G.F.

“Reﬁnement of simplicial 
grids based on the skeleton.” Appl. Numer.
Math., vol. 32 (2), 195–218, 2000

[12] Plaza A., Padr´on M.A., Carey G.F. “A 3D reﬁ-
nement/dereﬁnement algorithm for solving evolution 
problems.” Appl. Numer. Math., vol. 32 (4),
401–418, 2000

[13] Plaza A., Rivara M.C. “On the adjacencies for
triangular meshes based on skeleton-regular partitions.
” J. Compt. Appl. Math., vol. 140 (1-2),
673–693, 2002

[14] Rivara M.C. “Algorithms for Reﬁning Triangular
Grids Suitable for Adaptive and Multigrid Techniques.
” Int. J. Num. Meth. Eng., vol. 20, 745–
756, 1984

[15] Rivara M.C. “Selective Reﬁnement/Dereﬁnement
for Sequences Nested TriangulaAlgorithms

tions.” Int. J. Num. Meth. Eng., vol. 28, 2889–
2906, 1989

