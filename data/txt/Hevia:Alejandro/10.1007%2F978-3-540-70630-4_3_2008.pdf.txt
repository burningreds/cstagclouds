An Indistinguishability-Based Characterization

of Anonymous Channels

Alejandro Hevia1,(cid:2) and Daniele Micciancio2,(cid:2)(cid:2)

1 Dept. of Computer Science, University of Chile

ahevia@dcc.uchile.cl

2 Dept. of Computer Science & Engineering, University of California, San Diego

http://www.dcc.uchile.cl/ahevia

daniele@cs.ucsd.edu

http://www-cse.ucsd.edu/users/daniele

Abstract. We revisit the problem of anonymous communication, in
which users wish to send messages to each other without revealing their
identities. We propose a novel framework to organize and compare anonymity 
deﬁnitions. In this framework, we present simple and practical
deﬁnitions for anonymous channels in the context of computational indistinguishability.
 The notions seem to capture the intuitive properties
of several types of anonymous channels (Pﬁtzmann and K¨ohntopp 2001)
(eg. sender anonymity and unlinkability). We justify these notions by
showing they naturally capture practical scenarios where information is
unavoidably leaked in the system. Then, we compare the notions and
we show they form a natural hierarchy for which we exhibit non-trivial
implications. In particular, we show how to implement stronger notions
from weaker ones using cryptography and dummy traﬃc – in a provably
optimal way. With these tools, we revisit the security of previous anonymous 
channels protocols, in particular constructions based on broadcast
networks (Blaze et al. 2003), anonymous broadcast (Chaum 1981), and
mix networks (Groth 2003, Nguyen et al. 2004). Our results give generic,
optimal constructions to transform known protocols into new ones that
achieve the strongest notions of anonymity.

1 Introduction

Anonymous channels allow users to send and receive messages without revealing
their identities. There are many applications for such channels, from protecting
“whistle blowers” or guaranteeing source conﬁdentiality in crime tips, to oﬀering
access to medical information to potential patients without fear of embarrassment,

(cid:2) Work partially done while the ﬁrst author was at U. of California San Diego. Supported 
in part by Conicyt via Fondecyt grant No. 1070332.

(cid:2)(cid:2) Research supported in part by NSF under grant CNS-0430595. Any opinions, ﬁndings,
 and conclusions or recommendations expressed in this material are those of
the author(s) and do not necessarily reﬂect the views of the National Science Foundation.


N. Borisov and I. Goldberg (Eds.): PETS 2008, LNCS 5134, pp. 24–43, 2008.

An Indistinguishability-Based Characterization of Anonymous Channels

25

or protecting voter privacy in electronic voting [23, 43]. Chaum [14] initiated the
modern study of anonymous communication by introducing the concept of mix
networks (or mix-nets). A mix-net is a protocol in which messages (say, emails)
traverse several routers (or mixers) and, in the process, are “mixed” with other
messages with the intention that the relation to the original sender be lost. Since
Chaum’s seminal paper, research in the area has been extensive, from concrete
mix-net proposals (see [47, 1, 39, 25, 33, 59] among many others) to very practical 
protocols based on mix-nets (eg. [29, 34,40,17,51,19] and references therein).
But mix-nets are not the only method to implement anonymous communication.
DC-nets (also known as anonymous broadcast networks), also proposed also by
Chaum [15] and later improved by many others [10, 57, 58, 32], allow broadcast
of messages without disclosing the sender identity. At least initially, most of the
eﬀort was put into improving the eﬃciency and reliability of the constructions, so
informal or ad-hoc deﬁnitions were common. Indeed, only recently the need for
general (and sound) deﬁnitions for these types of primitives has drawn some attention.
 Furukawa [24] and Nguyen et al. [44], in particular, give strong deﬁnitions
for “proving shuﬄes” (shuﬄes are the basic mixing operation) and Wikstr¨om [59]
presents a formal deﬁnition of mix-net in the UC model [13]. These deﬁnitions, although 
helpful in the design and analysis of mix-nets, do not provide a deﬁnition
of anonymous channels per se. Indeed, the absence of good anonymity deﬁnitions
that capture realistic concerns motivated this work.

Our Contributions: We present a novel framework to organize and compare
anonymity deﬁnitions. In this framework, we formalize the notions of unlinkability,
 sender-anonymity, receiver-anonymity, sender-receiver anonymity, and
unobservability, giving them new, strong indistinguishability-based formulations
without compromising the standard “intuitive” meaning they have in the literature 
[46]. We also introduce new notions, namely sender unlinkability and
receiver unlinkability. These notions, while arguably weak, can be used to implement 
some of the stronger notions. Then we formally prove some folklore
results: we show that sender-receiver anonymity implies both sender anonymity
and receiver anonymity, that sender-anonymity and receiver-anonymity (both
separately) imply unlinkability, and that unobservability implies all the other
properties. In the other direction, we present generic black-box transformations
from any “weak” anonymous protocols (eg. sender unlinkability, unlinkability,
or sender anonymity) into protocols anonymous under “stronger” notions (like
sender-receiver anonymity or unobservability). These transformations are provably 
optimal in terms of message traﬃc. We then revisit the anonymity of constructions 
based on broadcast channels, DC-nets and mix-networks, giving an
exact characterization of the anonymity they provide in our framework.

1.1 Coping with Information Leaks

There have been several attempts to characterize the intuitive properties anonymous 
channels should have. Most proposals so far seem to fall into two cat-
egories: (a) they present intuitive but weak deﬁnitions (targeted to particular

26

A. Hevia and D. Micciancio

applications with eﬃciency in mind), or (b) they present strong deﬁnitions with
often impractical implementations [6,28,16]. We seek to bridge this gap by providing 
strong deﬁnitions which can be tailored to speciﬁc practical scenarios.

We identify factors or conditions that may realistically limit anonymity. These
conditions are on speciﬁc information that, in principle, may be unrealistic to
assume hidden from the adversary. Consider for example,

(a) Total network ﬂow is usually public: the total number of messages sent
in a system is likely to be known to any party in the system, even external
observers.

(b) Amount of traﬃc per party is hard to conceal: the number of messages
sent or received by a particular party is often easily inferred by an observer
in the party’s network vicinity.

(c) Values sent or received by each party are not necessarily private:
the value of each message1 sent or received by a particular party could be
guessed, known, or even inﬂuenced by an adversary.

A proper deﬁnition of anonymity should take these “leaks” into account but hide
any additional information: hide everything except what follows from the potentially 
leaked information. This idea is already present in security deﬁnitions of
other cryptographic primitives. For example, if E is a semantically secure encryption 
function [30], it is standard to assume a ciphertext E(m) hides all partial
information about a message m except its length |m|. This is because |m| can
only be hidden at the cost of unnecessarily increasing the size of E(m). In fact,
the deﬁnitions in this work are inspired by the indistinguishability-based formalization 
of semantically secure encryption in [30], which guarantees the hiding of
all information on the plaintext other than the plaintext length. Similarly, an
anonymous channel should hide all information about the communication except 
for (some of) the information mentioned above. In this work, we study the
possible combinations of the conditions (a),(b), and (c) above, and analyze the
resulting notions. There are nine (potentially diﬀerent) notions. Named following
the intuition in [46], they are summarized in Table 1.

Sender Unlinkability and Receiver Unlinkability are the weakest notions of
anonymity we consider. A protocol is sender unlinkable if it hides any relation
between senders and receivers beyond what is implied by the total size of messages 
sent by each party and the speciﬁc values of the messages received by
each party. Its dual notion is Receiver Unlinkability in which the roles of sender
and receiver are reversed. Compared to Receiver Unlinkability, Sender and Receiver 
Unlinkability (or simply Unlinkability) strengthens the requirements for
the sender, hiding the message values sent and received but not necessaruly the
total size of messages exchanged by each party. A stronger notion is Sender
Anonymity as the number and values of messages for the sender must remain
hidden (but not the values of the received messages for each party). Compared to
Sender Anonymity, Receiver Anonymity simply reverses the roles of sender and

1 We distinguish two properties for each message: its value, that is, the data or payload

encoded in the message, and its destination.

An Indistinguishability-Based Characterization of Anonymous Channels

27

Table 1. Anonymity variants and their associated mnemonic notation. The notation
(X, Y ) encodes what information is not assumed to be protected by the deﬁnition
(ie. the meaning of X and Y ), and from whom the information comes: from each sender
(X), or each receiver (Y ). ‘U’ stands for “values of the messages sent/received”,
‘Σ’ for “number of messages sent/received”, ‘#’ for “total number of messages”,
and ‘?’ for “nothing”.

Anonymity Variant
Sender Unlinkability
Receiver Unlinkability
Sender-Receiver Unlinkability
Sender Anonymity
Receiver Anonymity
Strong Sender Anonymity
Strong Receiver Anonymity
Sender and Receiver Anonymity
Unobservability

Mnemonic Notation

(Σ, U)
(U, Σ)
(Σ, Σ)
(?, U)
(U, ?)
(?, Σ)
(Σ, ?)
(#, #)
(?, ?)

receiver. Further strengthening of these notions are Strong Sender Anonymity
(resp. Strong Receiver Anonymity) in that protocols can aﬀord to leak at most
the amount of traﬃc per receiver (resp. per sender). The strongest notions are
Sender-Receiver Anonymity, and Unobservability. They diﬀer in that the former 
may not protect the total network ﬂow (ie. the total number of messages
exchanged), while the latter must hide this information.

1.2 Strong, Formal Deﬁnitions

We adopt an indistinguishability based formalization under which the adversary
produces two message matrices (which encode message senders and receivers in
a standard way), is allowed to passively observe the execution of a communication 
protocol under a random one of these two matrices and then is required
to have non-negligible advantage in determining under which of the two matrices 
the protocol was executed. Within this framework, each diﬀerent anonymity
variant is deﬁned by requiring the adversary to produce two matrices whose
“leaked” information is the same. More precisely, if for any message matrix M
the anonymity variant assumes a certain information f(M) may not be pro-
(cid:2) produced by the
tected (it may be “leaked”), then the two matrices M, M
(cid:2)). Indeed, the notions corresponding to
adversary must satisfy f(M) = f(M
the diﬀerent anonymity variants mentioned in the previous section follow from
instantiating function f with the appropriate function (eg. one that computes
the set of message values sent per party, their number, or the total number of
messages, for example). Our formalisms build on deﬁnitional ideas used for encryption 
[30,42,27] and signatures [31]. Regarding adversaries, an often adopted
adversarial type is that of honest-but-curious (or passive) adversary, one where
the adversary obtains the internal state of the corrupted party, but the party
continues to follow the protocol. For simplicity of exposition, we consider passive

28

A. Hevia and D. Micciancio

adversaries with no corruptions (also called outside [20] or global passive adversary 
[52]) as it captures most of the subtleties of our model. Extensions to allow
(passive) corruptions are discussed in Section 6. We also stress that our results
apply to protocols with ﬁxed number of participants.

Since the adversary can freely choose the values and destinations of all messages 
in the protocol (ie. the message matrix), it follows that a protocol anonymous 
under this deﬁnition must hide all partial information on the message
matrix M except for what is implied by the known information f(M). In particular,
 sources and destinations of the messages are hidden up to the extent that
they do not follow from the known information. This is a quite strong guarantee.
We stress that we present an uniﬁed framework for all the proposed anonymity
variants. We believe this facilitates the organization and comparison of the notions 
as well as future extensions.

1.3 Comparing Notions

The indistinguishability-based deﬁnitions presented in this paper appear to capture 
the concerns of most intuitive but informal notions of anonymity proposed
in the past [46]. Indeed, in Section 1.4 we argue that previous anonymity formalizations 
in comparable network models are implied by some of the proposed
notions. In addition, we compare the new notions to each other. The comparison
is in terms of reductions. We say notion A implies (is stronger than) notion B if
any protocol satisfying A can be used to achieve B (via a possibly diﬀerent pro-
tocol).A diﬃculty arises if we assume point-to-point channels between parties.
In this case, protocols for all notions exist because of general secure multiparty
computation results [6, 28, 16], which makes the notions trivially equivalent. To
avoid this pitfall, we assume that the only communication channel between the
parties is an idealized version of a protocol achieving notion A, and then we show
how to implement a protocol that achieves notion B in this setting. The communication 
channel is idealized in the sense that parties only see its input/output
behavior. This eﬀectively gives us black-box reductions.
Results: We show three types of reductions between the anonymity deﬁni-
tions: (1) Trivial reductions, in which given a protocol for notion A, the same
protocol achieves notion B, (2) Reductions that use cryptography, and (3) Reductions 
that use “padding” (or “dummy traﬃc”). Interestingly, in terms of the
reductions, cryptography and padding do not appear exchangeable. Our results
suggest that in the reductions that require cryptography padding does not help,
while in those where padding is necessary, cryptography does not help.
Trivial Reductions: There exists a partial order of the notions, starting from
the weakest ones, sender unlinkability and receiver unlinkability, and ending
in the strongest one, unobservability, such that if a protocol achieves a certain 
notion then the same protocol achieves any weaker notion. These relations
give formal justiﬁcation to previous informal statements such as sender-receiver
anonymity implying both sender anonymity and receiver anonymity, or that
unobservability implies all the other notions. Interestingly, there is no trivial

An Indistinguishability-Based Characterization of Anonymous Channels

29

relation between sender anonymity, unlinkability, and receiver anonymity, which
indicates the deﬁnitions address incomparable security concerns. In [46], however,
 it is argued that Unlinkability (called “relationship anonymity” there) is
a “weaker property than each of sender anonymity and recipient anonymity”.
The disagreement disappears when one notices that, under our deﬁnitions, such
relation is true between strong sender (or receiver) anonymity and unlinkability.
Our framework allows us then to clarify an implicit assumption in [46], namely
that messages in the deﬁnitions of sender and receiver anonymity are private.
Using Cryptography: Under standard computational and setup assumptions,
we show that anonymity notions that reveal message values are not intrinsically
weaker than those that keep these values private. In particular, we show reductions 
from unlinkability to sender (or receiver) unlinkability. We also show
strong sender (resp. receiver) anonymity is not weaker than sender (resp. re-
ceiver) anonymity.2 The assumptions are standard, namely PKI and key-private
secure encryption schemes [4].3 The reductions are computationally eﬃcient and
do not have message overhead – they introduce no new messages – therefore
optimal in terms of communication.
Using “Padding”: We conclude showing that our strongest anonymity notions
can be achieved starting from much weaker anonymity notions, but at a cost
of message eﬃciency. In a nutshell, the reductions show that unobservability,
sender-receiver anonymity, strong sender (or receiver) anonymity, and unlinkability 
are actually equivalent. They also show that neither sender nor receiver
unlinkability are stronger than sender or receiver anonymity. These reductions
do introduce dummy traﬃc (ie. extra empty messages) but no more than necessary 
– they have optimal message overhead. These reductions do not require
computational or setup assumptions, and are computationally eﬃcient.4 The
results are summarized in Fig. 2.

1.4 Comparison with Previous Anonymity Notions

In this section, we compare the proposed variants with anonymity variants suggested 
previously in the literature. When necessary, we relax those deﬁnitions
to match our adversarial model (passive adversaries with no corruptions).
Indistinguishability-based definitions: Beimel and Dolev [3] deﬁne anonymity 
in terms of computational indistinguishability of the adversary’s view
(i.e. the messages and any extra information obtained by the adversary) in two

2 This proof actually justiﬁes the assumption made in [46] mentioned before. We
stress that this is not obvious since anonymity does not necessarily implies message
privacy, or viceversa.

3 In fact, based on preliminary results, we conjecture computational or setup assumptions 
are also necessary.

4 The reductions to Sender Anonymity, Strong Sender Anonymity, and Unobservability 
require the extra (but rather mild) assumption that a known upper bound on the
total network ﬂow exists. See Proposition 4 and remarks at the end of Section 4.2.

30

A. Hevia and D. Micciancio

(cid:2)

, j

cases: when party Pi sends a message to party Pj, and when Pi(cid:2) sends a message
(cid:2). Given that [3] does present protocols for multiple senders,
to Pj(cid:2), for any i, j, i
we see the deﬁnition as somewhat unsatisfactory in the following sense. The
deﬁnition does not specify how the messages and destinations for parties Pk (cid:2)= Pi
are selected. If they are chosen either arbitrarily (but the same for both views)
or with some probability distribution, then we can show they are strictly weaker
than sender-receiver anonymity. The alternative, choosing the inputs for parties
Pk (cid:2)= Pi, arbitrarily but diﬀerent in each view, might work (be equivalent to
sender-receiver anonymity) although it is unclear without a formal statement.
A similar concern can be raised on the deﬁnition proposed by von Ahn et al. in
the context of k-anonymity [56]. (Essentially the same deﬁnition for the case of
a ﬁxed receiver).

Golle and Juels [32] present a deﬁnition of anonymity (which they called
privacy) in the context of DC-nets [15]. In the deﬁnition in [32], a successful
adversary must distinguish between an execution where P1 sends a message to
some party Pb, and one in which P2 sends a message to some party P1−b, where
b is a bit chosen uniformly at random and unknown to the adversary. The rest
of the parties sends messages as instructed by the adversary. Unfortunately, this
deﬁnition suﬀers from a problem similar to the one above. The adversary is unable 
to exploit possible correlations between the destination of P1’s message and
the destination of some other party P3’s message. Consequently, this deﬁnition
can be shown to be strictly weaker than our deﬁnition of sender anonymity.
Luckily, the DC-net in [32] is strong enough to be proven sender anonymous (see
Section 5).
Other closely related definitions: Nguyen et al. [44] deﬁne privacy of a
shuﬄe by a similar experiment to ours (a notion called indistinguishability under
chosen permutation attack or IND-CPAS under an active adversary). In their
deﬁnition, the adversary chooses two permutations under which the messages
are shuﬄed and must distinguish which one was used. Translated to our setting,
their deﬁnition restricts message matrices to be permutations such that each
party sends exactly a single message. Also, it does not account for the types
of information leaks we consider. The comparison is somewhat unfair, as their
concern – privacy of a single shuﬄe – is diﬀerent than ours.

Another related deﬁnition was suggested (rather implicitly) by Ishai et al.
in [38]. There, Ishai et al. describe a functionality for anonymous communication
(synchronous setting with rushing). When paired with the appropriate notions
of multiparty computation [12] (under our adversarial model), their deﬁnition
becomes a special case of ours, namely Sender Anonymity (SA). Their work [38],
however, does not explore the proposed deﬁnition but instead use it to prove the
security of other (non-anonymity related) cryptographic protocols.

Recently and independently from our work, Feigenbaum et al. [22] presented
a deﬁnition of anonymity which, although it was specially tailored to the onionrouting 
system Tor [19], is closed to ours in spirit. In their work, several variants 
of anonymity are deﬁned in terms of indistinguishability of conﬁgurations,
where conﬁgurations may include values and destination of messages sent by

An Indistinguishability-Based Characterization of Anonymous Channels

31

parties in the system. When considered under our adversarial model, their definition 
diﬀers from ours as there the indistinguishability property is explicitly
expressed in terms of circuits (a routing path of a given message sent in any
onion-routing system) and messages/actions on them, while our deﬁnition does
not assume onion-routing-type of operation nor any particular underlying communication 
system. And, while our deﬁnition does seem to capture a wider variety 
of anonymity variants, the deﬁnition in [22] does allow an (arguably) stronger
adversarial model. None of the deﬁnitions above incorporates provisions to deal
with “leaked” information on the granularity done in the present work though.

1.5 Related Work
Dolev and Ostrovsky [20] present “xor-trees” protocols, a generalization of DCnet 
into a spanning tree, which they prove secure under a notion based on the
concept of anonymity set (see below). Similarly, Pﬁtzmann [45] proposes the notion 
of k-anonymity – further developped by [56] – which can be seen as an extension 
of the DC-net model to more practical graph structures (which partition
the parties into k-sized autonomous groups). Another approach was proposed
by Rackoﬀ and Simon in [49]. They describe a protocol for anonymous communication 
based on sorting networks, which is shown to satisfy some statistical
mixing properties. Relaxations to weaker adversaries were proposed by Reiter
and Rubin [50] and Berman et al. [7]. Both works presented alternative notions
of anonymity as well as eﬃcient constructions assuming an adversary that does
not monitor all communication channels. Camenisch and Lysyanskaya [11] give
a formal deﬁnition of onion routing [29] (along a provable secure protocol) but
they explicitly avoid deﬁning anonymous channels.

An alternative characterization of anonymity has been through the concept
of anonymity set [15,40]. The anonymity set is deﬁned as the set of parties that
could have sent a particular message as seen from the adversary [46]. Follow
up works [40, 53, 18] have proposed new characterizations of anonymity, mostly
in terms of the probability distributions the adversary assigns to each party in
order to represent the likelihood such party is the sender of a message. Deﬁnitions
based on formal methods have also been proposed [55, 37, 52, 41, 26]. Finally, it
is worth noticing that Hughes and Shmatikov [36] also present a framework
to formalize and compare diﬀerent notions of anonymity as done here. Using
the domain-theoretic primitive of function-view they model diﬀerent notions of
anonymity where information leaks can in principle be factored into the model.
Their results, however, are not inmediately comparable to ours, as they focus
only on non-probabilistic observers (adversaries) while ours can be probabilistic
as long as they are eﬃciently computable.
Organization: The rest of the paper is organized as follows. Section 2, introduces 
some notation and details on the execution model. Then, in Section 3,
we present the formal deﬁnition of anonymous channels. Section 4 presents implications 
between the notions as well as proofs of their optimality in terms of
communication. Then, in Section 5, we revisit previously proposed anonymous
protocols and examine their security in the current framework. We conclude in

32

A. Hevia and D. Micciancio

Section 6 mentioning some extensions to the model. Due to space constrains,
most proofs are only sketched here. They are provided in the full version [35].

2 Preliminaries

(cid:2)

i,j∈[n]

|mi,j|.

Model and Notation: We consider a system of n parties P1, . . . , Pn, where n is
polynomial in the security parameter k ∈ N, connected to each other by point-topoint 
communication channels. We distinguish two (possibly overlapping) types
of parties: senders and receivers. For any two ﬁnite sets A and B, let A (cid:4) B
denote the multiset union (also called sum or join) of A and B, and |A| denote
the size of multiset A. By convention, we assume the i, j-th element of any matrix
M = (mi,j)i,j∈[n] is denoted by mi,j. As usual, M T denotes the transpose of any
matrix M, and mi,∗ = (mi,j)j∈[n] a matrix row.
Messages: We let V = {0, 1}(cid:3) denote the message space where (cid:2) = (cid:2)(k). The
collection of messages sent by parties as well as their destinations is an n × n
matrix M = (mi,j)i,j∈[n], called the message matrix. For row index i and column
index j, mi,j ∈ P(V ) is the (multi)set of messages from party Pi to party Pj.5
The size of matrix M, i.e. the total number of messages sent, is denoted by
|M| def=
Adversaries and Protocol Execution: In our setting, adversaries are (possibly 
external) PPT parties in the system which can passively monitor all the
communication between parties. We consider only passive adversaries that do
not corrupt any party but are able to read (but not alter) all the messages exchanged 
by the parties. A protocol π is a sequence of instructions that all parties
(senders and receivers) must follow. The instructions involve local computations
and point-to-point message exchanges between parties. Our execution model is
a special case of the model presented by Canetti [12] (since we consider only passive 
adversaries). Given a message matrix M, we deﬁne the execution of protocol
π with input M under adversary A, as the process where each party Pi follows
the instructions of protocol π using as input the i-th row mi,∗ of matrix M. In
this process, we allow the adversary A to obtain a copy of all messages exchanged
in all communication channels. We say protocol π is a message-transmission protocol 
if, for any PPT adversary A and any message matrix M, each receiver Pj’s
local output yj after executing π on input M equals the multiset (cid:4)j∈[n]mi,j.

3 Security Notions

Our deﬁnition is formalized in an indistinguishability-type experiment following
similar approaches used in the formalization of semantically secure encryption

5 Actually, we abuse the notation and we see elements of P(V ) as multisets. This
extension is needed to consider parties that send duplicated messages to the same
receiver (see Section 4.2).

An Indistinguishability-Based Characterization of Anonymous Channels

33

schemes [5]. We deﬁne anonymity via an experiment or game, in which there
are two “worlds” (world 0 and world 1). We allow the adversary to choose the
messages (values and destinations) sent by each party in each world. These
choices are represented by two message matrices M (0) and M (1). Then, world
b ∈ {0, 1} is chosen uniformly at random, and message-transmission protocol π
is executed by all parties on input M (b). We measure the adversary’s success in
terms of her ability to distinguish the two worlds.

Our deﬁnition is inspired by the standard game used to deﬁne semantically
secure encryption scheme, namely the left-or-right characterization of IND-CPA
[5]. There, the adversary arbitrarily chooses two messages of the same length, is
returned an encryption of a random one of the two messages and then is required
to guess under which message the encryption was generated. The adversary’s inability 
to distinguish the plaintext underlying in the ciphertext eﬀectively means
she cannot compute any information on the plaintext except its length [30, 5].
Similarly, the deﬁnition of our anonymity game guarantees that no information
can be eﬃciently computed on the destinations of the messages sent during the
protocol.

j∈[n]

|mi,j|)i∈[n], and f#(M) def= |M|. Also, let f T

As mentioned in the introduction, one important diﬀerence between our formulation 
and the left-or-right game mentioned above is that we restrict the
adversary’s choices of the values and destinations of the messages to capture
what is known to the adversary. These restrictions are captured as follows.
Let fU, fΣ, and f# be functions that map matrices M = (mi,j)i,j∈[n]
into
P(V )n, Nn, and N respectively, deﬁned by fU(M) def= ((cid:4)j∈[n]mi,j)i∈[n], fΣ(M) def=
(cid:2)
U (M) def= fU(M T ), and
(
Σ(M) def= fΣ(M T ). Associated to each function f there is an equivalence relaf 
T
tion Rf ⊂ Mn×n(P(V ))2 where (M, M
(cid:2)).
For simplicity, we denote RU = RfU, RT
, and
R# = Rf#.
We are now ready to present the main deﬁnition. Given an n-party messagetransmission 
protocol π, an adversary A, and label N ∈ {SUL, RUL, UL, SA, RA,
SA∗
, RA∗
(k) described below.
The experiment is parameterized by label N, which determines the relation RN
Σ and R# according
considered. Relation RN is deﬁned in terms of RU,RT
to the table in Fig. 1. We deﬁne the success probability of adversary A attacking
(cid:4)− 1
(k) def= 2·Pr
protocol π under notion N as AdvN−anon
where the experiment is deﬁned as follows:

(cid:2)) ∈ Rf if and only if f(M) = f(M
U = Rf T

, SRA, UO}, consider the experiment ExpN−anon

, RΣ = RfΣ ,RT

Σ = Rf T

U ,RΣ,RT

(cid:3)

ExpN−anon

π,A

(k) = 1

U

Σ

π,A

π,A

Experiment ExpN−anon
b R← {0, 1}, and (cid:7)M (0), M (1)(cid:8) ← A(k)
if (cid:7)M (0), M (1)(cid:8) /∈ RN then return 0
else Execute π on input M (b) under adversary A until A outputs a bit g.

(k)

π,A

if (b = g) return 1 else return 0

34

A. Hevia and D. Micciancio

N Notion
SUL Sender Unlinkability
RUL Receiver Unlinkability
UL Unlinkability
SA Sender Anonymity
RA Receiver Anonymity
SA
RA
SRA Sender-Receiver Anonymity RSRA
UO Unobservability
RUO

Description of RN
def= RΣ ∩ RT
def= RU ∩ RT
def= RΣ ∩ RT
def= RT
U
def= RU
∗ Strong Sender Anonymity RSA∗ def= RT
∗ Strong Receiver Anonymity RRA∗ def= RΣ
def= R#
def= Mn×n(P(V ))2

RSUL
RRUL
RUL
RSA
RRA

Σ

U

Σ

Σ

Fig. 1. Anonymity variants and their associated relations RN

Deﬁnition 1. (Anonymous Channels) A message-transmission protocol π
achieves N-anonymity for N ∈ {SUL, RUL, UL, SA, RA, SA∗
, SRA, UO}, if
(k) is negligible in k ∈ N.
for all PPT adversaries A, the quantity AdvN−anon

, RA∗

π,A

4 Relation between the Notions

In this section, we show implications between the notions. We start by formalizing 
the type of reduction we use.
Black-box implications: As mentioned before, we consider a simpliﬁed network 
where the only communication channel between the parties is an idealized
implementation of a protocol satisfying a certain anonymity notion N1. We say
notion N1 implies notion N2 (or alternatively that N2 reduces to N1), denoted
by N1 → N2, if there exists a protocol θ(·) (with access to the idealized communication 
channel) such that, for every protocol π, the following holds: if π
achieves N1-anonymity, then θπ achieves N2-anonymity.
Results: Our results are summarized in Fig. 2. We ﬁrst describe some easy
implications, most of them folklore results, which until now remained without
formal proof. An interesting aspect of the result is that the transformation which
enables the reductions is the identity function. Therefore, some deﬁnitions are
stronger than others in the sense that any protocol achieving one deﬁnition also
achieves the other one.
Proposition 1. The following implications hold unconditionally UO → SRA →
SA∗ → SA → SUL, SRA → RA∗ → RA → RUL, SA∗ → UL → RUL and RA∗ →
UL → SUL.

4.1 Implications under Computational Assumptions

In this section, we show that, under some standard setup and computational
assumptions (namely PKI and key-private secure encryption [30,4]), some of the

An Indistinguishability-Based Characterization of Anonymous Channels

35

SUL

(Σ, U)

D2Sink

Triv

SA

(?, U)

Comp

Triv

Triv

Triv

SA∗
(?, Σ)

D2All

Comp

Triv

Comp

Triv

D2All

RUL
(U, Σ)

UL

(Σ, Σ)

RA

(U, ?)

D2Sink

D2All

Triv

Triv

Comp

Triv

Triv

SRA

(#, #)

Triv

UO
(?, ?)

RA∗
(Σ, ?)

D2Sink

Fig. 2. Relations among notions of anonymity. Arrows labeled Triv denote trivial implications 
(Proposition 1) and those labeled Comp denote implications under computational 
assumptions (Lemma 1). Arrows labeled D2Sink and D2All denote implications
that use the transformation of the same name (Proposition 4 and Proposition 5 respec-
tively). Implications obtained by transitivity are not drawn.

notions are equivalent in the sense that a protocol achieving one deﬁnition can
be eﬃciently transformed into a similar protocol achieving the other deﬁnition.
In particular, RUL,SUL, and UL are all equivalent, as well as SA and SA∗, and
RA and RA∗. Due to space restrictions, the assumptions are formalized in [35].
Lemma 1. Assume key-private semantically secure public-key encryption
schemes and PKI exist. Then SUL → UL, RUL → UL, SA → SA∗ and RA → RA∗.
For each implication of the lemma, the structure of the proof is the same and is
divided into two steps. To prove that notion N implies notion N(cid:2), we ﬁrst deﬁne
an intermediate notion, called I-N-anonymity (or value oblivious N-anonymity,
which we prove is implied by N, that is, N → I-N. Then, we prove that I-N→ N(cid:2).
Interestingly, the proof that N → I-N is the same for N ∈ {SUL, RUL, SA, RA},
so we present it only once, ﬁrst. The new notions, although somewhat technical,
are the natural extensions of relations RU and RT
U to capture indistinguishability
of the values instead of equality. Proving that the resulting notion I-N is in fact
implied by the original notion N is nonetheless non-trivial.
Let N ∈ {SUL, RUL, SA, RA}. Given N-anonymity, we deﬁne notion I-Nanonymity 
using an experiment similar to that underlying the deﬁnition of Nanonymity.
 In fact, the only diﬀerence is that the adversary can specify two PPT
sampling algorithms G(0) and G(1) from where the elements of the challenge matrices 
M (0), M (1) are drawn. The only restriction is that G(0) and G(1) must induce 
computationally indistinguishable ensembles.6 Intuitively, this experiment
6 At ﬁrst look, this type of adversary may seem artiﬁcial, as the restrictions on the
sampling algorithms cannot be eﬃciently tested. Nonetheless, this is all we need, as
Proposition 3 shows that for each implication I-N → N
(cid:3)-adversary can be
transformed into this type of I-N-adversary, which in turn Proposition 2 shows can
be mapped into an “regular” N-adversary.

(cid:3) any N

36

A. Hevia and D. Micciancio

(cid:5)

(cid:6)
G(1)(k, a)

(cid:5)
(cid:6)
G(0)(k, a)
k∈N,a∈V and

decouples the adversary’s control over message values and message destinations.
Matrices M (0), M (1) specify the adversarial choices for sources and destinations
of messages, while the sampling pair (G(0), G(1)) speciﬁes distributions for the
message values. Details follow.
Let k ∈ N be a security parameter. For simplicity, assume that each party
only sends a single message to each other party.7 Two algorithms G(0)(·,·) and
G(1)(·,·) form an indistinguishable sampling pair if each is PPT on the ﬁrst
input, and the ensembles
k∈N,a∈V are computational 
indistinguishable. We say PPT algorithm A is a legal adversary if, on
input k, A’s ﬁrst output is a tuple (M (0), M (1),(cid:7)G(0)(cid:8),(cid:7)G(1)(cid:8)) where M (0), M (1)
are message matrices and (cid:7)G(0)(cid:8),(cid:7)G(1)(cid:8) is the encoding of an indistinguishable
sampling pair. Given a legal adversary A, we deﬁne the experiment ExpI-N−anon
as described below. The corresponding success probability AdvI-N−anon
(k) of
adversary A is deﬁned in the usual way.
Experiment ExpI-N−anon
b R← {0, 1}, and (M (0), M (1),(cid:7)G(0)(cid:8),(cid:7)G(1)(cid:8)) ← A(k)
if (M (0), M (1)) (cid:2)∈ RN then return 0
else Parse M (0) as (m

(0)
i,j )i,j∈[n] and M (1) as (m
R← G(d)(k, m

For all i, j ∈ [n], all d = 0, 1,
(cid:2)= ∅, then set ¯m
¯M (0) ← ( ¯m
i,j )i,j∈[n] and ¯M (1) ← ( ¯m
Execute π on input ¯M (b) under adversary A until A outputs a bit g.
if (b = g) return 1 else return 0

← ∅ otherwise.

(d)
i,j ), or ¯m

(d)
i,j

(1)
i,j )i,j∈[n]

if m

(d)
i,j

(0)

π,A

(k)

π,A

π,A

(d)
i,j

(1)
i,j )i,j∈[n]

π,A

(k) is negligible in k ∈ N.

For completeness, the formal deﬁnition is presented next.
Deﬁnition 2. Let N ∈ {SUL, RUL, SA, RA}. A message-transmission protocol 
π achieves I-N-anonymity if for all legal PPT adversaries A, the quantity
AdvI-N−anon
We obtain the result of the lemma from the following two propositions. The
ﬁrst one shows that N → I-N for any notion N ∈ {SUL, RUL, SA, RA}, and the
second one proves the results of the lemma starting from I-N. Intuitively, this
proposition states that the adversary’s ability to choose the input values for the
messages does not weaken the notion of anonymity.
Proposition 2. Let N ∈ {SUL, RUL, SA, RA}, and let π be a message-transmission 
protocol that achieves N-anonymity. Then, π achieves I-N-anonymity.
Given any I-N-anonymous protocol π for N ∈ {SUL, RUL, SA, RA}, the simple
transformation consisting of encrypting (under a key-private encryption scheme
[4]) each message under the public key of the recipient produces a protocol that
can achieve a stronger anonymity notion. Indeed, next proposition simply shows

7 The implications still hold if more than one message is exchanged between each pair

of parties although the proof becomes a little more involved.

An Indistinguishability-Based Characterization of Anonymous Channels

37

that breaking the stronger notion gives raise to a legal adversary for the weaker
notion I-N. The details and proof are in the full version [35].
Proposition 3. Assume a semantically secure public-key encryption scheme exists 
[30]. Then I-SUL → UL, and I-SA → SA∗. Moreover, if the encryption
scheme is key-private [4], then I-RUL → UL, and I-RA → RA∗.
Proof (Lemma 1). It follows directly from combining Proposition 2 and 3.

4.2 Implications That Require “Dummy Traﬃc”
In this section, we show that notions UL, SA∗, RA∗, SRA, and UO are equivalent
under reductions that involve sending dummy traﬃc. Notions SUL and SA, as
well as RUL and RA are also equivalent.

Let D2Sink be the following protocol transformation. Given a message-transmission 
protocol π, output another protocol that operates like π but where each
sender transmits additional empty messages to a ﬁxed party (the “sink”) until
the sender’s total number equals a given constant μN. The next proposition
shows D2Sink can be used to achieve stronger notions of anonymity. The reader
is referred to the full version [35] for details.
Proposition 4. Assume the total number of messages in any protocol for the
notions SA, SA∗
, and UO is upper bounded by a publicly known value μN. Then,
SUL→SA, UL→SA∗, and RA∗→UO.
Similarly, let D2All be the transformation that instructs senders to transmit
one dummy message to everyone else per each valid message to be sent. D2All
is used to prove the following implications.
Proposition 5. RUL→RA, UL→RA∗, and SA∗→SRA.

4.3 Message Overhead and Optimality of the Transformations

The black-box transformations D2Sink of Proposition 4 and D2All of Proposition 
5 output protocols that use “dummy” messages (those whose value is “⊥”
which are ultimately discarded). These messages increase the communication
complexity of the protocol, so it is interesting to ask if there are better solutions,
 possibly based on cryptographic tools. Interestingly, we show that the
single transformations D2Sink and D2All described in previous section cannot
be substantially improved, even in the presence of PKI.

Thus, we explore the question of whether more message eﬃcient transformations 
exist, in terms of generating protocols where fewer messages (dummy
or not) are sent overall.8 For simplicity, we consider transformations where the

8 Recall that we say a message m is sent by a message-transmission protocol Π if
m is an element of the message matrix given to the protocol Π as input. This
message should not be confused with the packets sent over the point-to-point communication 
channels between the parties as the result of a particular implementation
of Π.

38

A. Hevia and D. Micciancio

input protocol is invoked via a black-box call only once; the general case is
discussed at the end of the section.

T1 = T1(ω) and δω

Let T be a transformation that maps a protocol ω into another protocol δω

T . We
measure message overhead by counting the number of extra messages that any
def= T(ω) adds on the underlying (black-box) protocol π. Concretely,
protocol δω
T
given two transformations T1, T2, we say T1 has less message overhead than T2
if protocols δω
T2 = T2(ω) when executed on the same input
matrix M require subprotocol ω to send t1 (resp. t2) messages when invoked
as part of δω
T2), where t1 < t2 for any protocol ω. More formally, let
T (M) ∈ Mn×n(P(V ))
[·]
M = (mi,j)i,j∈[n] be a message matrix, and denote by δ
the message matrix on which the black-box protocol (say ω) is invoked via a
T on input matrix M. We stress that
black-box call during the execution of δω
[·]
once M is ﬁxed, matrix δ
T (M) is well-deﬁned, independently of the messagetransmission 
protocol ω, as ω is invoked as black-box by δω

T1 (resp. δω

T exactly once.

(N(cid:2)

, N) ∈ {(SUL, SA), (RUL, RA), (UL, SA∗), (UL, RA∗),
Deﬁnition 3. Let
, SRA)}, and T be any transformation underlying implication
(RA∗
, SRA), (SA∗
N(cid:2) → N. The message overhead of T is ovh(T) def= maxM
where
the maximum is taken over all (allowed) non-empty message matrices M for notion 
N.

(cid:8) /|M|(cid:9)

(cid:8)
[·]
(cid:8)
T (M)

(cid:7)(cid:8)
(cid:8)
(cid:8)δ

It is easy to see that, under the assumption that the total number of messages
sent is at most μN, ovh(D2Sink) = n · μN. Similarly, but under no assumptions,
ovh(D2All) = n. The next two propositions show that we cannot do better. The
proof is by contradiction which is derived from the fact that if there are “too
few” messages sent by a party, the underlying black-box protocol may no longer
be invoked in a secure way. For Proposition 7, the construction and analysis are
similar but considering the number of messages received by any party.
Proposition 6. D2Sink is optimal for SUL→SA, UL→SA∗, and RA∗→UO.
Proposition 7. D2All is optimal for RUL→RA, UL→RA∗, and SA∗→SRA.

Upper bound per Sender: A similar analysis holds if a bound ˆμN on the
number of messages per sender is assumed instead, for SA and SA∗-anonymity.
(We stress that the implication SA → SA∗ of Lemma 1 is preserved under this
restriction). In this case the overhead is n· ˆμN, which is also optimal. This formulation,
 although more restrictive, can be more suitable for certain applications.9
From a theoretical point, however, it is not clear if there is any advantage to this
formulation over the one presented above.
Single vs. Multiple black-box calls: If we consider transformations that
output protocols that invoke the input (black-box) protocol more than once, then
is it possible to prove that the optimal overhead is n. A protocol δπ that achieves

9 Upper bounds on the number of messages sent per party may help to prevent certain

ﬂooding attacks against mix nets [34, 52].

An Indistinguishability-Based Characterization of Anonymous Channels

39

this is the one that uses a secure multiparty computation protocol (eg. [6]) to
compute |M| using π as communication channel; then, each party calls ensures
it sends |M| messages via π by adding suﬃcient dummy messages. Even though
such a secure multiparty protocol can be computed with constant number of
invocations to π [2] (and thus, O(n2) messages), it is likely that invoking π more
than once will render the resulting protocol impractical.

5 On the Anonymity of Previous Protocols

The ultimate purpose of a deﬁnition is to be used to properly characterize the security 
of concrete protocols. Accordingly, we revisit the security of known constructions 
based on broadcast channels [8], DC-nets or anonymous networks [15,32,54],
and mix-nets [33, 44, 24]. In Section 5, we examine the basic construction of Blaze
et al. [8], which is based on broadcast channels, and we argue it can be shown strong
receiver anonymous. We also discuss the DC-nets of [32] and sketch how the construction 
there can be proven sender anonymous. Finally, we highlight suﬃcient
conditions to prove the strong receiver anonymity of mix-net constructions based
on shuﬄes [33, 44]. (We only sketch these claims due to space constrains. Proofs
are provided in the full version.) By combining the constructions that underlie the
implications of previous sections, we obtain anonymous protocols provably secure
under the strongest notions: sender-receiver anonymity and unobservability.
Broadcast Networks: Broadcast channels can be used as a straightforward
approach to obtain some form of receiver anonymity [48]. In general, the most
obvious protocol of transmitting a message over the broadcast channel is trivially
RA-anonymous. Blaze et al. [8] recently suggested a protocol for anonymous
routing in the context of wireless networks. Very roughly, their basic protocol
is an adaptation of onion routing [29] to broadcast networks. The operation of
sending a message is then analogous, and involves computing a path of routers,
and a corresponding onion (a nested encryption) of the message (see [8] for
details). The diﬀerence is that each transmission of the “onion” between routers
is done via the broadcast channel, so all receivers attempt to decrypt the onion
but only the intended recipient succeeds (although not mentioned, some integrity
mechanism must be used in the onion). Under passive global adversaries, if the
encryption used provides key-privacy [4],10 the protocol can easily be shown
RA∗-anonymous. However, due to the shared nature of the wireless medium,
transforming it into a UO-secure protocol may not be practical given the message
overhead (unavoidable by Proposition 6).
DC-nets or Anonymous Broadcast: DC-nets [15,32] can be seen as particular 
instances of anonymous broadcast protocols [54]. In these protocols, there
is a single message sent which is public. In [32], Golle and Juels proposed very
eﬃcient anonymous broadcast protocol based on pairings. Whenever a transmission 
is to take place, all parties participate in the protocol by transmitting
“pads”. Each pad contains the (potentially empty) message the party intends

10 This requirement apparently was overlooked in [8].

40

A. Hevia and D. Micciancio

to transmit. Golle and Juels show how to combine the pads so the transmitted
messages are recovered with high probability (and therefore theirs is a messagetransmission 
protocol with high probability). They also show how each party can
provide a non-interactive zero-knowledge (NIZK) proof [21] for the correctness
of her pad without revealing the underlying message. By the simulatability of
the NIZK proof, it then follows that their protocol can be proven SA-anonymous
under global passive adversaries as long as the Bilinear Diﬃe-Hellman assumption 
[9] holds. Notice that this result is not implied by their security proof as
the anonymity notion used in [32] is arguably diﬀerent (see Section 1.4).
MIX networks: Robust and eﬃcient MIX-net constructions can be built from
eﬃcient schemes to prove a shuﬄe [25,33,44]. In these constructions, each mixer
proves the correctness of the shuﬄe operation (usually a random permutation and
sometimes partial decryption) was done correctly. The resulting mix-net protocol
may work as follows: ﬁrst, all senders send encryptions of their messages to the
ﬁrst mixer (the encryptions are made under a threshold key shared by the mix-
ers). Then, the mixing process starts where each mixer performs (and proves) her
shuﬄe passing the resulting vector to the next mixer. The last mixer broadcast the
resulting vector. The shuﬄes in [33] and [24, Appendix A] can be proven honest
veriﬁer zero-knowledge (HVZK) arguments. The shuﬄes in [25,44] can be shown
to satisfy the stronger property IND-CPAS [44]. Under passive adversaries, both
properties suﬃce to prove the adversary cannot distinguish two executions of the
associated mix-nets even under adversarial inputs. Assuming the last mixer broadcasts 
the output, these constructions can then be proven RA∗-secure.

6 Variants and Extensions

k-anonymity: Intuitively, a protocol achieves k-anonymity if any adversary
trying to determine the sender (resp. receiver) of a message can only narrow the
sender’s identity down to no less than k possible senders (resp. receivers). The
concept was proposed by Pﬁtzmann [45] and further developped (along with
eﬃcient constructions) by von Ahn et al. [56] as a way to improve the eﬃciency
of DC-nets. We can accommodate the notion of k-anonymity in our framework
by further restricting the relation RN. For each of the message matrices output
by the adversary we require at least k non-empty rows (resp. columns) to capture
the restriction to k senders (resp. receivers).
Passive Adversaries with corruptions: As mentioned before, it is possible
to extend our framework to consider party corruptions. The adversary would
be allowed to passively (either statically or dynamically) corrupt senders and
receivers, with the obvious restrictions that the local inputs and outputs corresponding 
to the corrupted parties must be the same in the two message matrices
output by the adversary. Note that this conditions immediately hold if the corrupted 
party that does not send or receive messages and only acts as forwarder
(router). The security proofs for the protocols mentioned in previous section
carry to this stronger model. Extending our framework beyond passive attacks
(active adversaries) is currently part of ongoing research.

An Indistinguishability-Based Characterization of Anonymous Channels

41

References

1. Abe, M.: Universally veriﬁable mix-net with veriﬁcation work independent of the
number of mix-servers. In: Nyberg, K. (ed.) EUROCRYPT 1998. LNCS, vol. 1403,
pp. 437–447. Springer, Heidelberg (1998)

2. Beaver, D., Micali, S., Rogaway, P.: The round complexity of secure protocols. In:
Proc. of the 22nd Annual ACM Symposium on the Theory of Computing – STOC
1990, pp. 503–513. ACM Press, New York (1990)

3. Beimel, A., Dolev, S.: Buses for anonymous message delivery. Journal of Cryptology 
16 (2003)

4. Bellare, M., Boldyreva, A., Desai, A., Pointcheval, D.: Key-privacy in public-key
encryption. In: Boyd, C. (ed.) ASIACRYPT 2001. LNCS, vol. 2248, pp. 566–582.
Springer, Heidelberg (2001)

5. Bellare, M., Desai, A., Pointcheval, D., Rogaway, P.: Relations among notions of
security for public-key encryption schemes. In: Krawczyk, H. (ed.) CRYPTO 1998.
LNCS, vol. 1462, pp. 26–45. Springer, Heidelberg (1998)

6. Ben-Or, M., Goldwasser, S., Wigderson, A.: Completeness theorems for noncryptographic 
fault-tolerant distributed computations. In: Proc. of the 20th Annual ACM
Symposium on Theory of Computing, pp. 1–10. ACM Press, New York (1988)

7. Berman, R., Fiat, A., Ta-Shma, A.: Provable unlinkability against traﬃc analysis.

In: Juels, A. (ed.) FC 2004. LNCS, vol. 3110. Springer, Heidelberg (2004)

8. Blaze, M., Ioannidis, J., Keromytis, A.D., Malkin, T., Rubin, A.: WAR: Wireless
anonymous routing. In: Christianson, B., Crispo, B., Malcolm, J.A., Roe, M. (eds.)
Security Protocols 2003. LNCS, vol. 3364, pp. 218–232. Springer, Heidelberg (2005)
9. Boneh, D., Franklin, M.K.: Identity-based encryption from the weil pairing. In:
Kilian, J. (ed.) CRYPTO 2001. LNCS, vol. 2139, pp. 213–229. Springer, Heidelberg
(2001)

10. Bos, J., den Boer, B.: Detection of disrupters in the DC protocol. In: Quisquater,
J.-J., Vandewalle, J. (eds.) EUROCRYPT 1989. LNCS, vol. 434, pp. 320–328.
Springer, Heidelberg (1990)

11. Camenisch, J., Lysyanskaya, A.: A formal treatment of onion routing. In: Shoup,
V. (ed.) CRYPTO 2005. LNCS, vol. 3621, pp. 169–187. Springer, Heidelberg (2005)
12. Canetti, R.: Security and composition of multiparty cryptographic protocols. Journal 
of Cryptology 13(1), 143–202 (2000)

13. Canetti, R.: Universally composable security: a new paradigm for cryptographic
protocols. In: Proc. of the 42nd IEEE Symposium on Foundations of Computer
Science, pp. 136–145. IEEE Computer Society Press, Los Alamitos (2001)

14. Chaum, D.: Untraceable electronic mail, return addresses, and digital pseudonyms.

Communications of the ACM 24(2), 84–88 (1981)

15. Chaum, D.: The Dining Cryptographers Problem: Unconditional sender and recipient 
untraceability. Journal of Cryptology 1(1), 65–75 (1988)

16. Chaum, D., Crepeau, C., Damg˚ard, I.: Multiparty unconditional secure protocols.

In: Proc. of STOC 1988, pp. 11–19. ACM Press, New York (1988)

17. Danezis, G., Dingledine, R., Mathewson, N.: Mixminion: Design of a Type III

Anonymous Remailer Protocol. In: Proc. of IEEE Security and Privacy (2003)

18. D´ıaz, C., Seys, S., Claessens, J., Preneel, B.: Towards measuring anonymity. In:
Dingledine, R., Syverson, P.F. (eds.) PET 2002. LNCS, vol. 2482. Springer, Heidelberg 
(2003)

19. Dingledine, R., Mathewson, N., Syverson, P.: Tor: The second-generation onion

router. In: Proc. of the 13th USENIX Security Symposium (2004)

42

A. Hevia and D. Micciancio

20. Dolev, S., Ostrobsky, R.: Xor-trees for eﬃcient anonymous multicast and reception.

ACM Trans. on Information System Security 3(2), 63–84 (2000)

21. Feige, U., Lapidot, D., Shamir, A.: Multiple noninteractive zero knowledge proofs

under general assumptions. SIAM Journal on Computing 29(1) (1999)

22. Feigenbaum, J., Johnson, A., Syverson, P.: A model for onion routing with provable 
anonymity. In: Financial Cryptography. LNCS, vol. 4886. Springer, Heidelberg
(2007)

23. Fujioka, A., Okamoto, T., Ohta, K.: A practical secret voting scheme for large scale
elections. In: Proc. of AUSCRYPT 1992. LNCS, vol. 718, pp. 244–251. Springer,
Heidelberg (1992)

24. Furukawa, J.: Eﬃcient, veriﬁable shuﬄe decryption and its requirement of unlinkability.
 In: Bao, F., Deng, R., Zhou, J. (eds.) PKC 2004. LNCS, vol. 2947. Springer,
Heidelberg (2004)

25. Furukawa, J., Sako, K.: An eﬃcient scheme for proving a shuﬄe. In: Kilian, J. (ed.)

CRYPTO 2001. LNCS, vol. 2139. Springer, Heidelberg (2001)

26. Garcia, F.D., Hasuo, I., Pieters, W., van Rossum, P.: Provable anonymity. In: Proc.
of the 3rd ACM Workshop on Formal Methods in Security Engineering – FMSE
2005, pp. 63–72. ACM Press, New York (2005)

27. Goldreich, O.: A uniform complexity treatment of encryption and zero-knowledge.

Journal of Cryptology 6(1), 21–53 (1993)

28. Goldreich, O., Micali, S., Wigderson, A.: Proofs that yield nothing but their validity
and a methodology of cryptographic protocol design. In: Proc. 27th Symposium on
Foundations of Computer Science, pp. 174–187. IEEE Press, Los Alamitos (1986)
29. Goldschlag, D.M., Reed, M.G., Syverson, P.F.: Hiding Routing Information. In:
Proc. of Information Hiding. LNCS, vol. 1174, pp. 137–150. Springer, Heidelberg
(1996)

30. Goldwasser, S., Micali, S.: Probabilistic encryption. Journal of Computer and System 
Science 28, 270–299 (1984)

31. Goldwasser, S., Micali, S., Rivest, R.: A digital signature scheme secure against

adaptive chosen-message attacks. Siam J. of Computing 17(2), 281–308 (1988)

32. Golle, P., Juels, A.: Dining cryptographers revisited. In: Cachin, C., Camenisch,

J.L. (eds.) EUROCRYPT 2004. LNCS, vol. 3027. Springer, Heidelberg (2004)

33. Groth, J.: A veriﬁable secret shuﬄe of homomorphic encryptions. In: Desmedt,

Y.G. (ed.) PKC 2003. LNCS, vol. 2567. Springer, Heidelberg (2002)

34. G¨ulc¨u, C., Tsudik, G.: Mixing E-mail with Babel. In: Proc. of the Network and
Distributed Security Symposium – NDSS 1996, pp. 2–16. IEEE Press, Los Alamitos
(1996)
mous Channels (2008), http://www.dcc.uchile.cl/∼ahevia/pubs/

35. Hevia, A., Micciancio, D.: Indistinguishability-based Characterization of Anony36.
 Hughes, D., Shmatikov, V.: Information Hiding, Anonymity and Privacy: a Modular 
Approach. Journal of Computer Security 12(1), 3–36 (2004)

37. Halpern, J.Y., O’Neill, K.R.: Anonymity and information hiding in multiagent

systems. Journal of Computer Security (2004)

38. Ishai, Y., Kushilevitz, E., Ostrovsky, R., Sahai, A.: Cryptography from anonymity.

In: Proc. of FOCS 2006. IEEE Press, Los Alamitos (2006)

39. Jakobsson, M., Juels, A., Rivest, R.L.: Making mix nets robust for electronic voting
by randomized partial checking. In: Proc. of the 11th USENIX Security Symposium
(SECURITY 2002), pp. 339–353. USENIX Association (2002)

40. Kesdogan, D., Egner, J., B¨uschkes, R.: Stop-and-go MIXes: Providing probabilistic
anonymity in an open system. In: Aucsmith, D. (ed.) IH 1998. LNCS, vol. 1525.
Springer, Heidelberg (1998)

An Indistinguishability-Based Characterization of Anonymous Channels

43

41. Mauw, S., Verschuren, J.H.S., de Vink, E.P.: A formalization of anonymity and
onion routing. In: Samarati, P., Ryan, P.Y.A., Gollmann, D., Molva, R. (eds.)
ESORICS 2004. LNCS, vol. 3193. Springer, Heidelberg (2004)

42. Micali, S., Rackoﬀ, C., Sloan, B.: The notion of security for probabilistic cryptosystems.
 Siam Journal of Computing 17(2), 412–426 (1988)

43. Neﬀ, A.: A veriﬁable secret shuﬄe and its application to E-voting. In: Proc.
8th ACM Conference on Computer and Communications Security, ACM SIGSAC
(2001)

44. Nguyen, L., Safavi-Naini, R., Kurosawa, K.: Veriﬁable shuﬄes: A formal model and
a paillier-based eﬃcient construction with provable security. In: Proc. of Applied
Cryptography and Network Security. LNCS, vol. 3089. Springer, Heidelberg (2004)
45. Pﬁtzmann, A.: How to Implement ISDNs Without User Observability – some Remarks.
 Tech. report Fakult¨at f¨ur Informatik, Universit¨at Karlsruhe (1985)

46. Pﬁtzmann, A., K¨ohntopp, M.: Anonymity, unobservability, and pseudonymity —
A proposal for terminology. LNCS, vol. 2009, pp. 1–9. Springer, Heidelberg (2001)
47. Pﬁtzmann, A., Pﬁtzmann, B., Waidner, M.: ISDN-Mixes: Untraceable communication 
with very small bandwidth overhead. In: Proc. Kommunikation in verteilten
Systemen, Informatik-Fachberichte 267, pp. 451–463. Springer, Heidelberg (1991);
Slightly extended. In: Information Security, Proc. IFIP/Sec 1991, pp. 245–258
(1991)

48. Pﬁtzmann, A., Waidner, M.: Networks without user observability. Computers &

Security 6(2), 158–166 (1987)

49. Rackoﬀ, C., Simon, D.R.: Cryptographic defense against traﬃc analysis. In: Proc. of

STOC 1993, pp. 672–681. ACM Press, New York (1993)

50. Reiter, M.K., Rubin, A.D.: Crowds: Anonymity for web transactions. ACM Transactions 
on Information and System Security 1(1), 66–92 (1998)

51. Rennhard, M., Plattner, B.: Practical anonymity for the masses with morphmix.

In: Juels, A. (ed.) FC 2004. LNCS, vol. 3110. Springer, Heidelberg (2004)

52. Serjantov, A.: On the Anonymity of Anonymity Systems. PhD thesis, University

of Cambridge (2004)

53. Serjantov, A., Danezis, G.: Towards an information theoretic metric for anonymity.
In: Dingledine, R., Syverson, P.F. (eds.) PET 2002. LNCS, vol. 2482. Springer,
Heidelberg (2003)

54. Stajano, F., Anderson, R.: The cocaine auction protocol: On the power of anonymous 
broadcast. In: Pﬁtzmann, A. (ed.) Information Hiding —3rd International
Workshop, IH 1999. LNCS, vol. 1768. Springer, Heidelberg (2000)

55. Syverson, P.F., Stubblebine, S.G.: Group principals and the formalization of
anonymity. In: Proc. of the World Congress on Formal Methods. LNCS, vol. 1708,
pp. 814–833. Springer, Heidelberg (1999)

56. von Ahn, L., Bortz, A., Hopper, N.J.: k-Anonymous message transmission. In:
Proc. of the 10th ACM Conference on Computer and Communication Security –
CCS 2003, pp. 122–130. ACM Press, New York (2003)

57. Waidner, M.: Unconditional sender and recipient untraceability in spite of active
attacks. In: Proc. of EUROCRYPT 1889. LNCS, vol. 434, pp. 302–319. Springer,
Heidelberg (1990)

58. Waidner, M., Pﬁtzmann, B.: The dining cryptographers in the disco: Unconditional
sender and recipient untraceability with computationally secure serviceability. In:
Proc. of EUROCRYPT 1989. LNCS, vol. 434, p. 690. Springer, Heidelberg (1989)
59. Wikstr¨om, D.: A universally composable mix-net. In: Naor, M. (ed.) TCC 2004.

LNCS, vol. 2951, pp. 317–335. Springer, Heidelberg (2004)

