Taking Advantage of LOM Semantics for

Supporting Lesson Authoring

Olivier Motelet(cid:1) and Nelson A. Baloian

Universidad de Chile, Santiago, Chile
Universidad Diego Portales, Santiago, Chile
{omotelet, nbaloian}@dcc.uchile.cl

Abstract. Learning Object Metadata (LOM) is an interoperable standard 
aimed to foster the reuse of learning material for authoring lessons.
Nevertheless, few work was done on taking advantage of LOM-semantics
to facilitate retrieval of learning material. This article suggests an original 
approach which uses the structure of a lesson in order to automatically 
generate LOM-semantic-based queries for retrieving learning
material for that lesson whereas the user continues to formulate easy-towrite 
queries without semantic speciﬁcations. This proposal consists of
a four-component framework attempting to consider the main issues of
semantic-based retrieval of documents.

1 Introduction

One of the main motivations behind Learning Objects and Learning Object
Repositories is to facilitate their reuse by as many people as possible. In order 
to make this possible, the characteristics of the learning objects should be
exposed, so that other people could locate and retrieve them. A very critic issue 
in this process is how to describe an object and how to search for it in
order to ﬁnd those who really would match the needs of a potentially user. The
metadata describing a learning object is a fundamental characteristic enabling
this process. In order to make the ﬁnding of a suitable learning object more
accurate, the description of a learning object should not only consider the physical 
characteristics of the document, like the one proposed by the DublinCore
Metadata Intitiative1 but it should also be pedagogically relevant. The Learning
Object Metadata (LOM) standard includes such data. Consequently, Learning
Object Repositories (LOR) typically use this metadata for the storage and retrieval 
of learning objects. However, following this standard means that authors
or people classifying learning objects should assign values to almost 60 metadata 
attributes in order to fully describe the material according to the IEEE
LTSC LOM speciﬁcation2. Also users trying to retrieve the learning material
may have to deal with this problem. Such a fastidious task is not compatible

(cid:1) This work has been ﬁnanced by Chile-Corea IT Cooperation Center.
1 http://www.dublincore.org/
2 http://ltsc.ieee.org/wg12/

R. Meersman et al. (Eds.): OTM Workshops 2005, LNCS 3762, pp. 1159–1168, 2005.
c(cid:1) Springer-Verlag Berlin Heidelberg 2005

1160

O. Motelet and N.A. Baloian

with making learning material sharing a customary activity for regular teachers.
Several researchers have already described this problem and propose the automatic 
generation of metadata as a way to solve it[1,2,3]. Basically, metadata
generation systems are intended to improve the performance of metadata exploitation 
systems[4]. Similarly, metadata exploitation system should inﬂuence
metadata generation system speciﬁcations. However, the topic of exploiting the
metadata of learning objects is still in its beginnings. The typical way of making
use of the metadata for retrieving relevant learning material is making a query
ala Google on all the attributes independently of their nature. More advanced
exploitation systems called recommender systems make use of the experience
and opinion of other people having already used this material (see [5] for an
example). Baloian et al.[6] use LOM and user/system modeling as a base of a
collaborative recommender system for learning material. Duval and Hodgins[1]
suggest a collaborative ﬁltering system based on rating and pattern recognition.
These systems beneﬁt from the semantics of LOM, i.e. the semantic structure
of the data, to rate the didactic material and facilitate its retrieval. This article
presents an approach that beneﬁts from LOM semantics for retrieving learning
objects to ﬁt in a certain learning context. This procedure is aimed to support
an instructor during the authoring of an entire course syllabus based on learning
material retrieved from diﬀerent repositories without having to provide explicitly
all the metadata values for querying the repository. Moreover, this approach may
also help to automatically generate metadata for a learning object which exists
inside a coherent course syllabus. Since this method is based on the existence of
a graph that structures and relates the learning material to support the process,
it is complementary to the use of recommender systems. In order to introduce
our work, learning object retrieval based on LOM semantics is discussed. Then,
learning object graphs are brought in and their dependency with LOM semantic
is studied. Next, integration and processing of LOM-semantic-based retrieval is
presented. Finally, a framework of a system implementing our approach is drawn.

2 LOM-Semantic-Based Retrieval of Learning Object

Google and other indexing engines typically provide interfaces for simple queries
with a semantic based on logical operators. In such systems, these basic queries
(BQueries) target complex indexes generated by document content analysis procedures.
 Learning Object Repositories generally oﬀer interfaces for processing
such simple queries. In these settings, BQueries concern all the elements of the
objects’ metadata set independently of their nature, making a string matching
without using any semantic similarity of the terms. Although such a retrieval
process is simple for the end-user, it does not beneﬁt from one of the main advantages 
of metadata over indexes: their semantic classiﬁcation. LOM exploitation
systems should use this characteristic to overcome the limits of string-based indexing 
engines. In the currently existing LORs, users have to complete forms with
all the ﬁelds of the learning objects metadata set in order to make a query considering 
which takes in account the metadata semantics . Indeed, query languages

Taking Advantage of LOM Semantics for Supporting Lesson Authoring

1161

enabling semantic precision (for example XPath, XQuery or RDFQL) are too
complex to be integrated at user-level. Form-based queries for retrieving learning
objects is a time consuming and tedious task. Studies[7] show that authors of
learning material do not properly generate complete and correct metadata. In
the same way, we do not expect that users are willing to properly generate metadata 
for searching this kind of material. Processing semantic based queries involves 
many well-known problems characterized by the Artiﬁcial Intelligence[8].
In particular, a system for processing LOM-Semantic-based Queries (LSQueries)
should be able to ﬁnd relations between the vocabulary used in the query expression 
and the vocabulary used in the learning object repositories. If no relevant
matching can be found, LSQueries should be approximated in order to eﬀectively 
retrieve the desired material. Approximated outcomes could be reached
for example by a process in which query restrictions are relaxed according to
predeﬁned or customizable strategies.

Some work dealing with the automatic production of queries enabling
semantic-based retrieval of learning objects has been motivated by the diﬃculty 
of doing it ‘by hand‘. Typically, this kind of systems falls in the category
of recommender systems based on complex recognition pattern methods or user
proﬁle analysis[6,1]. Other systems assist users to generate LSQueries. Pinkwart
et al.[9] present a system generating LSQueries based on the potential similarities 
existing between learning material. This method is particularly aimed to
support collaborative learning. Learning Management Systems (LMS) could also
help users to generate LSQueries by providing information like the educational
context, the expected learning time and the used language[1]. Our approach
takes advantage of the structure in which a learning object might be embedded
in order to enable semantic-based retrieval of learning objects. For example, a
syllabus of a certain learning unit might be represented with a graph, in which
nodes contain the learning material and edges the relations between them.

A

LOM

B

LOM

E

LOM

?

LOM

C

LOM

D

LOM

Fig. 1. Graph of learning objects during authoring process. One element is not yet
referring a concrete material, but it is already characterized inside the graph.

As illustrated in ﬁgure 1, a lesson syllabus graph could refer to both, already
existing material and material that has still to be provided or retrieved. Our
proposal is to take advantage of the semantics of the graph, i.e. the nature of the
edges relating the nodes, in order to identify some characteristics of the missing
material. This process should enable the retrieval of educational resources suiting
to the context deﬁned by the lesson syllabus. In order to introduce this approach,
the next part explores the inﬂuence of graph semantics on the semantics of LOM.

1162

O. Motelet and N.A. Baloian

3 Inﬂuence of Graph Semantics on LOM Semantics

From the beginning of the development of intelligent application for learning,
authors have proposed the structuring of learning material in graphs. In [10],
McCalla presents a number of self-adapting tutoring systems for supporting
individual learners and he considers the graph as a key structure for the learning 
unit syllabus in order to achieve ﬂexibility. Fischer[11] uses two diﬀerent
graphs to deﬁne a syllabus. First, a graph of concepts is built by means of a
set of semantic relations. Second, a graph of material is deﬁned based on a set
of rhetorical relations. Using learning material metadata, the system generates
semi-automatically the sequencing of the learning material. Baloian et al.[12,13]
use a graph structure for representing the syllabus of a learning unit. Such graphs
are called Didactic Networks. Didactic Networks enable the generation of several
versions of the same lecture according to diﬀerent teaching styles and learning
requirements. This functionality is based on the analysis of a predeﬁned set of
rhetoric relations between the didactic activities. Similarly, Farrell et al.[14] suggests 
to enable the dynamic assembly of learning objects using graph of concepts
and LOM semantics. In particular, the LOM semantics are used to identify the
rhetorical relations linking the learning objects.

Independently of the type of graph used for structuring the learning material,
an obvious fact is that the relations between two educational resources depend
on their type and content. By deﬁnition, LOM values should reﬂect these characteristics.
 Consequently, in a learning object graph, the relations between two
elements depend on the values of their metadata. Reversely, the values of the
metadata of two learning objects may somehow be aligned with the relationships
existing between these elements.

Consider the two learning objects L1 and L2 of ﬁgure 2. L1 theorizes L2 and
L2 concretizes L1. Some similarities between the values of their metadata can be
observed. For example, values for keywords, educational context, and classiﬁcation are
quite alike in both educational resources. This fact is not just a coincidence: we
could derive the values of some metadata of one learning object from others by

concretizedBy

gen/title = While

gen/keyword = {while, condition,variable scope}

L

1

educ/interactivityType = expositive

educ/interactivityLevel = low

edu/context = Univ 1st cycle

classiﬁcation = Domain / Programming Tech

educ/ressourceType = slide

(cid:1)

<=

<=

(cid:1)

(cid:1)

(cid:15464) {diagram, figure, graph,

slide, table, narrativeText}

theorizedBy

gen/title = While Example

gen/keyword = {java, while, condition}

educ/interactivityType = active
educ/interactivityLevel = high
edu/context = Univ 1st cycle

L

2

classiﬁcation = Domain / Programming Tech

educ/ressourceType = simulation

(cid:15464) {exercise, simulation, diagram, figure,
 graph, experiment, problemStatement}

Fig. 2. Two learning objects L1 and L2 linked with rhetoric relations. These relations
imply mutual inﬂuences between the LOM document values.

Taking Advantage of LOM Semantics for Supporting Lesson Authoring

1163

considering the relations between them. For instance, the nature of the relations
between L1 and L2 imposes some restrictions on the material nature. Since
L2 concretizes L1, L2 will deal with an exercise, a simulation, a diagram, an
experiment, or a problem statement, whereas L1 will deal with a diagram, a
ﬁgure, a graph, some slides, a table, or a narrative text. For the same reason, type
and level of L1’s interactivity with the students will be certainly lower or equal
than the ones of L2 . Perhaps these assumptions may not have been valid for all
potential users, so each community should deﬁne their own rules according to
their needs. The important fact is that such rules provide relevant information for
retrieving the learning material which is missing in a lesson graph. In particular,
some rules may generate restrictions on the values of certain metadata. These
restrictions could be used to formulate the queries to be sent to learning object
repositories. In addition to that, other rules identify similarities between certain
metadata. These similarities may serve to rank the query results. In the next
part, a framework for semantic-based retrieval of learning objects during lesson
authoring is presented.

4 Semantic-Based Retrieval during Lesson Authoring

Document retrieval systems are basically composed of two main components
feeding mutually each other, one dealing with query processing and the other
with result processing. Query processing provides results and result processing 
may deﬁne new queries. In addition to them, a framework for semanticbased 
retrieval of learning objects during authoring of lesson syllabus should
consider not only a component reﬂecting the authoring process, but also a component 
responsible for the generation of semantic-based queries and ranking
information.

Graph-based

Authoring of Lesson

Syllabus

Semantic-based

Query and Ranking

Generator

Semantic-based
Query Processing

Query Result
Processing

Fig. 3. Framework for semantic-based retrieval of learning objects during authoring of
lesson syllabus.

4.1 Graph-Based Authoring of Lesson Syllabus
The lesson graph component is responsible for supporting the authoring of the
lesson syllabus. In the current implementation, this component is based on a

1164

O. Motelet and N.A. Baloian

L

4

loops

?

introducesTo

L

1

gen/title = While

gen/keyword = {while, condition,variable scope}

...

theorizedBy

concretizedBy

L

3

general/title = For

general/keywords = {for, condition, increment}

...

L

2

gen/title = While Example

gen/keyword = {java, while, condition}

...

Fig. 4. L1, L2, and L3 are learning objects with LOM description. The instructor is
looking for a learning object L4 in order to introduce L1, L2, and L3.

previous work: LessonMapper[13,15], a Java application for authoring lesson
graphs. This platform is extended to assume the process illustrated by ﬁgure
4. In this example, the author of the syllabus of a lesson about programming
languages is looking for some learning material in order to introduce the concept
of loops. First, s/he creates a new node L4 characterized with the key-sentence
loops. Then, s/he speciﬁes that L4 introduces L1, L2, and L3 by creating links
of type introducesTo. On one hand, the key-sentence is used to formulate a
BQuery (see section 2), which is provided to the query processing module. On
the other hand, the graph semantics is processed by the generator component in
order to create a LSQuery reﬂecting the lesson context.

4.2 Generator of Semantic-Based Query and Ranking Information

The generator component is intended to provide semantic-based queries to the
query processing component and also ranking information to the result processing 
module. Various implementations of this component may be developed. For
instance, this module may process pattern analysis or user proﬁle matching, or
simply recover some relevant information from LMS. This work focuses on the
proposal of the previous section: taking advantage of the inﬂuences of the graph
semantics on LOM semantics. In this approach, processing the semantics of a
lesson graph with a set of rules generates queries and ranking information. This
section described the lanaguage used for specifying these rules and the framework
applied to diﬀuse them recursively throughout the graph.

Generation Rule Speciﬁcation Language. As argued before, generation
rules should be well suited to the teaching/learning habits of the potential users.
Therefore, they should not be hard-coded in the system, but deﬁned with a easy-
to-use language permitting local customizations of the system. Because a generic
language like OWL would be too complex to suit for this, we choose to deﬁne our
own Domain Speciﬁc Language (DSL). Our implementation includes the mathematical 
operators: max, min, union, intersection, sum, product, subtraction,
and division. In the example of ﬁgure 4, since L4 introduces to L1, L2, and
L3, the keyword metadata of L4 may have some similarities with the keyword

Taking Advantage of LOM Semantics for Supporting Lesson Authoring

1165

metadata of L1, L2, and L3. In order to postulate such a statement, the user
should deﬁne the following rule:

<similarity attribute="general/keyword" relation="introducesTo">

UNION(v)

</similarity>
in which v stands for the value set of keyword metadata of all the educational
resources related with introducesTo
In order to specify restrictions on metadata values, our language also provides a
set of comparison operators: =, ! =, <, <=, >, >=, contains, and containedIn.
For instance, since L4 introduces to L1, L2, and L3, the semantic density of L4
should be inferior or equal to the minimum semantic density of L1, L2, and L3.
Such a restriction is generalized with the following rule:

<restriction attribute="general/semanticDensity" relation="introducesTo">

’<=’ MIN(v)

</restriction>

In order to compute this kind of rules, comparable elements should provide an
order value. In the present implementation, RDF vocabulary includes such a
value as shown in the following example:

<lom_edu:InteractivityLevel rdf:ID="MediumInteractivity" order="15"/>
<lom_edu:InteractivityLevel rdf:ID="HighInteractivity" order="20"/>

Nevertheless, since most learning object repositories are not able to process
restrictions based on vocabulary comparison, such properties is then expressed in
terms of sets of values. For instance, a restriction of type’ ≤ mediumDifficulty’
is transformed in ’ ∈ {veryEasy, easy, mediumDifficulty}’.

Generation Rule Diﬀusion. The diﬃculty to properly generate metadata
for educational resources imposes to consider potential incompleteness of LOM
values in the lesson graph. In order to deal with this situation, we suggest to
take advantage of the graph structure and propagate restrictions and similarities 
through the whole graph. In our implementation, this propagation process is
done recursively based on the framework introduced in a previous work [16]. In
this framework, restrictions and similarities are not only based on the metadata
of other educational resources, but also on the set of restrictions and similarities 
generated for these resources. Basically, this model introduces propagation
and composition principles for restrictions and similarities. This feature enables
the recursive processing of the rules and it limits the side-eﬀect of metadata
incompleteness.

4.3 Semantic-Based Query Processing

This component is responsible for deﬁning a query Q combining the contributions 
of the authoring component and the generator component. Afterward, Q
is distributed to a set of learning object repositories.

1166

O. Motelet and N.A. Baloian

Query Formulation. On one hand, the authoring component generates a
BQuery, i.e. a query not considering any semantic restriction. On the other hand,
the generator component provides semantic restrictions formulated as LSQueries.
First, Q is deﬁned as a conjunction: Q = BQuery
LSQueryn.
Later, Q may be relaxed (for example in a disjunction) by the query result processing 
component. In our prototype, the queries are formulated with Xquery.
However, the choice of a query language should ﬁrst depend on the compatibility
with the targeted repositories.

LSQuery1

(cid:1)

(cid:1)

(cid:1)

...

Query Distribution. Query distribution deals basically with the communication 
with the learning object repositories. In our present implementation, distribution 
is limited to a local repository. Nevertheless, distribution should deﬁnitely
be considered in order to reach enough sources for making a retrieval system interesting.
 An interface like Simple Query Interface (SQI)[17] may support this
process. If we expect teaching/learning communities to use speciﬁc local vocabulary 
for sharing the educational resources[3], the terminology used in the query
may diﬀer from the one used in the learning object repository. However, such
usage involves complex vocabulary distribution and interoperability issues[8].

4.4 Query Result Processing

The query result processing component deals with the answers of the consulted
repositories. First, it is responsible for the presentation of the results. Then,
according to the subjective analysis of the user, the ﬁrst query may be relaxed
and/or some didactic material may be reused.

Result Organization. The generator component is responsible for supporting
the ranking of the results returned by the learning object repositories. In our
implementation, ranking information is based on the similarity set produced by
processing the generation rules, in which educational material matching more
similarities has a better rank than other material. Such a service may be also
implemented with collaborative ﬁltering techniques. Moreover, information visualization 
techniques may eﬃciently support the user in browsing the query
results[18].

Query Relaxation. In case that results are too few because of the restrictions 
imposed by the generator, the lesson author could reformulate some part
of the generated query by relaxing restrictions imposed on some attributes.
For example, restrictions imposed on the general, lifeCycle, technical, and
classification categories of LOM may be relaxed to enlarge the search to educational 
resources matching with a certain pedagogical context but not limited
to a speciﬁc discipline or format. The learning objects resulting from this relaxation 
process may oﬀer interesting hints for deﬁning methods supporting the
particular educational goal of the authored lesson. Further work should be done
on LOM semantics in order to oﬀer a set of pedagogically-sounded relaxation
strategies.

Taking Advantage of LOM Semantics for Supporting Lesson Authoring

1167

Learning Object Reuse. Once the syllabus designer has selected one or more
learning objects to be reused, a recontextualisation phase is required. This process 
deals with the adaptation of the retrieved material to a speciﬁc use context.
Format, language, style and copyrights issues have to be managed, but these
topics remain far out of the scope of this article.

5 Conclusion

This article presents an original approach for enabling LOM-semantic based
retrieval of learning objects during the lesson authoring process. Our proposal
diﬀers from existing semantic-based retrieval systems because it is based on the
analysis of the semantics of the graph structuring the whole lesson in which the
retrieved learning material is intended to be included. For that reason, it can
be used along with other approaches based on user proﬁle, pattern analysis, or
material similarity. For the same reason, our system focuses on a speciﬁc context:
lesson-syllabus structuring based on graph.

Lesson graphs are not speciﬁc to this work but explored by several researches
in the community. Their main advantages are ﬂexibility during course presentation 
and semantic-based sequencing of the lesson. We attempt to aggregate
another advantage to lesson graphs: the semantic-based retrieval of learning
objects. Our approach enables automatic generation of LOM-semantic-based
queries, whereas the user continues to formulate easy-to-write queries without
semantic restrictions. Such system is based on generation rules exploiting the
inﬂuences of graph semantics on LOM semantics. The same approach is also
used to rank the query results according to the context of the authored lesson.
The model can be adapted to speciﬁc didactic behaviors since rules are deﬁned
with a simple domain-speciﬁc language. Moreover, a recursive diﬀusion framework 
limits the impact of a potential incompleteness of the learning material
metadata.

This learning object retrieval system is part of a four-component framework
capable of integrating other methods for generating queries and ranking data.
This framework includes learning object retrieval as a legitimate component of
the lesson authoring process. Query and result processing are considered with
the perspective of semantic-based retrieval of educational resources. Complex issues 
like vocabulary distribution and learning object re-contextualization remain
open. Nevertheless, interesting perspectives are also emerging like the possibility
to deﬁne pedagogically-sound retrieval strategies.

References

1. Duval, E., Hodgins: Metadata matters. In: International Conference on metadata

and Dublin Core speciﬁcations DC 2004, Shangai. (2004)

2. Simon, B., Dolog, P., Mikl´os, Z., Olmedilla, D., Sintek, M.: Conceptualising smart
spaces for learning. Journal of Interactive Media in EducationSpecial 
Issue on
the Educational Semantic Web. 5 (2004)

1168

O. Motelet and N.A. Baloian

3. Downes, S.: Ressource proﬁles. Journal of Interactive Media in Education, Special

Issue on the Educational Semantic Web. 5 (2004)

4. Brasher, A., Andrew, P.M.: Human-generated learning object metadata. R. Meersman 
et al. (Eds.) OTM Workshops 2004 LNCS (2004) 723–730

5. Rafaeli, S., Dan-Gur, Y., Barak, M.: Social recommender systems: Recommendations 
in support of e-learning. J. of Dist. Educ. Tech. 3 (2005) 29–45

6. Baloian, N.A., Galdames, P., Collazos, C., Guerrero, L.: A model for a collaborative
recommender system for multimedia learning material. In LNCS, ed.: Groupware
Design, Implementation and Use: CRIGW. Volume 3198. (2004) 281–288

7. Friesen, N.:

International

lom survey report.

Technical report, ISO/IEC

JTC1/SC36 sub-committee (2004)

8. Stuckenschmidt, H.: Query processing on the semantic web. Kunstliche Intelligenz:

Special Issue on the Semantic Web 3/03 (2003) 22–26

9. Pinkwart, N., Jansen, M., Oelinger, M., Korchounova, L., Hoppe, U.: Partial generation 
of contextualized metadata in a collaborative modeling environment. In:
2nd International Workshop on Applications of Semantic Web Technologies for
E-Learning AH 2004, Eindhoven, Netherlands. (2004)

10. McCalla, G.: The search for adaptability, ﬂexibility, and individualization: Approaches 
to curriculum in intelligent tutoring systems. In: Foundations and Frontiers 
of Adaptive Learning Environments. Springer (1992) 91–122

11. Fischer, S.: Course and exercise sequencing using metadata in adaptive hypermedia

learning systems. J. Educ. Resour. Comput. 1 (2001) 5

12. Baloian, N.A., Hoppe, H.U., Pino, J.A.: A teaching/learning approach to cscl. In:

33rd Hawaii International Conference on System Sciences HICSS. (2000)

13. Baloian, N.A., Pino, J.A., Motelet, O.: Collaborative authoring, use, and reuse of
learning material in a computer-integrated classroom. In: CRIWG. (2003) 199–207
14. Farrell, R., Liburd, S.D., Thomas, J.C.: Dynamic assembly of learning objects. In:

World-Wide Web International Conference WWW 2004, New York. (2004)

15. Motelet, O., Baloian, N.A.: Introducing learning management systems standards in
classroom. In Kinshuk, Looi, C.K., Sutinen, E., Sampson, D.G., Aedo, I., Uden, L.,
K¨ahk¨onen, E., eds.: International Conference on Advanced Learning Technologies
ICALT 2004, Sueden, IEEE Computer Society (2004)

16. Motelet, O.: Relation-based heuristic diﬀusion framework for lom generation. In:

Artiﬁcial Inteligence in Education AIED 2005 - Young Researcher Track. (2005)

17. Simon, B., Massart, D., Duval, E.: Simple query interface speciﬁcation.

In:

CEN/ISSS Workshop on Learning Technologies. (2004)

18. Klerkx, J., Duval, E., Meire, M.: Using information visualization for accessing
learning object repositories. In: 8th International Conference on Information Visualization.
 (2004)

