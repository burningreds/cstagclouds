Bipartite Graphs as Intermediate Model for

RDF(cid:1)

Jonathan Hayes1,2 and Claudio Gutierrez1

1 Center for Web Research, Dept. of Computer Science, Universidad de Chile

2 Dept. of Computer Science, Technische Universit¬®at Darmstadt, Germany

cgutierr@dcc.uchile.cl

jonathan.hayes@gmx.de

Abstract. RDF Graphs are sets of assertions in the form of subject-
predicate-object triples of information resources. Although for simple
examples they can be understood intuitively as directed labeled graphs,
this representation does not scale well for more complex cases, particularly 
regarding the central notion of connectivity of resources.
We argue in this paper that there is need for an intermediate representation 
of RDF to enable the application of well-established methods
from graph theory. We introduce the concept of RDF Bipartite Graph
and show its advantages as intermediate model between the abstract
triple syntax and data structures used by applications. In the light of
this model we explore the issues of transformation costs, data/schemastructure,
 and the notion of RDF connectivity.

Keywords: RDF Model, RDF Graph, RDF Databases, Bipartite Graph.

1 Introduction

The World Wide Web was originally built for human consumption, and although
everything on it is machine-readable, the data is not machine-understandable [1].
The Resource Description Framework, RDF [2], is a language to express metadata 
about information resources on the Web proposed by the WWW Consortium 
(W3C). It is intended that this information is suitable for processing by
applications and thus is the foundation of the Semantic Web [3]. RDF statements
are triples consisting of a subject (the resource being described), a predicate (the
property), and an object (the property value). A set of RDF triples is called an
RDF Graph, a term formally introduced by the RDF speciÔ¨Åcation [4] and motivated 
by the underlying graph data model.

The graph-like nature of RDF is indeed intuitively appealing, but a naive
formalization of this notion presents problems. Currently, the RDF speciÔ¨Åcation
does not distinguish clearly among the term ‚ÄúRDF Graph‚Äù, the mathematical
(cid:1) The Ô¨Årst author was supported by Millennium Nucleus, Center for Web Research 
(P01-029-F), Mideplan. The second author was supported by FONDECYT
No 1030810.

S.A. McIlraith et al. (Eds.): ISWC 2004, LNCS 3298, pp. 47‚Äì61, 2004.
c(cid:1) Springer-Verlag Berlin Heidelberg 2004

48

J. Hayes and C. Gutierrez





Property





type

type

type

domain /

/











last name
range



creates





Artist
type





domain

&LLLLLLLLLL

subProperty

/





Artifact
type

domain





has style
range









range

xqqqqqqqqqq





Class





type

subClassOf

type

type





Literal









Painter





domain





paints





range

subClassOf

type
/
Painting







type





Style





type

type

type





type

‚ÄúRivera‚Äù



last name







rivera





type





‚ÄúPicasso‚Äù



last name





picasso







paints

paints

/



zapata









type
has style/
/



type

Cubism







guernica



Fig. 1. The museum example. A non-standard graph where edge labels and nodes can
represent the same object. For example, paints occurs as a node as well as arbitrarily
often in the role of edge labels.

concept of graph, and the graph-like visualization of RDF data. An RDF Graph
is a set of triples and therefore, by itself, not a graph in the classic sense. RDF
Concepts and Abstract Syntax [4] presents ‚Äúnode and directed-arc diagrams‚Äù (or,
as referred to in [1], directed labeled graphs) as a visualization scheme for RDF
b‚àí‚Üí c. However, the document leaves
by representing a triple <a b c> by a
open how to deal with a statement property (an edge label) which occurs as the
subject or object of another statement: one could either duplicate resources as
nodes and as edge labels (as shown in Ô¨Ågure 1), or allow edges to connect not
only to nodes, but also to other edges.

Both approaches are inconvenient from several points of view: allowing multiple 
occurrences of resources as labels jeopardizes one of the most important
aspects of graph visualization, which is the implicit assumption that the complete
information regarding a node in a graph is obtained by its place in the drawing
and its incident edges. On the other hand, the essential drawback of the second
approach is the fact that the resulting construct is not a graph in the standard
sense to which we could apply well-established techniques from graph theory.
However, this is a principal reason for representing RDF by graphs: when reasoning 
formally over RDF data, e.g., as described in RDF Semantics [5], one has
to operate with sets of triples. Although well-deÔ¨Åned formally, a set of triples

0
0


&
O
O
o
o
/
x


o
o
n
n
/
/
8
8
O
O
[
[
>
>
o
o
/
f
f
O
O
o
o
O
O
o
o
/
/
O
O
O
O
B
B
o
o
B
B
/
\
\
\
\
