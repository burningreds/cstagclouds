Normal Forms and Reduction for Theories of

Binary Relations

Dan Dougherty and Claudio Guti(cid:19)errez

Computer Science Group, Wesleyan University

Middletown CT 06459 USA

fddougherty,cgutierrezg@wesleyan.edu

Abstract. We consider equational theories of binary relations, in a language 
expressing composition, converse, and lattice operations. We treat
the equations valid in the standard model of sets and also de(cid:12)ne a hierarchy 
of equational axiomatisations stratifying the standard theory. By
working directly with a presentation of relation-expressions as graphs we
are able to de(cid:12)ne a notion of reduction which is conﬂuent and strongly
normalising, in sharp contrast to traditional treatments based on (cid:12)rstorder 
terms. As consequences we obtain unique normal forms, decidability 
of the decision problem for equality for each theory. In particular we
show a non-deterministic polynomial-time upper bound for the complexity 
of the decision problems.

1 Introduction

The theory of binary relations is a fundamental conceptual and methodological
tool in computer science. The formal study of relations was central to early
investigations of logic and the foundations of mathematics [11, 20, 24, 25, 26]
and has more recently found application in program speci(cid:12)cation and derivation,
[2, 6, 4, 18] denotational and axiomatic semantics of programs, [8, 10, 22, 19]
and hardware design and veri(cid:12)cation [7, 16].

The collection of binary relations on a set has rich algebraic structure: it
forms a monoid under composition, each relation has a converse, and it forms a
Boolean algebra under the usual set-theoretic operations. In fact the equational
theory in this language is undecidable, since it is possible to encode set theory
[26]. Here we eliminate complementation as an operation, and investigate the set
ER of equations between relation-expressions valid when interpreted over sets,
as well as certain equational axiomatic theories naturally derived from ER.

Now, the most popular framework for foundations and for implementations
of theorem provers, proof-checkers, and programming languages remains the (cid:21)-
calculus. It seems reasonable to say that this is due at least in part to the fact
that the equational theory of (cid:21)-terms admits a computational treatment which
is well-behaved: ‘b-reduction is conﬂuent, and terminating in typed calculi, so
that the notion of normal form is central to the theory.

To our knowledge, no analogous notion of normal form for terms in ER is
known. In fact the calculus of relations has a reputation for being complex.

L. Bachmair (Ed.): RTA 2000, LNCS 1833, pp. 95{109, 2000.
c(cid:13) Springer-Verlag Berlin Heidelberg 2000

96

Dan Dougherty and Claudio Guti(cid:19)errez

Bertrand Russell (quoted in [21]) viewed the classical results of Peirce and
Schr¨oder on relational calculus as being \di(cid:14)cult and complicated to so great
a degree as to doubt their utility." And in their recent monograph [4, page 81]
Bird and de Moor observe that \the calculus of relations has gained a good deal
of notoriety for the apparently enormous number of operators and laws one has
to memorise in order to do proofs e(cid:11)ectively."

But in this paper we suggest that a rather attractive syntactic/computational
treatment of the theory of relations is indeed available, at least for the fragment
of the theory not including complementation.

The essential novelty derives from the idea of taking certain graphs as the
representation of relations. These graphs, called here \diagrams," arise very naturally 
and have been used since Peirce by researchers in the relation community
(e.g. Tarski, Lyndon, J(cid:19)onsson, Maddux, etc.); recent formalisations appear in
[12, 1, 7]. What we do here is to take graphs seriously as a notation alternative
to (cid:12)rst-order terms, i.e., to treat diagrams as (cid:12)rst-class syntactic entities, and
speci(cid:12)cally as candidates for rewriting.

One can see diagram rewriting as an instance of a standard technique in
automated deduction. It is well-known that certain equations inhibit classical
term-rewriting techniques | the typical examples are associativity and commutativity 
| and that a useful response can be to pass to computing modulo these
equations. In Table 1 we exhibit a set ED of equations such that diagrams are
the natural data structure for representing terms modulo ED.

Summary of Results

It is not hard to see that in the absence of complementation equality between
relation-expressions can be reduced to equality between expressions not involving
union, essentially because union distributes over the other operations. So we
ultimately restrict attention to the complementand 
union-free fragment of the
full signature (see De(cid:12)nition 1). It is known [1, 12] that the set of equations true
in set-relation algebras in this signature is decidable.

We clarify the relationship between terms and diagrams by showing that the
algebra of diagrams is precisely the free algebra for the set ED of equations
between terms. It is rather surprising that a (cid:12)nite set of equations accounts
for precisely the identi(cid:12)cations between terms induced by compiling them into
diagrams.

Freyd and Scedrov [12] isolated the theory of allegories, a (cid:12)nitely axiomatisable 
subtheory of the theory of relations which corresponds to a certain
geometrically-motivated restricted class of morphisms between diagrams. We re-
(cid:12)ne this by constructing a proper hierarchy of equational theories, beginning with
the theory of allegories, which strati(cid:12)es the equational theory of set-relations.

Our main result is a computational treatment of diagrams via a notion of
reduction. Actually each of the equational theories in the hierarchy induces its
own reduction relation; but we prove uniformly that each reduction satis(cid:12)es
strong normalisation and Church-Rosser properties. Therefore each theory enjoys

