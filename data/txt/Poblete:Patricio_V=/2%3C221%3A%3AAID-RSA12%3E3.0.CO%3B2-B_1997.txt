}

<

}

<

(cid:84)(cid:104)(cid:101) (cid:68)(cid:105)(cid:97)(cid:103)(cid:111)(cid:110)(cid:97)(cid:108) (cid:80)(cid:111)(cid:105)(cid:115)(cid:115)(cid:111)(cid:110) (cid:84)(cid:114)(cid:97)(cid:110)(cid:115)(cid:102)(cid:111)(cid:114)(cid:109) (cid:97)(cid:110)(cid:100)
(cid:73)(cid:116)(cid:115) (cid:65)(cid:112)(cid:112)(cid:108)(cid:105)(cid:99)(cid:97)(cid:116)(cid:105)(cid:111)(cid:110) (cid:116)(cid:111) (cid:116)(cid:104)(cid:101) (cid:65)(cid:110)(cid:97)(cid:108)(cid:121)(cid:115)(cid:105)(cid:115) (cid:111)(cid:102) (cid:97)
(cid:72)(cid:97)(cid:115)(cid:104)(cid:105)(cid:110)(cid:103) (cid:83)(cid:99)(cid:104)(cid:101)(cid:109)(cid:101)

(cid:80)(cid:97)(cid:116)(cid:114)(cid:105)(cid:99)(cid:105)(cid:111) (cid:86)(cid:46) (cid:80)(cid:111)(cid:98)(cid:108)(cid:101)(cid:116)(cid:101)(cid:44)(cid:49) (cid:65)(cid:108)(cid:102)(cid:114)(cid:101)(cid:100)(cid:111) (cid:86)(cid:105)(cid:111)(cid:108)(cid:97)(cid:44)(cid:50) (cid:74)(cid:46) (cid:73)(cid:97)(cid:110) (cid:77)(cid:117)(cid:110)(cid:114)(cid:111) (cid:51)
(cid:49)(cid:68)(cid:101)(cid:112)(cid:97)(cid:114)(cid:116)(cid:109)(cid:101)(cid:110)(cid:116) (cid:111)(cid:102) (cid:67)(cid:111)(cid:109)(cid:112)(cid:117)(cid:116)(cid:101)(cid:114) (cid:83)(cid:99)(cid:105)(cid:101)(cid:110)(cid:99)(cid:101)(cid:44) (cid:85)(cid:110)(cid:105)(cid:118)(cid:101)(cid:114)(cid:115)(cid:105)(cid:116)(cid:121) (cid:111)(cid:102) (cid:67)(cid:104)(cid:105)(cid:108)(cid:101)(cid:44) (cid:67)(cid:97)(cid:115)(cid:105)(cid:108)(cid:108)(cid:97) (cid:50)(cid:55)(cid:55)(cid:55)(cid:44) (cid:83)(cid:97)(cid:110)(cid:116)(cid:105)(cid:97)(cid:103)(cid:111)(cid:44)

(cid:67)(cid:104)(cid:105)(cid:108)(cid:101)

(cid:50)(cid:73)(cid:110)(cid:115)(cid:116)(cid:105)(cid:116)(cid:117)(cid:116)(cid:111) (cid:100)(cid:101) (cid:67)(cid:111)(cid:109)(cid:112)(cid:117)(cid:116)(cid:97)(cid:99)(cid:105)(cid:111)(cid:110)(cid:44) (cid:85)(cid:110)(cid:105)(cid:118)(cid:101)(cid:114)(cid:115)(cid:105)(cid:100)(cid:97)(cid:100) (cid:100)(cid:101) (cid:108)(cid:97) (cid:82)(cid:101)(cid:112)(cid:117)(cid:98)(cid:108)(cid:105)(cid:99)(cid:97)(cid:44) (cid:74)(cid:117)(cid:108)(cid:105)(cid:111) (cid:72)(cid:101)(cid:114)(cid:114)(cid:101)(cid:114)(cid:97) (cid:121) (cid:82)(cid:101)(cid:105)(cid:115)(cid:115)(cid:105)(cid:103)

(cid:53)(cid:54)(cid:53)(cid:44) (cid:80)(cid:105)(cid:115)(cid:111) (cid:53)(cid:44) (cid:77)(cid:111)(cid:110)(cid:116)(cid:101)(cid:118)(cid:105)(cid:100)(cid:101)(cid:111)(cid:44) (cid:85)(cid:114)(cid:117)(cid:103)(cid:117)(cid:97)(cid:121)

(cid:51)(cid:68)(cid:101)(cid:112)(cid:97)(cid:114)(cid:116)(cid:109)(cid:101)(cid:110)(cid:116) (cid:111)(cid:102) (cid:67)(cid:111)(cid:109)(cid:112)(cid:117)(cid:116)(cid:101)(cid:114) (cid:83)(cid:99)(cid:105)(cid:101)(cid:110)(cid:99)(cid:101)(cid:44) (cid:85)(cid:110)(cid:105)(cid:118)(cid:101)(cid:114)(cid:115)(cid:105)(cid:116)(cid:121) (cid:111)(cid:102) (cid:87)(cid:97)(cid:116)(cid:101)(cid:114)(cid:108)(cid:111)(cid:111)(cid:44) (cid:87)(cid:97)(cid:116)(cid:101)(cid:114)(cid:108)(cid:111)(cid:111)(cid:44) (cid:79)(cid:78) (cid:78)(cid:50)(cid:76)

(cid:51)(cid:71)(cid:49)(cid:44) (cid:67)(cid:97)(cid:110)(cid:97)(cid:100)(cid:97)

Recei¤ed 27 December 1996; re¤ised 15 August 1996

(cid:65)(cid:66)(cid:83)(cid:84)(cid:82)(cid:65)(cid:67)(cid:84)(cid:58) We present an analysis of the effect of the last-come-ﬁrst-served heuristic on a
linear probing hash table. We study the behavior of successful searches, assuming searches
for all elements of the table are equally likely. It is known that the Robin Hood heuristic
achieves minimum variance over all linear probing algorithms. We show that the last-come-
ﬁrst-served heuristic achieves this minimum up to lower-order terms. An accurate analysis of
this algorithm is made by introducing a new transform which we call the Diagonal Poisson
Transform as it resembles the Poisson Transform. We present important properties of this
transform, as well as its application to solve some classes of recurrences, ﬁnd inverse

This work was done while the ﬁrst two authors were at the University of Waterloo.
Correspondence to: A. Viola
Contract grant sponsor: Natural Sciences and Engineering Research Council of Canada; contract grant
number: A8237
Contract grant sponsor: Information Technology Research Centre of Canada
Contract grant sponsor: FONDECYT Chile ; contract grant numbers: 1940271, 1960881
Q 1997 John Wiley & Sons, Inc. CCC 1042-9832r97r100221-35

(cid:14)

.

(cid:50)(cid:50)(cid:49)

(cid:50)(cid:50)(cid:50)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

relations, ﬁnd asymptotics, and obtain several generalizations of Abel’s summation formula.
We feel the introduction of this transform is the main contribution of the paper. Q 1997 John
.
Wiley & Sons, Inc. Random Struct. Alg., 10, 221]255 1997

(cid:14)

(cid:49)(cid:46) (cid:77)(cid:79)(cid:84)(cid:73)(cid:86)(cid:65)(cid:84)(cid:73)(cid:79)(cid:78)

.

(cid:14)

The simplest collision resolution scheme for open addressing hash tables is linear
the cyclic probe sequence h K , h K q 1, . . . , m y
probing, which uses
1, 0, 1, . . . , h K y1, assuming the table slots are numbered from 0 to my1.
Linear probing works reasonably well for tables that are not too full, but as the
load factor increases, its performance deteriorates rapidly.

m, n

If A

denotes the number of probes in a successful search in a hash table of
size m with n elements assuming all elements in the table are equally likely to be
searched , and if we assume that the hash function h takes all the values in
x
0 . . . my1 with equal probabilities, then we know from 37, 24

(cid:14)

.

(cid:14)

.

(cid:14)

.

w

x

w
E A s 1qQ m, ny1 ,
.
x

m , n

(cid:14)

(cid:14)

.

1
2

0

Var A s Q m, ny1 y Q m, ny1 y .

2

w

.

.

(cid:14)

0

1
3

(cid:14)

2

m , n

1
12

1
4

(cid:14) .
1
(cid:14) .
2

where

n

Q m, n s

(cid:14)

r

. (cid:7)
ks0

(cid:15)

kqr

/k

kn
n
m

,

and n is the kth falling factorial power of n, deﬁned as

k

kn sn ny1 . . . nykq1 ,
.

(cid:14)

.

(cid:14)

real n,

integer kG0.

For a table with ns am elements, and ﬁxed a-1 and n, m“ ‘, these

quantities depend essentially only on a

(cid:14)

y

/

1

1y a
1

4 1y a
(cid:14)
.

2

1

2 1y a m
(cid:14)

.

3

qO

(cid:15)

1
m

2

/

,

y y

1
12

1q3a
.

2 1y a m
(cid:14)

5

qO

(cid:15)

1
m

2

/

.

w
E A

x

m , am

s 1q

.

(cid:15)

1
2

w

Var A

m , am

x

s

1

3 1y a
(cid:14)
.

3

y

For a full table, these approximations are useless, but the properties of the Q
functions can be used to obtain the following expressions:

m , m

w
E A
’
2pm
12

3

w

Var A

m , m

x

s

x

s

’2pm

4

q q

1
3

(cid:15)

q y mq

1 p
9
8

/

(

1
48
’
144

13 2pm

2p
m

qO

(cid:15)

/

,

1
m

y

47
405

y qO

p
48

(cid:15)

/’

1
m

.

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

(cid:50)(cid:50)(cid:51)

w

x

w

It is clear from these expressions that not only is the expected search time high, but
also the variances are quite large, and therefore the expected value is not a very
reliable predictor for the actual running time of a successful search.
x
Operating primarily in the context of double hashing, several authors 3, 2, 25
observed that a collision could be resolved in favor of any of the keys involved, and
used this additional degree of freedom to decrease the expected search time in the
table. We obtain the standard schemes by letting the incoming key probe its next
location. Celis et al. 7, 8 were the ﬁrst to observe that collisions could be resolved
having ¤ariance reduction as a goal. They deﬁned the Robin Hood heuristic, in
which each collision occurring on each insertion is resolved in favor of the key that
is farthest away from its home location. Later, Poblete and Munro 48 deﬁned the
last-come-ﬁrst-ser¤ed LCFS heuristic, where collisions are resolved in favor of the
incoming key, and others are moved ahead one position in their probe sequences.
In both cases, the reduction of the variance can be used to speed up searches by
replacing the standard search algorithm by a ‘‘mean-centered’’ one that ﬁrst
searches in the vicinity of where we would expect the element to have ‘‘drifted’’ to,
rather than its initial probe location.

It was shown in 5 that the Robin Hood linear probing algorithm minimizes the
.
variance for all linear probing algorithms. This variance, for a full table, is Q m ,
of the standard algorithm. They derived the following
instead of the Q m
expressions for the variance of the successful search time:

3r2.

w x

(cid:14)

(cid:14)

.

(cid:14)

w

x

Var A s Q m, ny1 y Q m, ny1 y Q m, ny1

2

.

.

.

(cid:14)

0

(cid:14)

0

w

x

m , n

1
6

w

Var A

m , am

x

s

y

2

1

6 1y a
(cid:14)
.

y q y y

1
12

a
6

1
6m 3 1y a m

1q2 a
.

(cid:14)

4

1
4

1
y ,
12

1
2

q

1

(cid:14)
1 ny1
6 m
1

4 1y a
(cid:14)
.
1

qO

(cid:15)

/m

2

,

w

Var A

m , m

x

s

4y p

8

mq y q

1 p
9
48

1
135

(

2p
m

qO

(cid:15)

1
m

2

/

.

3(cid:14) .

(cid:14)

.

In this paper we study the effect of the LCFS heuristic on the linear probing
hashing scheme. Surprisingly, the variance of this scheme is much less than that of
the standard ﬁrst come ﬁrst served approach and within lower order terms of the
minimal Robin Hood method.

The rest of the paper is organized as follows. Section 2 shows the basic notation
and the mathematical machinery that we are going to use. Section 3 presents the
Poisson Transform followed in Section 4 by the introduction of the Diagonal
Poisson Transform and its application to obtain several generalizations of Abel’s
summation formula, to ﬁnd inverse relations, to solve recurrences and to ﬁnd
asymptotics. Then Section 5 analyzes the effect of the LCFS heuristic on a linear
probing hash table. Finally, Section 6 gives the conclusions and future work.
x
Some of the results presented in this work appeared in preliminary form in 49 .

w

(cid:50)(cid:50)(cid:52)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

(cid:50)(cid:46) (cid:77)(cid:65)(cid:84)(cid:72)(cid:69)(cid:77)(cid:65)(cid:84)(cid:73)(cid:67)(cid:65)(cid:76) (cid:66)(cid:65)(cid:67)(cid:75)(cid:71)(cid:82)(cid:79)(cid:85)(cid:78)(cid:68)

(cid:50)(cid:46)(cid:49)(cid:46) (cid:77)(cid:97)(cid:116)(cid:104)(cid:101)(cid:109)(cid:97)(cid:116)(cid:105)(cid:99)(cid:97)(cid:108) (cid:78)(cid:111)(cid:116)(cid:97)(cid:116)(cid:105)(cid:111)(cid:110)
Given a function F x , . . . , x , z we use the following operators:
.
unit ,

U F x , . . . , x , z sF x , . . . , x , 1

1
(cid:14)

.

(cid:14)

.

(cid:14)

(cid:14)

.

n

z

1

n

n

1

and

kD F x , . . . , x , z s

.

(cid:14)

n

1

z

›kF x , . . . , x , z

n

(cid:14)

1
k›z

.

(cid:14)

.
differentiation .

If X is an integer valued random variable, we denote p sPr Xsk , ks1 . . . n.
The generating function for the probability distribution p is deﬁned by

k

w

x

k

P z s p z k.
(cid:14)

. (cid:7) k

kG0

We use the following well-known properties of the probability generating func-
tions:

x

w
E X sU D P z ,
.
x

(cid:14)
w

z

z
.

x

x
Var X sU D P z qE X yE X ,
w

w
x

w

2
z

(cid:14)

2

z

(cid:14) .
4
(cid:14) .
5

w

x

where E X and Var X are the expected value and the variance of X, respectively.


(cid:50)(cid:46)(cid:50)(cid:46) (cid:84)(cid:104)(cid:101) (cid:81) (cid:70)(cid:117)(cid:110)(cid:99)(cid:116)(cid:105)(cid:111)(cid:110)(cid:115)
The Q functions are a family of sums of the form

Q m, n s

(cid:14)

.

r

(cid:14)

i, r

.

(cid:7)
iG0

in
im

.

(cid:14)
We use the notation i, j
Comtet 11 , deﬁned as

w

x

.

for the ‘‘symmetric binomial coefﬁcients’’ introduced by

i, j s

.

(cid:14)

(cid:15)

iqj
j

/

s

(cid:15)

iqj
i

/

.

w

x

In 38 a more general class of Q functions is presented, several properties are
proved, and a Q-algebra is deﬁned. These generalized Q functions play a central
ˆ
role in the analysis of hashing with linear probing 37 , representation of equivaw

lence relations 42 , interleaved memory 41 , labeled trees counting 44 , optimal
x
caching 38 , and random mappings 36, 4 .

w

x

x

w

x

w

w

x

w

x

w x
Some useful properties of the Q functions are 5

Q m, n sQ

(cid:14)

.

r

(cid:14)

ry1

m, n q Q m, ny1 .
.

.

(cid:14)

n
rm

(cid:14) .
6

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)
w
This comes from the fact that

(cid:14)

(cid:14)

. x
i, r s iy1, r q i, ry1 .
.
Q m, n s1,
y1

(cid:14)

.

.

(cid:14)

Q m, n s Q

(cid:14)

.

(cid:14)

r

m
r

m, nq1 yQ

.

(cid:14)

(cid:14)

.
m, n .

.

ry1

ry1

This is a consequence of D n sin
(cid:14)

i

iy1

.
.

(cid:50)(cid:50)(cid:53)

(cid:14) .
7

(cid:14) .
8

Q m, my1 s Q

(cid:14)

.

r

m
r

(cid:14)

.
m, m .

ry2

w
This is a consequence of 6 and 8 . In particular by 7 it implies Q m, my1 s
xm.

(cid:14) .

(cid:14) .

(cid:14) .

(cid:14)
1

.

Q m, my1 s

.

(cid:14)

0

’
2p
2

’
m y q

1
3

m y
y1r2

4

135m

qO m

(cid:14)

y3r2

.

.

(cid:14) .
9

’
2p
24
w

x .
(cid:14)
A proof of this expansion can be found in 35 .
For ﬁxed a, 0F a-1, we have the expansion
. (cid:14)

(cid:14)

Q m, am s

.

(cid:14)

r

y

rq1

rq1
rq2 a
2 1y a
(cid:14)
.

.
rq3

m qO m
y1

(cid:14)

y2

.

.

An asymptotic series for Q m, my1 was ﬁrst derived by Ramanujan 50, 51 . The
function Q m, my1 is also known as the Ramanujan’s Q function. A detailed
x
analysis of it is found in 17 .

.

.

(cid:14)

w

0

0

w

x

(cid:14)

1
1y a
.
(cid:14)

(cid:50)(cid:46)(cid:51)(cid:46) (cid:83)(cid:116)(cid:105)(cid:114)(cid:108)(cid:105)(cid:110)(cid:103) (cid:78)(cid:117)(cid:109)(cid:98)(cid:101)(cid:114)(cid:115) (cid:111)(cid:102) (cid:116)(cid:104)(cid:101) (cid:83)(cid:101)(cid:99)(cid:111)(cid:110)(cid:100) (cid:75)(cid:105)(cid:110)(cid:100)
The Stirling numbers of the second kind count all the possible ways of partitioning
a set of n elements into k nonempty subsets without distinguishing between the
subsets. Following the notation of 28 , we denote these numbers by
. Several
important properties of these numbers are presented in 28, 38 . We also need
some new properties whose proofs are fairly straightforward and can be found in
w
x55 .

(cid:21) 5k

w

x

w

x

n

Lemma 1. u ’

p

(cid:7) (cid:21)

nG0

nq 1 q p

nq 1

5

n

x

satisﬁes

u s0

1
1yx

u s

p

1
1yx

Lemma 2.

D xu

x

(cid:14)

.

,

py1

p)0.

y(cid:14) kq1. x
e

(cid:7)
kG0

kqp

(cid:14)

.

kq1
k!

x s

k

(cid:7) (cid:21)

nG0

nqpq1

nq1

5

n
x ,

pG0.

(cid:50)(cid:50)(cid:54)

Lemma 3.

Lemma 4.

Lemma 5.

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

y(cid:14) kqc. x
e

(cid:7)
kG0

ky1

(cid:14)

kqc
.
k!

k

1
x s ,
c

c /0.

yk x
e

(cid:7)
kG0

k kqp
k!

x s

k

(cid:7) (cid:21)

nG0

nqp

n

5

n
x ,

pG0.

yk x
e

(cid:7)
kG1

k ky1
k!

x sx.

k

w

x

w

(cid:50)(cid:46)(cid:52)(cid:46) (cid:83)(cid:105)(cid:110)(cid:103)(cid:117)(cid:108)(cid:97)(cid:114)(cid:105)(cid:116)(cid:121) (cid:65)(cid:110)(cid:97)(cid:108)(cid:121)(cid:115)(cid:105)(cid:115)
There exist fairly synthetic and powerful methods that permit us to extract the
asymptotic form of the coefﬁcients of some complicated generating functions
directly from their singularities. These methods originated in the work of Darboux
in the last century 46 . We will use the singularity analysis approach proposed by
x
Flajolet and Odlyzko 21, 45, 19 .

Their main idea is to show that it is sufﬁcient to determine local asymptotic
expansions near a singularity, since such expansions can be ‘‘transferred’’ to
x
coefﬁcients. A detailed presentation of this method can be found in 21 and 22 .
This technique applies to algebraic-logarithmic functions whose singular expansions 
involve fractional powers and logarithms. One of the important features of
the method is that it requires only local asymptotic properties of the function to be
analyzed. Therefore,
it is very suitable for functions that are only indirectly
accessible through functional equations.
One of their results that we will use is

w

x

w

Theorem 6 21, 20 . Let f z be a function analytic in a domain

[

]

(cid:14) .

5
DDs z : z Fs , Arg zys ) y h ,

(cid:21)

(cid:14)

.

p

1

<

<

2

where s, s )s, and h are three positi¤e real numbers. Assume that, with s u s
u ln

u and af 0, y1, y2, . . . , we ha¤e

b(cid:14) .

(cid:14) .

(cid:20)

4

a

1

(cid:14)
f z ; s

.

(cid:15)

1

1yzrs

/

as z“sgDD.

(cid:14) .
Then, the Taylor coefﬁcients of f z

satisfy

w

xz

n

(cid:14)
f z ;s

.

yn

.
s n(cid:14)
nG a(cid:14)
.

.

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

(cid:50)(cid:50)(cid:55)

(cid:50)(cid:46)(cid:53)(cid:46) (cid:84)(cid:104)(cid:101) (cid:84)(cid:114)(cid:101)(cid:101) (cid:70)(cid:117)(cid:110)(cid:99)(cid:116)(cid:105)(cid:111)(cid:110)
This function is deﬁned implicitly by T z sze
. It appears in problems related
w
with the counting of rooted labeled trees 23, 18, 40, 39, 27, 56 . A standard
application of the Lagrange Inversion Formula 23, 27, 56 shows that we can write
(cid:14) .T z as

(cid:14) .

T (cid:14) z.

w

x

x

T z s
(cid:14)

k ky1
. (cid:7) k!

kG1

k
z .

With the help of the Implicit Function Theorem 13 , and the functional

equation that deﬁnes T z , it is shown in 22, 10 that
Lemma 7. The function T z has a dominant singularity at z s1re, and its singular
expansion at z

(cid:14) .

0

(cid:14) .

w

x

is0

w

x

T z s1y d z q d z y d z q
(cid:14)

(cid:14)

.

(cid:14)

.

(cid:14)

.

.

2

3

1
3

11
72

43
540

d z qO d z
(cid:14)
(cid:14)

.

4

(cid:14)

5

.

.

,

where d z s 2y2 ez .

(cid:14) .

’

x
If we use the Stirling formula and the binomial theorem, we ﬁnd that 10

w

x
n ys
n! z d

w

(cid:14)

.
z ;

’pn
/2
(cid:15)

s

G

nq

sy1
2

sy1
2

2

(cid:15)

1q

3s y6 sq2

2

24n

qO

(cid:15)

1
2
n

/

/

.

(cid:14)

10

.

Equation 10 is valid for all values of s, provided we deﬁne 1rG yk s0, for any
positive natural number k.

(cid:14)

.

(cid:14)

.

(cid:51)(cid:46) (cid:84)(cid:72)(cid:69) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

There are two standard models that are extensively used in the analysis of hashing
algorithms: the exact ﬁlling model and the Poisson ﬁlling model. Under the exact
ﬁlling model, we have a ﬁxed number of keys, n, that are distributed among m
locations, and all mn possible arrangements are equally likely to occur.

Under the Poisson model, we assume that each location receives a number of
keys that is Poisson distributed with parameter x, and is independent of the number
of keys going elsewhere. This implies that the total number of keys, N, is itself a
Poisson distributed random variable with parameter mx:

w

Pr Nsn s

x

ym x
e

mx

(cid:14)
n!

n

.

,

ns0, 1, . . .

This model was ﬁrst considered in hashing analysis by Fagin et al. 14 in 1979.

It is generally agreed that the Poisson model is simpler to analyze than the exact
in the Poisson model, the

ﬁlling model. The main difference is the fact that,

w

x

(cid:50)(cid:50)(cid:56)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

w

number of keys in each location is independent of the number of keys in other
x
places. This is not the case in the exact ﬁlling model. Gonnet and Munro 26
observed that these models are deeply related. They showed that the results from
one model can be transformed into the other, and that this transformation can be
inverted. They used the Poisson Transform to study the linear probing sort
algorithm. Later in Section 4 we introduce a new transform that we call the
Diagonal Poisson Transform. This transform is used in Section 5 to analyze the
variance of successful searches in the LCFS linear probing hashing algorithm.

Consider a hash table of size m with n elements, in which conﬂicts are resolved
(cid:14)
by open addressing using some heuristic. Let P be a property e.g., cost of a
successful search of a random element of the table, and f
be the result of
applying a linear operator f e.g., an expected value to the probability generating
.
function of P that was found using the exact ﬁlling model. Then f
x , the result
of computing the same linear operator f to the probability generating function of
P computed using a model with m random independent Poison distributed objects
each with parameter x, is

˜ (cid:14)
m

m, n

(cid:14)

.

.

x

x

˜
f
m

(cid:14)

x s Pr Nsn f se
.

m , n

ym x

w

(cid:7)
nG0

(cid:14)

nmx
.
n!

(cid:7)
nG0

f

m , n

.

(cid:14)

11

.

w
We may use 11 to deﬁne PP f
m m, n
generating function 16, 30 of f

x.

(cid:14)

.

w

m, n

; x , the Poisson transform also called Poisson
, as

(cid:14)

w
PP f
m m , n

x

; x sf
˜
m

(cid:14)

x se
.

ym x

(cid:14)

nmx
.
n!

(cid:7)
nG0

f

m , n

.

(cid:14)

12

.

w
If PP f
m m, n
original sequence f

x

m, n

; x has a MacLaurin expansion in powers of x, then we can retrieve the

x
by the following inversion theorem 26 .

w

Theorem 8.

w
If PP f
m m, n

x

; x s(cid:7)

k G 0 m, k

a

x , then f s(cid:7)

k

m, n

k G 0 m, k

a

.

or its power
This theorem is easily proved by multiplying each side of 12 by e
series , and equating the powers of x on both sides. So we can study a hashing
problem under the more convenient model, and then transfer the results to the
other by using the Poisson transform or its inverse. A useful corollary of this
inversion theorem is the following inversion formula.

(cid:14)

.

.

kn
km
m x (cid:14)

Corollary 9.

a s

m , n

n

.

(cid:14)

ym
n!

y1

.

(cid:14)

(cid:7)
kG0

k n

(cid:15)

/k

b mb s a
(cid:7)
kG0

m , n

m , k

m , k

k

n
m

.

k

The results obtained under the Poisson ﬁlling model can also be interpreted as an
approximation of those one would obtain under the exact ﬁlling model, if nsmx.
This approximation can be formalized by means of an asymptotic expansion.
Poblete 47 presented an approximation theorem and gave an explicit form for all
the terms of the expansion.

w

x

(cid:50)(cid:50)(cid:57)

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)
Theorem 10 47 . For xsnrm,

[

]

Here

f sf
˜
m

m , n

(cid:14)

x q
.

(cid:15)

j1

/n

(cid:7)
iG2

(cid:7)
jG1

c

i , j

˜
(cid:14)i.
i
x f
m

(cid:14)

.
x .

c s

i , j

1
(cid:7)
i! kG0

y1

.

(cid:14)

iykqj

(cid:15)

k

/ kyj

j
k

,

˜
(cid:14)i.
f
m

i

x sD f
˜
.
(cid:14)
m
For most situations, this approximation is satisfactory. However, it cannot be

denotes the Stirling numbers of the ﬁrst kind.

.
x , and

k
ky j

(cid:14)

.
used when we have a full, or almost full table x is very close to 1 .

(cid:14)

In 26 a number of transforms are presented including the following
PP af q bg

w
; x q bPP g

w
; x s aPP f

x
; x ,

m m , n

m , n

m , n

m , n

x

x

m

m

a, b constants,

x

w
w

13(cid:14)
14(cid:14)

.
.

15(cid:14)

.

(cid:14)

16

.

(cid:14)

17

.

18(cid:14)

.

19(cid:14)

.

20(cid:14)

.

21(cid:14)

.

22(cid:14)

.

23(cid:14)

.

w

PP 1; x s1,

m

x

kn
km

PP
m

; x sx ,

k

PP Q m, n ; x s

(cid:14)

.

m

r

,

1
1yx

.

(cid:14)

rq1
w
; x sD PP f
H

m m , n

w
; x s PP f

x

0

x m m , n

x

; t dt.

x
; x ,

yf

.

m , n

(cid:14)
PP m f
m
1
m

PP
m

m , nq1
ny1
(cid:7)
ks0

f

m , k

x
We require several new transformations whose proofs are detailed in 55 .

w

Theorem 11. The following properties of the Poisson Transform hold:

w
c x
e PP f

m m , n

x

; x sPP

myc

(cid:15)
(cid:14)

/

nm

myc
w
PP f
m m , n

f

m , n

; x ,

c /m,

x

; x ye

ym x

f

m , 0

.

,

PP
m

f
m , nq1
nq1
1

PP
m

nq1

; x s

1
mx

n

(cid:7)
ks0

f

m , k

; x s

n
PP c f
m

m , n

; x se

(cid:14)cy1.m x

(cid:15)

n

/k

PP
m

f

m , nyk

; x s

x

1
H
x 0
w
PP f
m m , n
(cid:14)
.
kmx
k!

w
PP f
m m , n
x
; cx ,

w
PP f
m m , n

x

; t dt,

c /0,

x
; x ,

(cid:50)(cid:51)(cid:48)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

(cid:15)

n

/k

f

m , nyk

w
; x se PP f

m x

m m , n

x
; x ,

m , k m , nyk

g

w
; x se PP f

m x

m m , n

x

w
; x PP g

m

24(cid:14)

.

25(cid:14)

.

x
; x ,

m , n

n

(cid:7)m
PP
ks0
/k

n

f

(cid:15)

n

(cid:7)m
PP
ks0
/k

k
p f

n

m , k

n

(cid:7)m
PP
ks0

(cid:15)

nyk

q

g

m , nyk

w
; x sPP f

m m , n

w
; px PP g

x

m

x
; qx ,

m , n

pqqs1,

26(cid:14)

.

n

(cid:7)m
PP
ks0

(cid:15)

n

/k

k
p f

pm , k

nyk

g

q

qm , nyk

; x sPP

pm

f

pm , n

; x PP

qm

w

g

qm , n

x
; x ,

pqqs1.

27(cid:14)

.

(cid:52)(cid:46) (cid:84)(cid:72)(cid:69) (cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

(cid:52)(cid:46)(cid:49)(cid:46) (cid:77)(cid:111)(cid:116)(cid:105)(cid:118)(cid:97)(cid:116)(cid:105)(cid:111)(cid:110) (cid:102)(cid:111)(cid:114) (cid:116)(cid:104)(cid:101) (cid:78)(cid:101)(cid:119) (cid:84)(cid:114)(cid:97)(cid:110)(cid:115)(cid:102)(cid:111)(cid:114)(cid:109)
Consider a hash table of size m, with nq1 keys, where collisions are resolved by
linear probing. Let P be a property e.g., cost of a successful search for a tagged
element chosen at random, which we call

Let us say that a cluster is a sequence of contiguous occupied locations in the
be the result of applying a linear
table, surrounded by empty locations. Let f
operator e.g., an expected value to the probability generating function of P that
was found using the exact ﬁlling model. Since the operator is linear, we may
express f

as the sum of the conditional probabilities

m, n

(cid:14)

.

(cid:14)

.

.

v

m, n

x
f s Pr gcluster of size iq1 f

vw

m , n

(cid:7)
iG0

iq2, i

.

v

v

(cid:14)

(cid:14)

.

nq1

nq1 . To compute how many of them have

Let us compute the probability that belongs to a cluster of size iq1. The total
number of ways to insert nq1 keys in the table, and to choose one tagged
element, is m
as a member of a
cluster of size iq1, let us assume initially that the empty location after ’s cluster
.
is exactly at the rightmost end of the table see Fig. 1 .
myny2 ways to insert nyi elements in the
There are myiy2
leftmost myiy2 locations, leaving their rightmost location empty 37 . There are
iq2 ways to insert iq1 elements in the rightmost iq2 locations, leaving their
(cid:14)
ways to choose which iq1 elements go
rightmost location empty. There are
to the right side of the table, and there are iq1 ways to choose the tagged
element.

.nyiy1(cid:14)

nq 1
iq 1

Finally, if we remove the assumption that the empty location after

’s cluster is
in the rightmost location, we see that there are m locations where it could be.
Therefore,

.i

(cid:15)

/

(cid:14)

.

w

x

v

v

f s

m , n

(cid:15)

nq1
iq1

/

(cid:7)
iG0

myiy2

.

(cid:14)

nyiy1

myny2
(cid:14)
m nq1
(cid:14)
.

n

. (cid:14)

iq2

. (cid:14)
i

iq1

.

f

iq2, i

.

28(cid:14)

.

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

(cid:50)(cid:51)(cid:49)

(cid:70)(cid:105)(cid:103)(cid:46) (cid:49)(cid:46) Motivation for the Diagonal Poisson Transform.

If we apply the Poisson Transform to both sides of 28 , then

(cid:14)

.

w
PP f
m m , n

(cid:14)

x

ym x

nmx
.
; x se (cid:7)
n!
nG0
myiy2

(cid:7)
iG0
nyiy1

.

(cid:14)

=

/

(cid:15)

nq1
iq1
myny2
(cid:14)
nm nq1
(cid:14)
.

. (cid:14)

iq2

. (cid:14)
i

iq1

.

fiq2, i

ym xse

(cid:14)

(cid:7)
iG0

s 1yx

(cid:14)

.

e

(cid:7)
iG0

So, if we deﬁne

iq2 x

.

i

i

i!

(cid:14)

(cid:14)iq2. x

nyi

x
nyi !
.

(cid:14)

iq2, i

.

myiy2

.

(cid:14)

nyiy1

myny2

.

(cid:14)

(cid:14)

29

.

f

f

(cid:7)iq2, i
nGi
iq2 x
i

.

i

i!

w

DD f ; x s 1yx

(cid:14)

n

c

x

y(cid:14) nqc. x
e

. (cid:7)
nG0

(cid:14)

(cid:14)

nqc x
.

.

n

n!

f

n

w
as a new transform, then PP f
m m, n

x

w
; x sDD f

2

nq2, n

x
; x .

.
This transform looks similar to the Generalized Poisson Distribution GPD

(cid:14)
studied in 12 . However, it does not actually ﬁt in this family of distributions.

w

x

(cid:52)(cid:46)(cid:50)(cid:46) (cid:80)(cid:114)(cid:111)(cid:112)(cid:101)(cid:114)(cid:116)(cid:105)(cid:101)(cid:115) (cid:111)(cid:102) (cid:116)(cid:104)(cid:101) (cid:68)(cid:105)(cid:97)(cid:103)(cid:111)(cid:110)(cid:97)(cid:108) (cid:80)(cid:111)(cid:105)(cid:115)(cid:115)(cid:111)(cid:110) (cid:84)(cid:114)(cid:97)(cid:110)(cid:115)(cid:102)(cid:111)(cid:114)(cid:109)
`(cid:14)
We deﬁne f
c

.
x , the Diagonal Poisson Transform of f , as

n

`
f
c

(cid:14)

x ’DD f ; x s 1yx
.

(cid:14)

n

c

w

x

y(cid:14) nqc. x
e

. (cid:7)
nG0

(cid:14)

(cid:14)

nqc x
.

.

n

n!

f .
n

The name Diagonal Poisson Transform comes from the similarity with the Poisson
Transform. If we consider an inﬁnite matrix where the rows represent the values of
m and the columns represent the values of n, we may easily see the relationship.
The Poisson Transform has m ﬁxed, while n varies from 0 to inﬁnity; hence, it

(cid:50)(cid:51)(cid:50)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

follows a row of this matrix. The Diagonal Poisson Transform, has the property
that mynsc, where c is a constant. Therefore, it follows a principal diagonal of
`(cid:14)
.
x was introduced to illustrate this
the matrix. The grave accent in the notation f
c
property.

Some useful properties of this transform are

Theorem 12.
w

DD af q bg ; x s a DD f ; x q b DD g ; x

n

n

n

n

c

c

c

w

x

w

x

a, b constants,

x

w

DD 1; x s1,

c

x

DD
c

kn
nqc

(cid:14)

k

.

; x sx ,

k

DD nq1 f ; x s 1ycq

.

(cid:14)

n

c

DD f ; x qxD

n

c

1
1yx

,

rq1

.
x

(cid:14)
w

r

c

.

(cid:14)

DD Q nqc, n ; x s
/
1yx

(cid:15)
; x s

y(cid:14) cy1. x
e

1yx
(cid:14)
x

c

.

n

f
nq1

DD
c

(cid:15)

x

x

w
DD f ; x
c
1yx

n

/

,

DD nqc f ; x sx

(cid:14)

.

n

c

1yc

D x

0

H
x(cid:15)

x

e

(cid:14)cy1.t

w

x

DD f ; t dt,
c

n

x

w
DD f ; x
c
1yx

n

c

/

.

30(cid:14)
31(cid:14)

.
.

32(cid:14)

.

(cid:14)

33

.

(cid:14)

34

.

35(cid:14)

.

(cid:14)

36

.

Proof. The proofs follow in a fairly straightforward manner from the deﬁnition of
x
B
the Diagonal Poisson Transform. The details may be found in 55 .

w

We are now able to prove the Inversion Theorem.

Theorem 13

(

)
Inversion Theorem .

.

a

(cid:7) c, k
kG0
Proof. By 30 and 32 we know

nk
nq c
(cid:14)

(cid:14)

.

.

(cid:14)

.

k

DD
c

(cid:7)
kG0

a

c, k

k

n

nqc

.

(cid:14)

k

; x s a DD

c, k

c

(cid:7)
kG0

If DD f ; x s

n

c

w

x

a

c, k

k
x ,

then f s

n

(cid:7)
kG0

k

n

nqc

.

(cid:14)

k

; x s a
(cid:7)
kG0

c, k

k

w

x
x sDD f ; x .
B

n

c

A useful corollary of the Inversion Theorem is the following inversion formula.

Corollary 14.
y1
.
n!

a s

c, n

(cid:14)

n

nqc

.

(cid:14)

y1

.

(cid:14)

k

(cid:7)
kG0

(cid:15)

n

/k

kqc

.

(cid:14)

ny1

b mb s a
(cid:7)
kG0

c, n

c, k

k

n

c, k

nqc

.

(cid:14)

k

.

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

(cid:50)(cid:51)(cid:51)

This inversion formula can be easily checked by ﬁnding the Diagonal Poisson
, and considering the coefﬁcients of x n in the Taylor expansion
Transform of b
c, n
of this transform.

A very natural question is to characterize the set of functions f

such that
their Poisson Transform coincide with the Diagonal Poisson Transform of f
.
nqc, n
The functions presented in 31 ] 33 , satisfy this condition. The next theorem
completely characterizes this set of functions. Therefore, we will be able to transfer
known properties from one transform to the other.

. (cid:14)

m, n

(cid:14)

.

Theorem 15
w
x
DD f
c

nqc, n

(

˜m
Transfer Theorem . Let a
x sb x if and only if a
.
˜
m

`
c

)

(cid:14)

(cid:14)

.

˜
; x , then a
m

w
x s PP f
`
.
m m, n
c
.
x does not depend on m.

and b x s

; x

(cid:14)

.

x

(cid:14)
(cid:14)

˜m
Proof. The necessity condition is trivial: if a
equal to b x , because the latter does not depend on m.
x sa x and let a x s(cid:7)
.
k
Then by Theorem 8 and the Inversion Theorem

˜
Now suppose a
m

` (cid:14)
c

k G 0

(cid:14)
˜

(cid:14)
˜

(cid:14)

.

.

.

k

(cid:14)

.
x depends on m, then it cannot be

a x and b x s(cid:7)

(cid:14)

.

`
c

k G 0

b
c, k

k
x .

f s a
(cid:7)
kG0

m , n

k

k

n
m

and

k

f

nqc, n

s b
(cid:7)
kG0

c, k

k

n

nqc

.

(cid:14)

k

.

37(cid:14)

.

If we substiute msnqc in 37 , we have two expansions for f
. Both
expansions are rational functions in n with the same denominator. Hence, the
numerators should be equal. As both numerators are polynomials in n, their
for kG0. Note that since the a ’s do
coefﬁcients should be equal. Then, a sb
not depend on c neither do the b ’s. As a consequence, a x sb x .
B
.

nqc, n

c, k

(cid:14)

.

.

(cid:14)

k

k

(cid:14)
˜

`
c

c, k

Finally, we would like to ﬁnd an explicit characterization of the functions that
satisfy the Transfer Theorem. This characterization comes as a very nice consequence 
of Theorem 8, the Inversion Theorem, and the Transfer Theorem.

k

k

a

m, n

m, n

kn
km

k G 0

, where the a ’s do not depend on m.

satisﬁes the conditions of the Transfer Theorem if and

Corollary 16. A function f
only if f s(cid:7)
For the case nsm, these functions are exactly those studied by Knuth 38 , who
deﬁnes a Q-algebra to study them.
x
; x , and then suppose a x sb x .
.
.
nqc, n
e m x `
(cid:14)
(cid:14)
.
˜
If we consider the Taylor expansion of
b x , then the coefﬁcients
a x and
1 y x
of x n from both expansions should be equal. As a consequence we have the
following equation:

w
; x and b x sDD f
e m x
1y x

w
Let a x sPP f
m m, n

`
(cid:14)

`
(cid:14)

(cid:14)
˜

(cid:14)
˜

.

.

.

x

w

x

c

k

n

n
(cid:7)
mks0

f

k

m , nyk

s

1
m

n

n

(cid:7)
ks0

(cid:15)

n

/k

kqc mykyc

. (cid:14)
k

.

(cid:14)

nyk

f

kqc, k

.

(cid:14)

38

.

.
Hence, the functions that satisfy Corollary 16 are the solution of 38 .

(cid:14)

(cid:50)(cid:51)(cid:52)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

(cid:52)(cid:46)(cid:51)(cid:46) (cid:71)(cid:101)(cid:110)(cid:101)(cid:114)(cid:97)(cid:108)(cid:105)(cid:122)(cid:97)(cid:116)(cid:105)(cid:111)(cid:110)(cid:115) (cid:111)(cid:102) (cid:65)(cid:98)(cid:101)(cid:108)(cid:39)(cid:115) (cid:70)(cid:111)(cid:114)(cid:109)(cid:117)(cid:108)(cid:97)
In Section 5 we require some generalizations of Abel’s formula

(cid:15)

n

/k

(cid:7)
kG0

(cid:14)

kqc

.

1

ky1

nykqc

(cid:14)

.

2

nyk

s

(cid:14)

nqc qc

1
c1

n

.

2

,

c /0.
1

We study then with the help of the Diagonal Poisson Transform. After ﬁnding the
transform of the sum, we use the inversion properties of the Diagonal Poisson
x
Transform to ﬁnd the ﬁnal result. Some of these sums have been studied in 52 .
They also appear in other ﬁelds such as coding theory, pattern matching, data
x
compression, random mappings and multiprocessing systems 34, 54, 33, 43, 4, 10 .
Asymptotics for some special cases of these sums have also been studied recently
x
w
10, 53 .

w

w

We now study the ﬁrst sum.

Lemma 17.

DD

c qc
1

2

(cid:14)

kqc

.

1

(cid:15)

n

/k

(cid:7)
kG0

(cid:14)

nykqq

.

2

; x

n

(cid:14)

nykqc
.

kqp
nqc qc
nqc

1

2

(cid:14)

(cid:14)

nqc

.

1

p

DD
c

1

s

; x DD
c
1yx

2

q

.

2

; x

.

Proof.
Transform.

It follows immediately by using the deﬁnition of the Diagonal Poisson
B

When c sc s1, if we use Lemma 2, we obtain

1

2

Corollary 18.

1
nq2

.

(cid:14)

(cid:7)n
kG0

(cid:15)

DD
2

s 1yx

(cid:14)

. (cid:7)
nG0

n

/k
(cid:21)

kq1

.

(cid:14)

kqp

nykq1

.

(cid:14)

nykqq

; x

nqpq1

nq1

5

n

x

(cid:7)
nG0

(cid:21)

nqqq1

nq1

5

n
x ,

p, qG0.

When psy1, we use Lemma 3 and get

Corollary 19.

(cid:15)

n

/k

(cid:7)
kG0

DD
2

kq1

.

(cid:14)

ky1

(cid:14)

nykq1
(cid:14)
nq2

n

.

nykqq

.

; x s 1yx

(cid:14)

.

(cid:21)

(cid:7)
nG0

nqqq1

nq1

5

n
x ,

qG0.
Moreover, we ﬁnd Abel’s identity by using Lemma 3 and Lemma 17, for psy1
and qs0.

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

Corollary 20.

(cid:50)(cid:51)(cid:53)

DD

c qc
1

2

1

(cid:14)

nqc qc

1

2

.

(cid:15)

n

/k

(cid:7)n
kG0

(cid:14)

kqc

.

1

ky1

nykqc

(cid:14)

.

2

nyk

1
; x s ,
c

1

c /0.
1

Another interesting case is obtained when ps0, qs0, c s0, and c s0. Then

2

1
n
n

(cid:7)
kG0

(cid:15)

n

/k

DD
0

k

k

(cid:14)

nyk

.

nyk

; x s

1
1
1yx

.

w x
So after using 33 for cs0, we derive the following identity proven by Cauchy 6

(cid:14)

.

1
(cid:7)
n
n kG0

(cid:15)

n

/k

kk

(cid:14)

nyk

.

nyk

sQ n, n .
.

(cid:14)

0

The second sum we have to study is

Lemma 21.

DD

c qc
1

2

(cid:15)

n

/k

(cid:7)
kG0

(cid:14)

kqc

.

1

kqp

(cid:14)

nykqc

.

nykyq

nqc qc

(cid:14)

n

.

2

2

1

nyk

.

(cid:14)

q

f

nykyq

; x

s

qx
1yx

(cid:14)

nqc

.

1

p

DD
c

1

; x DD

c qq
2

w

x
f ; x .
n

Proof.
Transform.

It follows immediately by using the deﬁnition of the Diagonal Poisson
B

If c s1, then we can use Lemma 2, and obtain the following important result.

1

Corollary 22.

DD

c q1
2

(cid:7)
kG0

n

/k
(cid:15)
(cid:21)
(cid:7)
nG0

sx

q

kq1

.

(cid:14)

kqp

(cid:14)

nykqc

.

2

nykyq

nyk

.

(cid:14)

q

f

nykyq

; x

(cid:14)

nqc q1

2

n

.

nqpq1

nq1

5

n
x DD

c qq
2

w

x
f ; x .
n

(cid:52)(cid:46)(cid:52)(cid:46) (cid:65)(cid:98)(cid:101)(cid:108) (cid:73)(cid:110)(cid:118)(cid:101)(cid:114)(cid:115)(cid:101) (cid:82)(cid:101)(cid:108)(cid:97)(cid:116)(cid:105)(cid:111)(cid:110)(cid:115)

x

identities.
Inverse relations are very important in the study of combinatorial
Probably the most remarkable one is the Lagrange inversion formula 35, 11, 27,
23, 56 . This tool is used to solve some functional equations, and in several cases it
can give explicit formulae for the solutions. Another famous relation is the Mobius
x
inversion formula, of wide application in Number Theory 29 . Riordan in 52
presents a very large library of inverse relations that are very general and varied. In
this section we show how we can derive some classic and new inverse relations with
the use of the Diagonal Poisson Transform.

¨

w

w

x

w

(cid:50)(cid:51)(cid:54)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

First we state the following lemma that can be easily checked by using the

deﬁnition of the Diagonal Poisson Transform.

Lemma 23.

Let A s

n

(cid:15)

n

/k

(cid:7)
kG0

kqc

(cid:14)

k

.

1

k

(cid:14)

B nyk
(cid:14)

q
. (cid:14)
nqc qc

nykqc

n

.

2

1

nykyq

.

2

g

nykyq

;

then DD

c qc
1

2

w

A ; x s

n

x

x q
1yx

w

x

DD B ; x DD
c

n

1

c qq
2

w

x
g ; x .
n

39(cid:14)

.

Now suppose we know DD

g ; x . Then, we write the Diagonal Poisson
n
.
Transform of B , as a function of that of A , with an identity that resembles 39 .
Let G be a function that satisﬁes

c qq
2

(cid:14)

n

n

n

w

x

w

DD

yc yq

2

G ; x s

n

x

2

1yx
(cid:14)
w
c qq
2

.
g ; x
n

DD

.

x

So by 39 and 40 we obtain

(cid:14)

.

(cid:14)

.

w

DD B ; x s

n

c

1

x

xyq
1yx

w

DD

c qc
1

2

x

A ; x DD

n

yc yq

2

40(cid:14)

.

41(cid:14)

.

w

x
G ; x .

n

Then, by Lemma 23 we ﬁnd

B s

n

(cid:7)
kG0

(cid:15)

n

/k

(cid:14)

kqc qc

1

2

.

k

A

k

nyk

.

(cid:14)

yq

(cid:14)

The inverse relation is obtained by deﬁning

nykyc
nqc

(cid:14)

1

nykqq

G

nykqq

.

(cid:14)

42

.

.2
.

n

1

n

(cid:14)

a s nqc qc
.

b s nqc
c sz

(cid:14)

n

1

2

2
n

A ,
n

n

.
B ,
n

and substituting these values in 42 . Therefore, we arrive at

(cid:14)

.

and

a s
(cid:7)n
kG0

(cid:15)

n

/k

nyk

q
. (cid:14)

(cid:14)

nykqz

.

nykyq

g

nykyq

b ,
k

b s
(cid:7)n
kG0

(cid:15)

n

/k

nyk

.

(cid:14)

yq

nykyz

.

(cid:14)

nykqq

G

nykqq

a .
k

(cid:14)

43

.

(cid:14)

44

.

We obtain several useful special cases for various choices of g .n
(cid:52)(cid:46)(cid:52)(cid:46)(cid:49)(cid:46) (cid:65) (cid:78)(cid:101)(cid:119) (cid:65)(cid:98)(cid:101)(cid:108) (cid:73)(cid:110)(cid:118)(cid:101)(cid:114)(cid:115)(cid:101) (cid:82)(cid:101)(cid:108)(cid:97)(cid:116)(cid:105)(cid:111)(cid:110)(cid:46) Consider g sQ
(cid:14)
.33 ,

ry2

(cid:14)

n

nqzqq, n . Then, by

.

w

DD

zqq

g ; x s 1yx

(cid:14)

n

yrq1

,

.

x

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

and therefore

(cid:50)(cid:51)(cid:55)

w

DD

yzyq

G ; x s

n

x

2

.

w

s 1yx

1yx
(cid:14)
zqq
nyzyq, n . So 43 and 44 give us the

g ; x
n

rq1

x

(cid:14)

.

.

(cid:14)

.

(cid:14)

.

.

(cid:14)

DD

Then, by 33 , we obtain G sQ
n
following inversion formulae:

(cid:14)

.

yry2

(cid:15)
a s
(cid:7)n
kG0
/k
(cid:15)

b s
(cid:7)n
kG0

n

n

/k

nyk

q
. (cid:14)

nykqz

.

(cid:14)

nykyq

Q

ry2

(cid:14)

nyk

.

(cid:14)

yq

nykyz

.

(cid:14)

nykqq

Q

yry2

(cid:14)

nykqz, nykyq b ,

.

k

nykyz, nykqq a .

.

k

(cid:14)

45

.

(cid:14)

46

.

The most interesting feature of this pair of inverse relations is its symmetry in z, q,
and r. Since Q m, n s1, then for qs0 and rs1 45 and 46 simplify to

.

(cid:14)

(cid:14)

.

(cid:14)

.

y1

a s
(cid:7)n
kG0

(cid:15)

n

/k

nykqz

.

(cid:14)

nyk

b ,
k

(cid:14)

47

.

(cid:14)

48

.

and

(cid:15)

n

/k

z ynqk

2

. (cid:14)

nykyz

.

(cid:14)

nyky2

a .
k

b s
(cid:7)n
kG0
.

(cid:14)

x
The inverse relation 47 and 48 is studied in 52 .
We can ﬁnd more inverse relations by replacing g

(cid:14)

.

w

.
whose Diagonal Poisson Transforms are known, and using 41 .

(cid:14)

in 39 with other functions

(cid:14)

.

n

(cid:52)(cid:46)(cid:53)(cid:46) (cid:83)(cid:111)(cid:108)(cid:118)(cid:105)(cid:110)(cid:103) (cid:82)(cid:101)(cid:99)(cid:117)(cid:114)(cid:114)(cid:101)(cid:110)(cid:99)(cid:101)(cid:115) (cid:119)(cid:105)(cid:116)(cid:104) (cid:116)(cid:104)(cid:101) (cid:68)(cid:105)(cid:97)(cid:103)(cid:111)(cid:110)(cid:97)(cid:108) (cid:80)(cid:111)(cid:105)(cid:115)(cid:115)(cid:111)(cid:110) (cid:84)(cid:114)(cid:97)(cid:110)(cid:115)(cid:102)(cid:111)(cid:114)(cid:109)
In Section 5.4 we require a solution to the recurrence

h sb q

i

i

iqd
iq1

(cid:15)

i

/k

(cid:7)
kG0

kqq

.

(cid:14)

kqp

(cid:14)

nykyqqc
.
iqc

(cid:14)

nykyq

nyk

.

(cid:14)

q

h

nykyq

i

.

.

49(cid:14)

.

Let a denote the factor that multiplies
Transform with parameter c to both sides of 49 and using 30 , we get

. After applying the Diagonal Poisson
(cid:14)

.

(cid:14)

.

i

iq d
iq 1

h x sb x qDD a ; x q dy1 DD
`

`
c

(cid:14)

.

(cid:14)

.

(cid:14)

.

c

c

i

c

w

x

; x .

Now, we only have to ﬁnd the values of DD a ; x and DD
c

For the ﬁrst transform, we use Lemma 21 for c scyq, c sq, and f sh .

; x .

c

i

n

n

2

1

w

x

Then, we have

w

DD a ; x s

c

i

x

qx
1yx

DD nqq

(cid:14)

q

p

.

.
; x h x .

(cid:14)

`

c

(cid:14)

50

.

Let denote s

(cid:14)

p, q

.
.
x the factor that multiplies h x .

(cid:14)

`

c

ai
iq1
ai
iq 1

(cid:50)(cid:51)(cid:56)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

For the second transform, we use 35 and 50 and obtain

(cid:14)

.

.

i

a
iq1

DD
c

; x s

y(cid:14) cy1. x
e

1yx

.

x

H

0

e

(cid:14)cy1.t

s

p, q

(cid:14) .
t h t dt.

(cid:14) .

`

c

(cid:14)
(cid:14)
x

Finally, we arrive at the following integral equation
(cid:14)

dy1 e
.

y(cid:14) cy1. x

(cid:14)

h x sb x qs
`

ˆ
c

(cid:14)

.

(cid:14)

.

c

(cid:14)

x h x q
.

`

(cid:14)

.

c

p, q

1yx

.

x

H

0

e

(cid:14)cy1.t

s

p, q

(cid:14) .
t h t dt.

(cid:14) .

`

c

After solving the integral equation and using 34 , we obtain the following solution:

.

x
(cid:14)

e

`h x s

(cid:14)

.

c

1yx e
.
(cid:14)
dx 1ys
(cid:14)

(cid:14) dyc. x
.
.
x(cid:14)

p, q

(cid:14) dy1. A(cid:14) x.

e

x

H

0

x

dy1 (cid:14)cyd.t y(cid:14) dy1. A(cid:14)t.

e

c

.

(cid:14)

DD iq1 b ; t dt,
51(cid:14)

i

.

where A x sH

(cid:14)

.

x
ts1

1yt r t 1ys
(cid:14)

(cid:14) (cid:14)

.

(cid:14) ..
t dt.

p, q

(cid:52)(cid:46)(cid:54)(cid:46) (cid:70)(cid:105)(cid:110)(cid:100)(cid:105)(cid:110)(cid:103) (cid:65)(cid:115)(cid:121)(cid:109)(cid:112)(cid:116)(cid:111)(cid:116)(cid:105)(cid:99)(cid:115) (cid:119)(cid:105)(cid:116)(cid:104) (cid:116)(cid:104)(cid:101) (cid:68)(cid:105)(cid:97)(cid:103)(cid:111)(cid:110)(cid:97)(cid:108) (cid:80)(cid:111)(cid:105)(cid:115)(cid:115)(cid:111)(cid:110) (cid:84)(cid:114)(cid:97)(cid:110)(cid:115)(cid:102)(cid:111)(cid:114)(cid:109)
The Diagonal Poisson Transform is also useful to ﬁnd asymptotics. The approach
w
taken here is due to P. Flajolet in a personal communication 15 . His main
(cid:14)
observation is to ﬁnd the Cayley generating function of a sequence f
with c
constant by composing its Diagonal Poisson Transform with the Tree function
sx. If we use the deﬁnition of the Diagonal
(cid:14)
T x , and noticing that T x e
Poisson Transform, we ﬁnd

x
nqc, n

. yT (cid:14) x.

.

(cid:14)

.

DD f
c

nqc, n

; T x s 1yT x
(cid:14)

.

(cid:14)

(cid:14)

y(cid:14) nqc.T (cid:14) x.
e

.

. (cid:7)
nG0

(cid:14)

(cid:14)

nqc T x
(cid:14)

.
n!

n

.

.

f

nqc, n

s 1yT x
(cid:14)

(cid:14)

.

.

ycT (cid:14) x.
e

s 1yT x
(cid:14)

(cid:14)

.

.

yc T (cid:14) x.
e

(cid:14)

(cid:14)

(cid:7)
nG0

(cid:7)
nG0

n

f

.

nqc
n!
nqc x
.

(cid:14)

n!

nqc, n

(cid:14)

.
T x e

(cid:14)

yT (cid:14) x.

n

.

n

.

f

nqc, n

,

and therefore we obtain

(cid:14)

(cid:14)

nqc x
.

.

n

n!

(cid:7)
nG0

f

nqc, n

s

Then, we can recover f

nqc, n

(cid:14)
or f

m, myc

yc(cid:14)1yT (cid:14) x..
e
1yT x(cid:14)
.
.
as follows:

c
e DD f

c

nqc, n

(cid:14)
; T x

.

.

f

nqc, n

s

(cid:14)

s

f

m , myc

n!
nqc
.
(cid:14)
myc !
.
mycm

w

x

n

z

n

w

z

my c

eyc(cid:14)1yT (cid:14) x..
1yT x(cid:14)
.
eyc(cid:14)1yT (cid:14) x..
1yT x(cid:14)
.

x

c
e DD f

c

nqc, n

(cid:14)
; T x

.

,

c
e DD f

c

m , myc

(cid:14)
; T x

.

.

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

(cid:50)(cid:51)(cid:57)

As a consequence, we can use singularity analysis 21 to ﬁnd the asymptotic
expansion of f

(cid:14)
or f

By the Transfer Lemma, when the Diagonal Poisson Transform of f

does
not depend on c, we can use the Poisson Transform instead. Therefore, we have
the following depoissonization theorem.

nqc, n

m, myc

nqc, n

.
.

w

x

Theorem 24 Depoissonization

(

) [

]
15 .

x

; z does not depend on m, then

w
If PP f
m m, n
eyc(cid:14)1yT (cid:14) z..
1yT z(cid:14)
.
eyc(cid:14)1yT (cid:14) z..
1yT z(cid:14)
.

x

c
e PP f

m

(cid:14)
; T z

.

,

m , n

c
e PP f

m

m , n

(cid:14)
; T z

.

.

f

nqc, n

s

(cid:14)

s

f

m , myc

n

n!
nqc
.
(cid:14)
myc !
.
mycm

w

x

n

z

w

z

my c

w

x

Jacquet and Szpankowski 33, 31, 32 present other depoissonization theorems
when the Poisson transform is entire and z tends to inﬁnity. Generally, in hashing
problems the Poisson transforms have a singularity when the load factor z is equal
to 1 full table , and so their results are not applicable here.

(cid:14)

.

.

(cid:14)

c

(cid:14)

r

Q nqc, n s

(cid:52)(cid:46)(cid:54)(cid:46)(cid:49)(cid:46) (cid:65)(cid:110) (cid:69)(cid:120)(cid:97)(cid:109)(cid:112)(cid:108)(cid:101)(cid:46) As an example we ﬁnd the asymptotic expansion of Q m,
myc , for ﬁxed r, c. By Theorem 24 and 16 we have
.
eyc(cid:14)1yT (cid:14) x..
1yT x(cid:14)
.
yc
.
i!
We now use Lemma 7 and so at zs1re we have

n!
nqc

n!
nqc

1yT z
(cid:14)

(cid:7)
iG0

se

iyry2

rq2

52

.
i

w

x

w

x

e

(cid:14)

(cid:14)

.

.

(cid:14)

.

(cid:14)

n

z

n

z

(cid:14)

n

.

.

(cid:14)

.

.

n

c

(cid:14)

r

i

.

(cid:14)

yc
i!

(cid:7)
iG0

1yT z
(cid:14)

(cid:14)

.

.

iyry2

s

i

.

(cid:14)

yc
i!

(cid:15)

(cid:7)
iG0

s d z
(cid:14)

.

yry2

q

iyry2

3

.

.

/

d z y d z qO d z
(cid:14)
(cid:14)

.

(cid:14)

.

2

(cid:14)

1
3

(cid:15)

rq2y3c

3

/

yry1

(cid:14)
d z

.

4 rq2 y7 rq2
(cid:14)

.

(cid:14)

2

.

y

c rq1
(cid:14)

.

3

q d z(cid:14)

/

2

c
2

q

(cid:15)

72
yrq1

.

.

qO d z
(cid:14)

(cid:14)

.

yr

.

(cid:14)

53

.

Then by 10 we ﬁnd

(cid:14)

.

c

e

n!
nqc

(cid:14)

n

.

w

x
n ys
z d

(cid:14)

.
z ;

sy1
2

sy1
2

’
pn
(cid:15)

/2

s

2

G

(cid:15)

1q

3s y6 sq2q12 c

2

2

24n

qO

(cid:15)

1
2
n

/

/

.

(cid:14)

54

.

(cid:50)(cid:52)(cid:48)

Since G

(cid:15)

rq 2
2

/

s G

r
2

(cid:15)

/

r
2

, then by 52 , 53 , and 54 we get

. (cid:14)

(cid:14)

.

(cid:14)

.

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

Q nqc, n s

(cid:14)

.

r

G

q

’pn
(cid:15)
rq 2
(cid:15)

2

1q

3 rq2 y6 rq2 q2q12 c
(cid:14)

.

.

2

(cid:14)
24n

2

/

rq1 (cid:15)

2

rq1
2

/

2

4 rq2 y7 rq2
(cid:14)

.

(cid:14)

2

.

y

c rq1
(cid:14)

.

3

q

(cid:15)
qO n

ry2
2

/

rq2y3c

3

/

G

’
pn
(cid:15)
rq 1

2

r
2

r
2

2

/

q

(cid:15)

s

(cid:16)

G

q

(cid:15)

(cid:16)

rq1
n q
2

72

0

’
p

rq1
2

rq 2

2

/

2

’p
/

2

rq 2

2

(cid:15)

G

rq1
2

0

(cid:15)

c
2

/

r

2

’
pn
(cid:15)

/2
rq2y3c

G

2

3

ry1
2

ry1
2

r
2

n

/

(cid:16)

’
p
rq 1

2

r
2

2

/

(cid:15)

G

0

(cid:15)

3 rq2 y6 rq2 q2q12 c
(cid:14)

.

(cid:14)

.

2

2

rq2 y7r

2

.

72

4r

(cid:14)

q

(cid:15)
qO n

ry2
2

/

.

24

rq2

.

(cid:14)

cr

(cid:14)

y

.

rq1
3

q

2

rc
2

ry1
2

n/

55(cid:14)

.

Finally, for c constant, we have myc sm 1ycsrmqO m
substitute n by myc in 55 we arrive at

. s

s(cid:14)

(cid:14)

(cid:14)

.

(cid:14) y2 ..

, and if we

rq1
2

m q

(cid:16)

G

q

(cid:15)

(cid:16)

0

’
p

rq1
2

rq 2

2

/

2

’p
/

2

rq 2

2

(cid:15)

G

rq1
2

0

(cid:15)

(cid:16)

’
p
rq 1

2

r
2

2

/

(cid:15)

G

0

(cid:15)

rq2y3c

3

r
2

m

/

3 rq2 y6 rq2 q2q12 c
(cid:14)

.

(cid:14)

.

2

24

2

y

c rq1
(cid:14)

.

2

Q m, myc s

(cid:14)

.

r

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

4r

(cid:14)

q

(cid:15)
qO m

ry2
2

/

.

rq2 y7r

2

.

72

rq2

.

(cid:14)

cr

(cid:14)

y

.

rq1
3

q

2

rc
2

(cid:50)(cid:52)(cid:49)

ry1
2

m/

As a special case, if rs0 and cs1, we get

Q m, my1 s

.

(cid:14)

0

’2pm

2

y q

1
3

(

1
24

2p
m

qO

(cid:15)

/

,

1
m

(cid:14) .
as we already know by 9 .

(cid:53)(cid:46) (cid:65)(cid:78)(cid:65)(cid:76)(cid:89)(cid:83)(cid:73)(cid:83) (cid:79)(cid:70) (cid:84)(cid:72)(cid:69) (cid:76)(cid:67)(cid:70)(cid:83) (cid:76)(cid:73)(cid:78)(cid:69)(cid:65)(cid:82) (cid:80)(cid:82)(cid:79)(cid:66)(cid:73)(cid:78)(cid:71) (cid:72)(cid:65)(cid:83)(cid:72)(cid:73)(cid:78)(cid:71) (cid:65)(cid:76)(cid:71)(cid:79)(cid:82)(cid:73)(cid:84)(cid:72)(cid:77)

m, n

(cid:53)(cid:46)(cid:49)(cid:46) (cid:66)(cid:97)(cid:115)(cid:105)(cid:99) (cid:68)(cid:101)(cid:174)(cid:110)(cid:105)(cid:116)(cid:105)(cid:111)(cid:110)(cid:115) (cid:97)(cid:110)(cid:100) (cid:65)(cid:117)(cid:120)(cid:105)(cid:108)(cid:105)(cid:97)(cid:114)(cid:121) (cid:70)(cid:117)(cid:110)(cid:99)(cid:116)(cid:105)(cid:111)(cid:110)(cid:115)
Consider a hash table of size m, with nq1 elements inserted using the last-come-
ﬁrst-served linear probing algorithm. We will consider a randomly chosen element
(cid:14) .
as a ‘‘tagged’’ one, and denote it by . Deﬁne P
z as the probability generating
function for the cost of searching for this tagged element.
We deﬁne an almost full hash table of size m as a hash table of size m with
my1 elements inserted in such a way that the last location is empty. There are
mmy 2 ways of creating an almost full table of size m, since there are mmy 1
possible arrangements and the probability of empty location being the last one is
1rm.
We have to introduce three auxiliary functions. Given a table of size lqrq2,
(cid:14) .
z as the generating function for the number of ways of inserting
we deﬁne F
lqrq1 elements in the table, where one element is tagged
with z keeping
track of its cost, such that the rightmost location is empty, and such that there are l
elements to the left of
and r elements to its right. Figure 2 helps in understanding 
this deﬁnition. If we insert a new element in any of the ﬁrst lq1 locations of
(cid:14) .
the table, the cost of
z is the number of ways of
creating an almost full table of size lqrq2 then we have

increases by one. Since U F

v(cid:14) .

l, r

l, r

(cid:14)

.

z

v

v

v

U F

z

l, r

z s lqrq2
.

(cid:14)

.

(cid:14)

lqr

.

(cid:14)

56

.

We deﬁne C z as the generating function for the number of ways of inserting
iq1 elements into a table of size iq2, where one element is tagged
, and such

v(cid:14) .

i

(cid:14) .

(cid:70)(cid:105)(cid:103)(cid:46) (cid:50)(cid:46) Deﬁnition of F

l, r

(cid:14) .
z .

(cid:50)(cid:52)(cid:50)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

that the rightmost location is empty with z keeping track of the cost of
may be any of the iq1 elements inserted, we have

v

. Since

v

C z s

(cid:14)

.

i

F
l, r

(cid:14)

.
z .

(cid:7)
lqrsi
l, rG0

We may easily check that

U C z s iq2

.
57
The function C z rU C z is the probability generating function for the cost of a
(cid:14) .
in an almost full table of size iq2. Therefore, by 1 we
successful search for
have

iq1 .
.

. (cid:14)
i

(cid:14) .

(cid:14) .

z
v

(cid:14)

.

(cid:14)

(cid:14)

z

i

i

i

z

.

(cid:14)
U D C z
i s 1qQ iq2, i
z
.
(cid:14)
U C z

1
2

(cid:14)

(cid:14)

0

z

i

.

.

,

(cid:14)

58

.

Let us deﬁne G z ’(cid:7)

because the expected successful search time for a linear probing scheme is
independent of the discipline used to resolve collisions.
is the generating funci

tion for the number of ways of creating a full table of size iq2 where one element
is tagged
, and the cost of searching for
increases by 1 after the last insertion, with z keeping track of the cost of before

, so that the last element inserted is not

(cid:14) .
(cid:14) .
z . Then G z

lq1 F
.

lqrsi

(cid:14) .

(cid:14) .

l, r

(cid:14)

v

v

v

v

i

the last element is inserted. From its deﬁnition we can easily show that

U G z s

(cid:14)

.

z

i

iq1

. (cid:14)

(cid:14)

.

iq2
2

iq1

.

(cid:14)

59

.

i

w

x

(cid:53)(cid:46)(cid:50)(cid:46) (cid:68)(cid:101)(cid:114)(cid:105)(cid:118)(cid:97)(cid:116)(cid:105)(cid:111)(cid:110) (cid:111)(cid:102) (cid:116)(cid:104)(cid:101) (cid:66)(cid:97)(cid:115)(cid:105)(cid:99) (cid:73)(cid:100)(cid:101)(cid:110)(cid:116)(cid:105)(cid:116)(cid:105)(cid:101)(cid:115)
(cid:14) .
We are to study P
z . However, as explained in Section 4.1, it is enough to
w
z ; x sDD C z rU C z ; x by 29 . We will ﬁrst
(cid:14) .
(cid:14) .
analyze C z
since PP P
m m, n
(cid:14) .
derive a recurrence for C z and then ﬁnd the equivalent equation in the Poisson
i
Model, by using the Diagonal Poisson Transform.

(cid:14) .

(cid:14) .

m, n

Three cases are needed to derive a recurrence for C z . In the ﬁrst one, we
. We have iq2 ways of
consider that the last element inserted in the table is
creating an almost full table of size iq2 , and iq1 ways of choosing . With
.
probability 1r iq1 was the last element inserted, and so its cost is 1. Therefore,
the contribution in this case is

(cid:14) .

(cid:14)

.

.

(cid:14)

(cid:14)

.

(cid:14)

.

(cid:14)

x

2

z

v

v

v

i

i

i

i

C z ⁄ iq2 z.

i

(cid:14)

.

(cid:14)

.

i

(cid:14)

60

.

If the last element inserted is not
Figure 3.
First, we assume that the last insertion does not affect the cost of retrieving , as
in case a of Figure 3. We have iq2 different positions where the new element
may hash. Before the last insertion, the hash table has two clusters. For a ﬁxed k,

, we have to consider two cases as shown in

(cid:14) .

(cid:14)

.

v

v

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

(cid:50)(cid:52)(cid:51)

(cid:70)(cid:105)(cid:103)(cid:46) (cid:51)(cid:46) When the last element inserted is not

v

, two cases have to be considered.

the number of ways of generating the second cluster is C
iykq1
(cid:14)
contribution in this case is

(cid:14) .
z , while we have
ways of generating the ﬁrst one. Since k ranges from 1 to i, the

.iyky1

ky1

C z ⁄ iq2

(cid:14)

.

(cid:14)

i

.

i

(cid:7)
ks1

(cid:15)

i

/k

iykq1

.

(cid:14)

iyky1

C

ky1

(cid:14)

.
z .

(cid:14)

61

.

Finally we must include a correction term to account the case when the last
, as in case b of Figure 3. For a ﬁxed k, there
insertion does increase the cost of
z number of ways of creating a full table of size kq1 so that this last
(cid:14) .
are G
by 1, while we have iykq1
.
insertion increments the cost of
ways of
generating the ﬁrst cluster. Since the increment in cost is 1, we need a factor of
zy1 . Therefore, the contribution in this case is
(cid:14)

iyky1

(cid:14) .

ky1

.

(cid:14)

v

v

C z ⁄ zy1

(cid:14)

.

(cid:14)

i

.

i

(cid:7)
ks1

(cid:15)

i

/k

iykq1

.

(cid:14)

iyky1

G

ky1

(cid:14)

.
z .

(cid:14)

62

.

Since we need probability generating functions, we have to divide by the normalization 
factor
, and
. (cid:14)
use 60 , 61 and 62 , we ﬁnd

iq1 . If we deﬁne c z ’
.

iq2
(cid:14)
.

, g z ’

. (cid:14)
i
(cid:14)

(cid:14)
G z
i
i
. (cid:14)

(cid:14)
C z
i
i
. (cid:14)

.
iq 1

.
iq 1

(cid:14) .

(cid:14) .

iq 2

iq 2

.

(cid:14)

(cid:14)

.

(cid:14)

.

i

i

iq1 c
.

(cid:14)

(cid:14)

i

z szq iq2
.

(cid:14)

. (cid:7)
kG0

q zy1

(cid:14)

(cid:15)

. (cid:7)
kG0

i

(cid:15)
/k
/k

i

kq1

.

(cid:14)

ky1

(cid:14)

kq1

.

(cid:14)

ky1

(cid:14)

iyky1

i

iykq1
(cid:14)
iykq1
(cid:14)

.
iq2
.
iyky1
.
iq2

.

i

iyk c
.

(cid:14)

iyky1

(cid:14)

z

.

iyk g
.

(cid:14)

iyky1

(cid:14)

z

.

.

To ﬁnd c t, z sDD c z ; x we use 34 , 36 , and Lemma 21, and so we derive

(cid:14) .

. (cid:14)

`2

(cid:14)

.

(cid:14)

.

2

i

w

x

`
D c
z 2

t, z sy

.

(cid:14)

`2
c

(cid:14)

.

t, z
x

q q zy1 g
.
`
2

(cid:14)

z
x

(cid:14)

.
t, z .

Finally, if we solve the differential equation, we obtain

DD c
2

i

z ; x s
.

(cid:14)

1
x

x

H

0

(cid:14)

zqt zy1 g
.
`
2

(cid:14)

(cid:14)

t, z

.

.

dtszq

zy1

x

x

H

0

`
tg
2

(cid:14)

t, z dt.

.

(cid:14)

63

.

(cid:50)(cid:52)(cid:52)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

If we differentiate 63 with respect to z, we ﬁnd

(cid:14)

.

U D PP P

z m

z

m , n

(cid:14)

z ; x s1q
.

x

`
tU g
2

z

(cid:14)

t, z dt,

.

2U D PP P
z

z m

m , n

z ; x s
.

(cid:14)

`
tU D g
2

z

z

(cid:14)

t, z dt.

.

1
H
x 0
2
H
x 0

x

(cid:14)

64

.

(cid:14)

65

.

(cid:14)

.

(cid:14)

.

`z
From 59 and 36 U g
2
.
64 and integrate, we ﬁnd that U D P x, z s 1q
(cid:14)
(cid:14)
.
obtain 1 by applying 13 , 14 , and 16 .

2(cid:15)

; x s
.

iq 2
2
˜
z m
(cid:14)

x, z sDD

2 y t
2 1y t
(cid:14)
1

. (cid:14)

(cid:14) .

(cid:14)

.

(cid:14)

.

.

2

z

2

. Then, if we substitute into

/

1

1y x

. As a consequence, we

`
To study the second moment, we have to ﬁnd U D g
2
z

.
t, z . This analysis is done
(cid:14) .
in two steps. First, we derive a recurrence for U D g z , and then solve the
i
z
equivalent differential equation in the Poisson Model.

(cid:14)

z

z

(cid:40)

(cid:41)

l, r

(cid:53)(cid:46)(cid:51)(cid:46) (cid:65) (cid:82)(cid:101)(cid:99)(cid:117)(cid:114)(cid:114)(cid:101)(cid:110)(cid:99)(cid:101) (cid:102)(cid:111)(cid:114) (cid:71) (cid:122)(cid:105)
(cid:14) .
z , which is required to derive the recurrence
We ﬁrst present a recurrence for F
we need. We have a table of size lqrq2, with lqr elements inserted, and want
to see what happens when we add the lqrq1 st element. There are four cases as
described in Figure 4. When the tagged element is moved one position, the label z
of the arrow shows that we need z as a factor in the recurrence.
Case a is the insertion of the tagged element. In this case case the generating
function is z times the number of ways of generating a table of size lqrq2 with
lqr elements, in such a way that the last cluster is of size k. For a ﬁxed k, this
factor is
. Since k ranges from 0 to r, the

lqrqkq1
.

kq1
.

lqryky1

(cid:14) .

ky1

lq r

(cid:14)

.

(cid:14)

(cid:14)

(cid:15)

/k

(cid:70)(cid:105)(cid:103)(cid:46) (cid:52)(cid:46) Four cases are needed to derive a recurrence for F

l, r

(cid:14) .
z .

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

contribution is

F
l, r

(cid:14)

z ⁄z
.

(cid:15)

lqr

/k

(cid:7)
0FkFr

(cid:50)(cid:52)(cid:53)

kq1

.

(cid:14)

ky1

lqrykq1

.

(cid:14)

lqryky1

.

(cid:14)

66

.

v

(cid:14) .
. The cost of searching for

For the last three cases, we assume that the inserted element is not the tagged
one. Case b is the insertion of an element in the cluster that precedes the one
does not increase. We have kq1 different
that has
positions where the new element may hash. The number of ways of generating the
upper table is the product of the number of ways of generating the ﬁrst cluster and
the number of ways of generating the second one. For a ﬁxed k, the number of
ways of generating the second cluster is F
ways
of generating the ﬁrst one. Since k ranges from 0 to ly1,

z , while we have kq1
(cid:14) .

lyky1, r

.ky1

(cid:14)

v

F
l, r

(cid:14)

z ⁄
.

(cid:7)

0FkFly1

(cid:15)

lqr

/k

kq1

.

(cid:14)

ky1

F
lyky1, r

(cid:14)

z

. (cid:14)

kq1 .
.

(cid:14)

67

.

(cid:14) .

Case c is the insertion of an element to the left of the tagged element. Now, the
cost of searching for it increases by 1, and therefore we multiply by z. We have l
positions where the element may hash. Following a similar analysis as for the
previous cases we have

F
l, r

(cid:14)

z ⁄lz
.

(cid:7)
0FkFr

(cid:15)

lqr

/k

kq1

.

(cid:14)

ky1

F
ly1, ryk

(cid:14)

.
z .

(cid:14)

68

.

. Again, in this case the cost
does not increase. We have ryk positions where the element

v

(cid:14) .

Case d is the insertion of an element to the right of
of searching for
may hash. Therefore,
z ⁄
.

kq1

lqr

ky1

(cid:14)

.

(cid:14)

v

F
l, r

(cid:7)

(cid:15)

/k

0FkFry1

F
l, ryky1

(cid:14)

z

. (cid:14)

ryk .
.

(cid:14)

69

.

(cid:14)

. (cid:14)

. (cid:14)

(cid:14) .

(cid:14) .

Putting the contributions of 66 , 67 , 68 , and 69 together, and noting that in
cases b , c and d , we may omit the limits in the sum if we assume that
F
l, r

z s0 for l -0 and r -0, we have the recurrence
(cid:14) .
z sz
.

lqrykq1

kq1

lqryky1

lqr

(cid:14) .

ky1

(cid:14)

.

(cid:14)

(cid:14)

.

(cid:14)

.

.

F
l, r

(cid:15)
(cid:7)
0FkFr
(cid:7)

q

0FkFlqr

/k
(cid:15)

lqr

/k

kq1

.

(cid:14)

ky1

(cid:14)

F
lyky1, r

(cid:14)

z

. (cid:14)

kq1 qlzF

.

ly1, ryk

(cid:14)

z

.

q ryk F

(cid:14)

.

l, ryky1

(cid:14)

z

.

.

.

(cid:14)

70

.

If we sum both sides of 70 for lqrsi, we have
i

(cid:14)

.

kq1

.

(cid:14)

ky1

z iykq1
(cid:14)

.

iyky1

G z s

(cid:14)

.

i

(cid:15)

/

i
k

(cid:7)
kG0

(cid:15)

(cid:7)
rsk
(cid:14)

iyrq1

.

(cid:14)

z q
.

(cid:7)
lqrsi

zl

(cid:14)

q

(cid:7)
lqrsi

lq1

. (cid:14)

(cid:14)

kq1 F

.

lyky1, r

lq1 F

.

ly1, ryk

(cid:14)

z

.

q

(cid:7)
lqrsi

lq1

. (cid:14)

(cid:14)

iylyk F

.

l, ryky1

(cid:14)

z

.

/

(cid:50)(cid:52)(cid:54)

s

(cid:7) (cid:15)
z
2 kG0
(cid:15)
q
(cid:7)
kG0

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

kq1

.

(cid:14)

ky1

iykq1

.

(cid:14)

iyk

iykq2

.

(cid:14)

kq1

.

(cid:14)

ky1

(cid:7)

lqrsiyky1

F
l, r

(cid:14)

z

(cid:14)
. (cid:14)

lqkq2

. (cid:14)

kq1

.

i

/k
/k

i

(cid:14) .
if we use the deﬁnition of G z

i

So,
(cid:14) .
recurrence for G zi

. (cid:14)

lq2 q lq1

.

(cid:14)

. (cid:14)

iylyk

..

.

and C z , we arrive at the following

(cid:14)

qz lq1
(cid:14) .

i

G z s

(cid:14)

.

i

z
(cid:7)
2 kG0
q
(cid:7)
kG0

(cid:15)
(cid:15)

i

/k
/k

i

kq1

.

(cid:14)

ky1

iykq1

.

(cid:14)

iyk

iykq2

.

(cid:14)

kq1

.

(cid:14)

ky1

(cid:14)

(cid:14)

iq3 G

.

iyky1

z q kq1 C
.

(cid:14)

.

2

(cid:14)

iyky1

(cid:14)

z

.

.

q zy1

(cid:14)

.

(cid:15)

i

/k

(cid:7)
kG0

kq1

.

(cid:14)

ky1

(cid:7)

lqrsiyky1

lq1

. (cid:14)

(cid:14)

lq2 F

.

l, r

(cid:14)

.
z .

(cid:14)

71

.

Later we will require the value of U D g z . So, we need to prove

(cid:14) .

z

z

i

Lemma 25.
.

(cid:14)

z

.

z

iq1 U D g
iq2
2

z
(cid:14)

s

(cid:14)
i
2
.

q y

1
6

q iq3

(cid:14)

(cid:15)

. (cid:7)
kG0

i

/k

.

7 iq2
(cid:14)
12
kq1

(cid:14)

Q iq2, i

(cid:14)

0

.

ky1

iykq1

(cid:14)

.

iyky1
iq2

(cid:14)
.

.
(cid:14)

iyk U D g

.

z

z

i

iyky1

(cid:14)

z

.

.

If in 71 we take derivatives with respect to z and evaluate at zs1, we

(cid:14)

.

Proof.
have

U D G z s

(cid:14)

.

z

z

i

kq1

.

(cid:14)

ky1

iykq1

.

(cid:14)

iyk

iykq2

.

(cid:14)

2

(cid:15)

i

/k

kq1

.

(cid:14)

ky1

U D G

z

z

iyky1

(cid:14)

z

.

(cid:15)

i

/k

(cid:7)
kG0
q iq3

(cid:14)

(cid:15)
(cid:15)

q

q

(cid:7)
kG0
(cid:7)
kG0

i

(cid:14)

.

(cid:7)
kG0
/k
/k

(cid:14)

i

kq1

kq1

kq1

ky1

.

.

U D C

z

z

iyky1

(cid:14)

z

.

(cid:7)

lqrsiyky1

lq1

. (cid:14)

(cid:14)

lq2 U F

.

z

l, r

(cid:14)

.
z .

If we normalize and use 56 and 58 , then
(cid:14)

iq1 U D g

.

.

(cid:14)

z

z

z

i

(cid:14)

.

(cid:14)

.

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

(cid:50)(cid:52)(cid:55)

s iq3

(cid:14)

i

i

i

(cid:14)

(cid:14)

/k
(cid:15)
/k
/k
/k
/k

(cid:14)

(cid:14)

i

i

. (cid:7)
kG0
(cid:15)
(cid:15)
(cid:15)
(cid:15)

1
2

q (cid:7)
kG0

1
2

q (cid:7)
kG0

1
6

q (cid:7)
kG0

q

1
3

(cid:7)
kG0

kq1

.

(cid:14)

ky1

(cid:14)

iykq1

kq1

.

kq1

iykq1

.

(cid:14)

z

z

z

.

(cid:14)

.

iyky1

iyk U D g

(cid:14)
.
iyk Q iykq1, iyky1

.

(cid:14)

0

.

i

.
(cid:14)
iyky1

iyky1
iq2
(cid:14)
iq2

(cid:14)

i

.

kq1

.

kq1

.

kq1

.

kq1

(cid:14)
ky1

(cid:14)
ky1

i

.

iykq1

iykq1

(cid:14)
iq2
(cid:14)
iq2
iykq1
(cid:14)
iq2

.

(cid:14)

.

i

i

.

.

.

iyk

iyk

iykq2

.

72(cid:14)

.

The second sum of the right-hand side of 72 is that studied in Corollary 22 for
ps1, qs1, c sc s1, and f sQ nq2, n , and the other three addends can be
simpliﬁed by using Corollaries 18 and 19. Therefore, if we denote the last four
addends of the right-hand side of 72 by r , we obtain

(cid:14)

.

(cid:14)

.

n

1

2

0

(cid:14)

.

i

w

DD r ; x s y

2

i

x

1
6

2

3 1yx
(cid:14)

.

3

q

3

2 1yx
(cid:14)

.

4

.

73(cid:14)

.

The lemma follows after using 31 and 33 to ﬁnd the inverse of the transform
B
(cid:14)
73 and using 6 , 8 to simplify the expressions we obtain.

(cid:14) . (cid:14) .

.

(cid:14)

.

(cid:14)

.

(cid:53)(cid:46)(cid:52)(cid:46) (cid:83)(cid:111)(cid:108)(cid:118)(cid:105)(cid:110)(cid:103) (cid:116)(cid:104)(cid:101) (cid:82)(cid:101)(cid:99)(cid:117)(cid:114)(cid:114)(cid:101)(cid:110)(cid:99)(cid:101) (cid:102)(cid:111)(cid:114) (cid:85) (cid:68) (cid:103) (cid:122)
Lemma 25 is the special case of 49 with cs2, ds3, qs1, and psy1. Under
these conditions, s

x sx. Therefore, the general solution simpliﬁes to
.

(cid:14)

.

(cid:14)

(cid:122)

(cid:122)

(cid:105)

(cid:40)

(cid:41)

p, q

`h

2

(cid:14)

x s
.

x

e
x

x

H

0

e DD iq1 b ; t dt.
yt

(cid:14)

.

2

i

(cid:14)

74

.

In 65 h x sU D g
`
2

`

(cid:14)

.

(cid:14)

.

2

z

z

(cid:14)

x, z . So, if we plug 74 into 65 , we ﬁnd

(cid:14)

.

(cid:14)

.

.

U D P x, z s

˜
2
z m

(cid:14)

.

z

x

2
H
x 0

(cid:14)

e y1 DD iq1 b ; t dt.
xyt

.

(cid:14)

.

2

i

In Lemma 25 we have iq1 b s

(cid:14)

.

i

2

.

(cid:14)

iq 2
2

q y

1
6

.

7 iq 2
(cid:14)
12

Q iq2, i . So, if we use 36 ,
.

(cid:14)

.

(cid:14)

0

(cid:50)(cid:52)(cid:56)
31 , and 33 for cs2, we arrive at the ﬁnal result
(cid:14)

.

(cid:14)

.

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

U D P x, z s

˜
2
z m

.

(cid:14)

z

2
x

x

H

0

e y1
xyt

.

(cid:14)

(cid:15)

3
2 1yt
(cid:14)
1

y

4

.

y y

1
3

2
3 1yt
(cid:14)
1
3 x

(cid:14)

q

2 1yx
(cid:14)

.

2

e y1

x

.

q dt

/

1
6

3

.

s

1

3 1yx
(cid:14)
e xy1
6 x

y

.

(cid:14)

Ei 1 yEi 1yx

(cid:14) .

(cid:14)

.

.

,

(cid:14)

75

.

(cid:14)

where Ei 1 yEi 1yx sH
dt. The function Ei x is the exponential integral
function 1 . Next we apply the inversion formulae presented in 26 to ﬁnd
U D P

(cid:14) .
w x
(cid:14) .
z .

et
1
1yx t

.

(cid:14)

.

w

x

2
z m, n

z

(cid:40)

(cid:41)

(cid:122)

.

(cid:14)

(cid:122)

(cid:50)
(cid:122) (cid:109)(cid:44) (cid:110)

(cid:53)(cid:46)(cid:53)(cid:46) (cid:70)(cid:105)(cid:110)(cid:100)(cid:105)(cid:110)(cid:103) (cid:85) (cid:68) (cid:80)
Since the Poisson transform is linear, we need only ﬁnd the inverse of each
summand of 75 . We ﬁnd easily the inverse of the ﬁrst three, by 13 , 14 , and
(cid:14)
.16 . With more work, we ﬁnd the inverse of the other two addends. With a change
of variable ts1y¤, we have
d¤. To ﬁnd the inverse
transform of the function e r 1yx , we may use 19 with csy1. Then,
yx
(cid:14)
applying formulae 21 and 19 with cs1, we arrive at the relation
.

dts H

H
1
1yx
.

ey¤
1 y ¤

e xy 1
x

. (cid:14)

e x
x

et
t

x
0

(cid:14)

(cid:14)

.

(cid:14)

(cid:14)

.

.

˜P
m

1 mq1
6

m

(cid:15)

n

/

1

nq1

(cid:15)

n

(cid:7)
ks0

m

mq1

k

/

With similar ideas we can prove

Q m, k ; x s

(cid:14)

.

0

xy1

e
6 x

(cid:14)

Ei 1 yEi 1yx

(cid:14) .

(cid:14)

.

.

.

76(cid:14)

.

˜P
m

mq1 mq1
3 nq1
(cid:14)

m

.

(cid:15)

n

y

/

m

3 nq1
(cid:14)

.

; x s

1
3 x

e y1 ,
.

x

(cid:14)

and therefore we obtain

Lemma 26.

2U D P

z

z m , n

(cid:14)

z s Q m, n q Q m, n y y
.

(cid:14)

.

.

0

1
3

1

(cid:14)

1
2
1 mq1
6

m

(cid:15)

1
3

n

/

1

nq1

n

/

(cid:15)

mq1 mq1
3 nq1
(cid:14)
.
(cid:15)
m
n

mq1

m

/

(cid:7)
ks0

0

k

.
Q m, k .

(cid:14)

q

m

3 nq1
(cid:14)

y

.

(cid:53)(cid:46)(cid:54)(cid:46) (cid:65)(cid:110)(cid:97)(cid:108)(cid:121)(cid:115)(cid:105)(cid:115) (cid:111)(cid:102) (cid:116)(cid:104)(cid:101) (cid:86)(cid:97)(cid:114)(cid:105)(cid:97)(cid:110)(cid:99)(cid:101)
As a consequence of Lemma 26 and 5 we have the following theorem.

(cid:14) .

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)

Theorem 27.

w

Var A

x

m , nq1

1
2

s Q m, n y Q m, n q Q m, n y

.

.

(cid:14)

2
0

(cid:14)

0

(cid:14)

1

1
4

.

1
3
1 mq1
6

m

(cid:15)

y q

1
12

m

3 nq1
(cid:14)

y

.

n

/

1

nq1

n

(cid:7)
ks0

(cid:50)(cid:52)(cid:57)

n

/

(cid:15)

.

mq1 mq1
3 nq1
(cid:14)
(cid:15)

mq1

m

m

/

0

k

.
Q m, k ,

(cid:14)

where A
elements.

m, n

denotes the number of probes to retrie¤e

v

in a hash table of size m with n

If we use the approximation theorem, Theorem 10, we have the following result

for a table with ns am elements, for ﬁxed 0F a-1 and n, m“ ‘.

Theorem 28.

w

Var A

m , am

x

s

1

4 1y a
(cid:14)
.

2

y qO

1
12

q

1

3 1y a
(cid:14)
.

y

(cid:14)

.

e ay1
3a

y

e ay1
6a

(cid:14)

(cid:15)

/

.

1
m

Ei 1 yEi 1y a
.

(cid:14) .

(cid:14)

.

.

Now, we want to study the asymptotic behavior of the variance for a full table
nsmy1 . We know by 9 the asymptotic behavior of Q m, my1 , and we
(cid:14)
have Q m, my1 sm. Then the only difﬁculty is with the asymptotic expansion of
x
the last summand of Var A
. In this case it is more convenient to work in the
Poisson Model, and so we can use Theorem 24. We are now able to prove

(cid:14) .

m, m

(cid:14)
1

.

(cid:14)

.

w

0

Lemma 29.

my 1

(cid:15)

mq1

/m

1
m

Q m, k

.

my1
(cid:7)
ks0

k

(cid:14)

/

m

mq1

(cid:15)
y qEi 1 y

(cid:14) .

0

g
2

(

1
3

s

ln m

2

q

ln 2
2

2p
m

qO

(cid:15)

ln m
m

/

.

Proof. Since the transform 76 does not depend on m, we can use Theorem 24
for cs1 and Lemma 7 to ﬁnd a local asymptotic expansion around zs1re for the
following generating function:

(cid:14)

.

(cid:14)
A z ’

.

ey(cid:14)1yT (cid:14) z..
1yT z
.
(cid:14)
y2(cid:14)1yT (cid:14) z..

se

(cid:15)

(cid:14)

eT (cid:14) z.y1
.
(cid:14)
T z
1yT z
(cid:7)
(cid:14)
(cid:14)
jG0

Ei 1 yEi 1yT z
(cid:14)

(cid:14) .

(cid:14)

/

.

.

.

.

.

jy1

(cid:14)

Ei 1 yEi 1yT z
(cid:14)

(cid:14) .

(cid:14)

.

.

.

(cid:50)(cid:53)(cid:48)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

1yT z
(cid:14)

(cid:14)

.

.

jy1

(cid:14)

(cid:7)
jG0

Ei 1 yEi 1yT z
(cid:14)

(cid:14) .

(cid:14)

.

.

.

1yT z
(cid:14)

.

.

ky1

(cid:14)

Ei 1 yEi 1yT z
(cid:14)

(cid:14) .

(cid:14)

.

.

.

d z y d z qO d z
(cid:14)
(cid:14)

.

(cid:14)

.

2

(cid:14)

1
3

ky1

3

.

.

/

s

s

s

i

i

(cid:14)

.

(cid:14)

.

.

(cid:14)

(cid:7)
iG0

1yT z
(cid:14)

iy2
.
i!
k y2
i!
is0
k y2
(cid:7) (cid:7)
i!
kG0
is0
= Ei 1 yEi 1yT z
(cid:14)
(cid:14) .
(cid:14)

(cid:7) (cid:7)(cid:15)
(cid:15)

/
/

kG0

(cid:15)

(cid:14)

(cid:14)

(cid:14)

.

i

(cid:15)

2
3

.

.

.

/

s d z y qO d z
(cid:14)

(cid:14)

.

y1

(cid:14)

.

.

Ei 1 yEi 1yT z
(cid:14)

(cid:14) .

(cid:14)

(cid:14)

.

.

.

.

(cid:14)

77

.

From 1, p. 229 , we know that

w

x

Ei z s gqln zq

(cid:14)

.

z n
(cid:7) nn!

nG1

(cid:14)

z)0

.

where g is Euler’s constant, and so, around zs1re we have

Ei 1yT z s gyln

(cid:14)

.

(cid:14)

.

s gyln

s gyln

1

1yT z
(cid:14)

1

1yT z
(cid:14)

1

1yT z(cid:14)

.

.

.

(cid:14)

(cid:15)

q

(cid:7)
nG1

q (cid:7)
nG1

n

.

.

1yT z(cid:14)
nn!

d z y d z qO d z
(cid:14)
(cid:14)

.

(cid:14)

2

1
3

(cid:14)

.
nn!

n

3

.

.

/

qO d z
(cid:14)

(cid:14)

.

.

.

Then, from 77 and 78 we derive

(cid:14)

.

.

A z s d z y qO d z
(cid:14)
(cid:14)

.

(cid:14)

.

y1

(cid:14)

(cid:15)

/(cid:15)

.

.

Ei 1 y gqln

(cid:14) .

1

1yT z(cid:14)

.

qO d z
(cid:14)

(cid:14)

.

.

(cid:14)

2
3

We have now to concentrate in the logarithmic term. By Lemma 7, we know that
the singular expansion of

at zs1re is

1

1y T z(cid:14)

.

1

1yT z
(cid:14)

.

s d z q qO d z s d z
(cid:14)

(cid:14)

.

(cid:14)

.

(cid:14)

.

y1

1
3

y1

.

1qO d z
(cid:14)

(cid:14)

(cid:14)

.

.

.

,

and so

ln

1

1yT z(cid:14)

.

sln d z qln 1qO d z syln d z qO d z
(cid:14)

(cid:14)

.

(cid:14)

.

(cid:14)

.

(cid:14)

.

(cid:14)

(cid:14)

.

y1

.

.

.

(cid:14)

80

.

(cid:14)

78

.

/

.

(cid:14)

79

.

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)
So, by 79 and 80 we ﬁnd that at zs1re

.

(cid:14)

.

(cid:14)

(cid:50)(cid:53)(cid:49)

A z s d z
(cid:14)
(cid:14)

.

.

y1

(cid:14)

Ei 1 y g y d z
(cid:14)

(cid:14) .

.

y1

.

By the deﬁnition of d z , we have

(cid:14) .

ln d z q ln d z qO d z ln d z
(cid:14)

(cid:14)

.

(cid:14)

.

(cid:14)

.

(cid:14)

2
3

.
.
.
81(cid:14)

.

2
3

y1

ln d z y d z
(cid:14)

(cid:14)

.
.
ln 2 1yez

(cid:14)

(cid:14)

.

.

(cid:14)
ln d z

.

s

s

3
ln 1yez

(cid:14)

ln 2
3

q

3

(cid:14)

ln 2 1yez

(cid:14)

(cid:14)

.

.

y d z(cid:14)

y1

.

.

y d z
(cid:14)

.

y1

2
ln 2
2

y

1

’ ’
2 1yez

ln 1yez

(cid:14)

.

2

.

(cid:14)

82

.

Finally by putting 81 and 82 together, we arrive at

(cid:14)

.

.

A z s d z
(cid:14)
(cid:14)

.

(cid:15)

.

y1

(cid:14) .

Ei 1 y gy

ln 2
2
’qO 1yez ln 1yez
.

(cid:14)

(cid:14)

.

y

ln 1yez
.
(cid:14)
’ ’
2 2 1yez

q

ln 1yez

(cid:14)

.

3

/

.

(cid:14)

83

.

We now have to extract the asymptotic information from the coefﬁcients of the
generating function 83 . By Theorem 6 the last addend of 83 carries the
following asymptotic growth from its coefﬁcients:

(cid:14)

.

(cid:14)

.

n!
nq1

n

.

e

(cid:14)

w

z

x
n ’

1yez ln 1yez sO

(cid:14)

.

.

(cid:14)

84

.

If we use the MacLaurin expansion of ln 1yez and the Stirling formula, then

(cid:14)

.

n!
nq1

n

.

e

(cid:14)

w

x

n

z

ln 1yez sye

(cid:14)

.

(cid:15)

n

n
e n!
n
nn

sy

2p
n

qO n
(cid:14)

y3r2

.

.

(cid:14)

85

.

ln n

/n

(cid:15)
(

n

/
nq1
x.

It can also be seen for example 22, p. 64 that

(cid:14)

w

n!
nq1

n

.

e

(cid:14)

w

x

n

z

1

’
1yez

1

1yez

.

ln

(cid:14)

se

(cid:15)

n

nq1

/

n

1
n
4

(cid:14)

2 H yH

2 n

n

.

n
e n!
n
n

’s 2 2 ln 2qln nq g qO

(cid:14)

.

(cid:15)

ln n

/n

.

(cid:14)

86

.

.
The asymptotic result follows from Theorem 24, 10 applied to d z
85 , 86 , and by noticing that ln my1 sln mqO m .
(cid:14) y1.
(cid:14)

. (cid:14)

(cid:14)

.

.

(cid:14)

(cid:14) .y1 (cid:14)

. (cid:14)

.
, 83 , 84 ,
B

Another proof of Lemma 29 based on the Euler]MacLaurin summation forx

mula can be found in 55 .

w

(cid:50)(cid:53)(cid:50)

(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)

From 9 , Theorem 27 and Lemma 29 we have

(cid:14) .

Theorem 30.

w

Var A

m , m

x

s

4y p

8

mq

(

q

181
2160

’
2pm

4

y H q y

m

1
12

(cid:15)

1
9

ln 2
12

y y

(cid:14) .
p Ei 1
48
6

y q

e
3

/

g
6

2p
m

qO

(cid:15)

ln m
m

/

.

(cid:14) .

Comparing with 3 , we have shown that, for a full table, the last-come-ﬁrst-served
heuristic on a linear probing hash table achieves the optimal variance for the
distribution of successful searches, up to lower order terms.

(cid:54)(cid:46) (cid:67)(cid:79)(cid:78)(cid:67)(cid:76)(cid:85)(cid:83)(cid:73)(cid:79)(cid:78)(cid:83) (cid:65)(cid:78)(cid:68) (cid:70)(cid:85)(cid:84)(cid:85)(cid:82)(cid:69) (cid:87)(cid:79)(cid:82)(cid:75)

The main contribution of this paper is the introduction of a new mathematical
transform that we call the Diagonal Poisson Transform. We have presented
important properties of this transform as well as its application to solve some
classes of recurrences, ﬁnd inverse relations, obtain several generalizations of
Abel’s summation formula, and ﬁnd asymptotics. In the process, we have studied
the effect of the LCFS heuristic on the linear probing hashing scheme. We have
proved that, up to lower-order terms, this heuristic achieves the optimal variance
for the distribution of successful searches.

It would be very interesting to ﬁnd new areas that can be studied with the help
of the Diagonal Poisson Transform. This tool seems to be particularly useful when
‘‘Abel-like’’ problems arise. Furthermore, we would like to ﬁnd problems in which
new classes of recurrences, sums, or inverse relations can be studied using it. Other
problems of mathematical interest involve ﬁnding new properties of this transform,
as well as to deﬁne an algebra similar to the Q-algebra deﬁned by Knuth 38 of
the functions that satisfy the Transfer Lemma.

x.

(cid:14)

w

(cid:65)(cid:67)(cid:75)(cid:78)(cid:79)(cid:87)(cid:76)(cid:69)(cid:68)(cid:71)(cid:77)(cid:69)(cid:78)(cid:84)(cid:83)

We thank Philippe Flajolet and Bruce Richmond for suggesting several important
ideas leading to the results proved in Section 5.6. Flajolet also suggested the
approach and indeed some of the technical details of Section 4.6. Hsien-Kuei
w x
Hwang pointed us to Consul’s work 12 . We also thank the creators of Maple 9 .
Most of the formulae we have derived in this paper have been checked with this
system.

w

x

(cid:82)(cid:69)(cid:70)(cid:69)(cid:82)(cid:69)(cid:78)(cid:67)(cid:69)(cid:83)

w x1 M. Abramowitz and I. A. Stegun, Handbook of Mathematical Functions, Dover, New

York, 1972.

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)
w x
.
2 O. Amble and D. E. Knuth, Ordered hash tables, Comput. J., 17 2 , 135]142 1974 .
w x3 R. P. Brent, Reducing the retrieval time of scatter storage techniques, Commun. ACM,

(cid:14) .

(cid:14)

(cid:50)(cid:53)(cid:51)

.
16 2 , 105]109 1973 .

(cid:14) .

(cid:14)

w x4 A. Broder, Two counting problems solved via string encodings,

in Combinatorial
Algorithms on Words, A. Apostolico and Z. Galil, Eds., NATO Advance Science
Institute Series. Series F: Computer and System Sciences, Springer-Verlag, New York,
1985, Vol. 12, pp. 229]240.

w x5 S. Carlsson, J. I. Munro, and P. V. Poblete, On linear probing hashing, unpublished

manuscript, 1987.

w x6 A. Cauchy, Exercises de mathematiques, Paris, 1826, pp. 62]73.
w x7 P. Celis, Robin Hood hashing, Ph.D. thesis, Technical Report CS-86-14, Computer

´

Science Department, University of Waterloo, Waterloo, ON, Canada, April 1986.

w x8 JP. Celis, P.-A. Larson, and J. I. Munro, Robin Hood hashing, 26th IEEE Symposium on

˚

the Foundations of Computer Science, 1985, pp. 281]288.

w x9 B. W. Char, K. O. Geddes, G. H. Gonnet, B. L. Leong, M. B. Monagan, and S. M. Watt,

MAPLE V Reference Manual, Springer-Verlag, New York, 1991.

x10 K. J. Compton and C. Ravishankar, Expected deadlock time in a multiprocessing
w

.
system, J. ACM, 42 3 , 562]583 1995 .

(cid:14) .

(cid:14)

w
x11 L. Comtet, Ad¤anced Combinatorics, Reidel, Dordrecht, 1974.
w
x12 P. C. Consul, Generalized Poisson Distributions. Properties and Applications, Marcel

Dekker, New York, 1989.

x13 M. A. Evgrafov, Analytic Functions, Dover, New York, 1978.
w
w
x14 R. Fagin, J. Nievergelt, N. Pippenger, and H. R. Strong, Extendible hashing}a fast

.
access method for dynamic ﬁles, ACM Trans. Database Syst., 4 3 , 315]344 1979 .

w
x15 P. Flajolet, personal communication, 1995.
w
x16 P. Flajolet, X. Gourdon, and P. Dumas, Mellin transforms and asymptotics; harmonic

(cid:14) .

(cid:14)

.
sums, Theor. Comput. Sci., 144 1]2 , 3]58 1995 .

(cid:14)

.

(cid:14)

w
x17 P. Flajolet, P. Grabner, P. Kirschenhofer, and H. Prodinger, On Ramanujan’s Q-func-

.
tion, J. Comput. Appl. Math., 58 1 , 103]116 1995 .

(cid:14) .

(cid:14)

w
x18 P. Flajolet, D. E. Knuth, and B. Pittel, The ﬁrst cycles in an evolving graph, Discrete

.
Math. 75, 167]215 1989 .

(cid:14)

w
x19 P. Flajolet and A. M. Odlyzko, The average height of binary trees and other simple

.
trees, J. Comput. Syst. Sci., 25, 171]213 1982 .

(cid:14)

x20 P. Flajolet and A. M. Odlyzko, Random mapping statistics, in Ad¤ances in Cryptology,
w
J.-J. Quisquater and J. Vandewalle, Eds., Lecture Notes in Computer Science 434,
Proceedings of EUROCRYPT’89, Houtalen, Belgium, April 1989, Springer-Verlag,
New York, pp. 329]354.

w
x21 J. Flajolet and A. M. Odlyzko, Singularity analysis of generating functions, SIAM J.

.
Discrete Math., 3 2 , 216]240 1990 .

(cid:14) .

(cid:14)

x22 P. Flajolet and R. Sedgewick, The average case analysis of algorithms: complex
w
asymptotics and generating functions, Research Report 2026, INRIA, September 1993.
w
x23 P. Flajolet and R. Sedgewick, The average case analysis of algorithms: counting and

generating function, Research Report 1888, INRIA Rocquencourt, April 1993.

w
x24 G. H. Gonnet and R. Baeza-Yates, Handbook of Algorithms and Data Structure, 2nd ed.,

Addison-Wesley, Reading, MA, 1991.

w
(cid:14) .
25 G. H. Gonnet and J. I. Munro, Efﬁcient ordering of hash tables, SIAM J. Comput., 8 3 ,

x

.
463]478 1979 .

(cid:14)

w
x26 G. H. Gonnet and J. I. Munro, The analysis of linear probing sort by the use of a new

.
mathematical transform, J. Alg., 5, 451]470 1984 .

(cid:14)

(cid:50)(cid:53)(cid:52)
(cid:80)(cid:79)(cid:66)(cid:76)(cid:69)(cid:84)(cid:69)(cid:44) (cid:86)(cid:73)(cid:79)(cid:76)(cid:65)(cid:44) (cid:65)(cid:78)(cid:68) (cid:77)(cid:85)(cid:78)(cid:82)(cid:79)
w
x27 I. P. Goulden and D. M. Jackson, Combinatorial Enumeration, Wiley, New York, 1983.
w
x28 R. L. Graham, D. E. Knuth, and O. Patashnik, Concrete Mathematics, Addison-Wesley,

Reading, MA, 1989.

x29 G. H. Hardy and E. M. Wright, An Introduction to the Theory of Numbers, Oxford
w

University Press, Oxford, 1979.

´

x30 P. Jacquet and M. Regnier, Trie partitioning process: limiting distributions, CAAP’86,
w
Proc. 11th Colloquium on Trees in Algebra and Programming, P. Franchi-Zanetacchi, Ed.,
Nice, France, March 1986, LNCS Vol. 214, pp. 196]210.

x31 P. Jacquet and W. Szpankowski, Ultimate characterizations of the burst response of an
w
interval searching algorithm: a study of a functional equation, SIAM J. Comput., 8,
.
777]791 1989 .

w
x32 P. Jacquet and W. Szpankowski, A functional equation arising in the analysis of
algorithms, Proceedings of the 26th ACM Symposium on the Theory of Computing
.
(cid:14)
STOC May , 780]789 1994 .

w
x33 P. Jacquet and W. Szpankowski, Asymptotic behaviour of the Lempel-Ziv parsing

.
scheme and digital search trees, Theor. Comput. Sci., 144, 161]197 1995 .

w
x34 T. Kløve, Bounds for the worst case probability of undetected error, IEEE Inf. Theory,

. (cid:14)

(cid:14)

(cid:14)

(cid:14)

.

.
41, 298]300 1995 .

(cid:14)

w
x35 D. E. Knuth, The Art of Computer Programming, Vol. 1. Fundamental Algorithms,

Addison-Wesley, Reading, MA, 1968.

x36 D. E. Knuth, The Art of Computer Programming, Vol. 2. Seminumerical Algorithms,
w

Addison-Wesley, Reading, MA, 1969.

w
x37 D. E. Knuth, The Art of Computer Programming, Vol. 3. Sorting and Searching, AddisonWesley,
 Reading, MA, 1973.

x

w
.
38 D. E. Knuth, Analysis of optimum caching, J. Alg. 6, 181]199 1985 .
w
x39 D. E. Knuth, S. Janson, T. Łuczak, and B. Pittel, The birth of the giant component,

(cid:14)

.
Random Struct. Alg., 4, 233]358 1993 .

(cid:14)

w
x40 D. E. Knuth and B. Pittel, A recurrence related to trees, Proc. Amer. Math. Soc., 105,

.
23, 127]130 1986 .

(cid:14)

(cid:14)
.
1989 .

w
x48 P. V. Poblete and J. I. Munro, Last-come-ﬁrst-served hashing, J. Alg. 10, 228]248

w
x49 P. V. Poblete, A. Viola, and J. I. Munro, The analysis of a hashing scheme by a new
transform, 2nd European Symposium on Algorithms, Lecture Notes in Computer Science
434, 1994, pp. 94]105.

w
.
50 S. Ramanujan, Question 294, J. Ind. Math. Soc., 3, 128 1911 .

(cid:14)

x

.
335]349 1989 .

(cid:14)

.
C-24, 943]944 1975 .

(cid:14)

w
x41 D. E. Knuth and G. S. Rao, Activity in an interleaved memory, IEEE Trans. Comput.,

w
x42 D. E. Knuth and A. Schonhage, The expected linearity of a simple equivalence

¨

.
algorithm, Theor. Comput. Sci., 6, 281]315 1978 .

(cid:14)

x43 G. Louchard and W. Szpankowski, Average proﬁle and limiting distribution for a
w
.
phrase size in the Lempel-Ziv parsing algorithm, IEEE Inf. Theory, 41, 478]488 1995 .
w
x44 J. W. Moon, Counting Labelled Trees, Canadian Mathematical Monographs, Montreal,

(cid:14)

1970.

w
x45 A. M. Odlyzko, Periodic oscillations of coefﬁcients of power series that satisfy functional 
equations, Ad¤. Math., 44, 180]205 1982 .
.

(cid:14)

w
x46 F. W. J. Olver, Asymptotics and Special Functions, Academic, New York, 1974.
w
x47 P. V. Poblete, Approximating functions by their Poisson transform, Inf. Process. Lett.,

x

(cid:68)(cid:73)(cid:65)(cid:71)(cid:79)(cid:78)(cid:65)(cid:76) (cid:80)(cid:79)(cid:73)(cid:83)(cid:83)(cid:79)(cid:78) (cid:84)(cid:82)(cid:65)(cid:78)(cid:83)(cid:70)(cid:79)(cid:82)(cid:77)
w
.
51 S. Ramanujan, On question 294, J. Ind. Math. Soc., 4, 151]152 1912 .
w
x52 J. Riordan, Combinatorial Identities, Wiley, New York, 1968.
w
x53 W. Szpankowski, On asymptotics of certain sums arising in coding theory, IEEE Trans.

(cid:14)

(cid:50)(cid:53)(cid:53)

.
Inf. Theory, 41, 2087]2090 1995 .

(cid:14)

w
x54 J. H. van Lint, Introduction to Coding Theory, Springer-Verlag, New York, 1982.
x55 A. Viola, Analysis of hashing algorithms and a new mathematical transform. Ph.D.
w
thesis, Technical Report CS-95-50, Computer Science Department, University of Waterloo,
 Waterloo, ON, Canada, November 1995.

w
x56 H. S. Wilf, generating functionology, Academic, New York, 1994.

