On the Ostensibly Silent ‘W’ in OWL 2 RL(cid:2)

Aidan Hogan and Stefan Decker

Digital Enterprise Research Institute,
National University of Ireland, Galway

firstname.lastname@deri.org

Abstract. In this paper, we discuss the draft OWL 2 RL proﬁle from
the perspective of applying the constituent rules over Web data. In particular,
 borrowing from previous work, we discuss (i) optimisations based
on a separation of terminological data from assertional data and (ii) the
application of authoritative analysis to constrain third party interference
with popular ontology terms. We also provide discussion relating to the
applicability of new OWL 2 constructs for two popular Semantic Web
ontologies – namely FOAF and SIOC – and provide some evaluation
of the proposed use-cases based on reasoning over a representative Web
dataset of approx. 12 million statements.

1 Introduction

As more and more data becomes available on the Web, the Semantic Web movement 
aims to provide technologies which enable greater data-integration and
query answering capabilities than the keyword/document centric models prevalent 
today. The core of these technologies is the Resource Description Framework 
(RDF) for publishing data in a machine-readable format, wherein there
now exist millions of RDF data sources on the Web contributing billions of
statements [9]. The Semantic Web technology stack also includes means to
supplement instance (assertional) data being published in RDF with ontologies 
described in RDF Schema (RDFS) [3] and the Web Ontology Language
(OWL) [23] (terminological data) providing machines a more sapient understanding 
of the information – in particular enabling deductive reasoning to be
performed.

Reasoning over aggregated Web data is useful, for example, (i) to infer implicit
knowledge and thus provide query-answering over a more complete dataset, (ii)
to assert equality between equivalent resources resident in remote documents,
(iii) to ﬂag inconsistencies wherein conﬂicting data is provided by one or more
parties; and (iv) to execute mappings, where they exist, between diﬀerent datamodels 
concerned with the same domain. However, reasoning over Web data is
indeed an ambitious goal with many inherent diﬃculties, the most overt of which

(cid:2) The work presented in this paper has been funded in part by Science Foundation
Ireland under Grant No. SFI/08/CE/I1380 (Lion-2) and by an IRCSET Scholarship.

A. Polleres and T. Swift (Eds.): RR 2009, LNCS 5837, pp. 118–134, 2009.
c(cid:2) Springer-Verlag Berlin Heidelberg 2009

On the Ostensibly Silent ‘W’ in OWL 2 RL

119

are (i) the requirement for near-linear scale in execution and (ii) the requirement
to be tolerant with respect to noisy and conﬂicting data (for a detailed treatment
of noise in RDF Web data, we refer the interested reader to [15]).

With these requirements in mind, in previous work we introduced Scalable
Authoritative OWL Reasoner (SAOR) [16]; we discussed the formulation and
suitability of a set of rules inspired by pD* [24] – to cover a signiﬁcant fragment
of OWL Full reasoning – for forward-chaining materialisation over Web data.
We gave particular focus to scalability and tolerance against noisy Web data
showing that, by applying certain practical restrictions, materialisation over a
diverse Web dataset – in the order of a billion statements – is feasible.

From the scalability perspective, we introduced a separation of terminological
data from assertional data in our rule execution model, based on the premise that
terminological data is the most frequently accessed segment of the knowledge
base and represents only a small fraction of the overall data.

From the Web tolerance perspective, we presented many issues relating to the
eﬀects of noise – which is present in abundance on the Web – on reasoning. We
particularly focused on the introduced problem of “ontology hijacking” wherein
third-party sources redeﬁne or subsume popular Web ontology terms. Our solution 
was to include consideration of the source or “context” of data, and provide
“authoritative analysis” to curtail the privileges of third-parties.

Drawing on our experiences in reasoning over Web data, in this paper we
discuss the new OWL 2 RL draft proﬁle [18]. OWL 2 RL is a fragment of the
new OWL 2 language for implementation within rule-based applications; hitherto,
 there existed only non-standard rule-implementable fragments of OWL reasoning,
 the mostly prominent thereof being Description Logic Programs (DLP)
[11] and pD* [24]. OWL 2 RL extends upon both with a more complete list
of rules, including support for a signiﬁcant fragment of OWL 2 RDF-based
semantics [21].

We subsequently present a number of Web use-cases for new OWL 2 terms
in the context of two popular Web ontologies: Friend Of A Friend (FOAF) [4]
and Semantically Interlinked Online Communities (SIOC) [1,2]; we evaluate our
proposed use-cases based on reasoning over a 12m statement Web dataset.

Speciﬁcally, in this paper we: (i) discuss a separation of terminological data
from assertional data in executing OWL 2 RL/RDF rules; (ii) discuss authoritative 
reasoning over OWL 2 RL/RDF rules; and (iii) present insights and
evaluation on possible deployment of new OWL 2 constructs within two popular
Web ontologies – viz.: SIOC and FOAF.

2 OWL 2 RL vs. SAOR

Before we continue, we recall pertinent high-level discussion relating to our previous 
work on SAOR, and draw parallels to OWL 2 RL (for a more extensive
treatment of SAOR, we refer the interested reader to [16]; a full list of SAOR

120

A. Hogan and S. Decker

rules is available in [16, Table 2]). In doing so, we provide insights into possible
obstacles and optimisations relating to applying OWL 2 RL for materialisation
over an RDF dataset collected from the Web.1 Please note that in Appendix A,
we replicate the OWL 2 RL/RDF rules from [18] and denote certain characteristics 
which we will refer to in this section.

SAOR is designed to accept as input a Web knowledge-base in the form of a
large body of statements collected by means of a Web crawl, and to output inferred 
statements by forward-chaining reasoning according to a tailored fragment
of OWL; input and inferred statements can then be exploited by a consumer application,
 such as for query answering. We identiﬁed three main aspects around
which our system and ruleset is designed and implemented: computational feasibility 
for scalability, reduced output statements such that consumer applications
are not over-burdened, and ﬁnally Web tolerance for avoiding undesirable and
potentially expensive “inﬂationary” inferences caused by noisy Web data.

In this section, we will introduce how our ruleset and implementation is designed 
to adhere to these requirements for Web reasoning, and contrast our
approach with the OWL 2 RL ruleset; we begin by discussing general issues.

2.1 High-Level Issues

Firstly, SAOR ignores inconsistencies in the data; in OWL 2 RL, inconsistencies
are ﬂagged by means of a false inference which indicates that the original input
graph is inconsistent – such rules could additionally be supported in SAOR. In
both cases, the explosive nature of reasoning upon inconsistent data is avoided;
i.e., inconsistencies do not lead to the inference of all possible triples.

Secondly, in SAOR we avoid inventing new anonymous individuals. Such invention 
breaks the upper bound on possible inferable statements from an input
graph – |T|3 where T is the union of the set of RDF terms in the input and
the set of ‘built-in’ terms that appear in the rule consequents – and allows for
the inference of inﬁnite statements. For example, in [24], pD*sv was introduced
which extended pD* with an additional rule based on owl:someValuesFrom:2
?v someValuesFrom ?w ; onProperty ?p . ?u a ?v . ⇒ ?u ?p :b . :b a ?w .
Here, :b is a unique blank-node created for each set of variable bindings from
the rule body. Now, given an input graph where a binding for ?w is a subclass of
the respective binding for ?v, this rule will infer inﬁnite statements; such rules are
excluded from pD*, SAOR and OWL 2 RL due to such eﬀects on termination.
In a related matter, in pD*, blank nodes are allowed in all positions in a form
of partially-generalised triples; literals are not allowed in subject or predicate
positions. Thus, and following RDFS entailment practices [13, Section 7.1], pD*
includes rules which invent so called “surrogate blank nodes” to represent literals
in subject and predicate positions where they would otherwise be disallowed.

1 Although we focus on forward-chaining applications of OWL 2 RL, much of our

discussion has a more general appeal.

2 In this paper, we use preﬁxed names as prevalent in the literature and, following

Turtle syntax, use ‘a’ as a shortcut for rdf:type and ‘(...)’ for RDF lists.

On the Ostensibly Silent ‘W’ in OWL 2 RL

121

Although these blank nodes are formed by a direct mapping from a ﬁnite set
of literals, they still create new terms and thus in SAOR, we opted to allow
literals and blank-nodes in all positions of a triple. This is analogous to the Rule
Interchange Format (RIF) [6] and the OWL 2 RL notion of a generalised triple.
Thus far, OWL 2 RL maintains an upper bound of |T|3 inferred generalised
statements. However, rules dt-type2, dt-eq and dt-diff (Table 1) are based
on an inﬁnite set of literals independent of the input graph. Thus, materialisation 
according to these rules (which are clearly intended for backward-chaining)
would lead to inference of inﬁnite triples. One could curtail such inferences by
omitting the rules or only applying the rules over literals which appear in the
input graph: either would maintain the |T|3 upper bound. Also, rule dt-eq could
be used to infer equivalence between literals and their canonical versions, introducing 
at most |CL| terms where CL is the set of literals in the input with
lexically distinct canons: the upper bound would then be (|CL| + |T|)3.

Continuing, in SAOR we also aim to omit inference of what we term “extended
axiomatic” statements. These include: (i) the set of RDF(S) axiomatic triples [13,
Section 4.1]; (ii) the set of additional OWL axiomatic triples listed for pD* [24,
Table 6]; and (iii) inferences which apply to every RDF term in the graph. For
the latter, we ﬁrstly omit rules which assert membership of rdfs:Resource for
all terms, viz.: RDFS/pD* rules rdfs4a/rdfs4b [13, Section 7.3]. Secondly, we
omit rules which mandate symmetric owl:sameAs inferences for all terms, viz:
OWL 2 RL rule eq-ref (Table 3)3 and pD* rules rdfp5a/rdfp5b [24, Table 6].
Such rules immediately add |T| statements to the graph and could be considered
inﬂationary; they are, perhaps, better suited to backward-chaining support (in
an approach such as [17]) than materialisation.

Indeed, reasoning involving owl:sameAs relations is problematic on the Web:
in [14] we found 85,803 equivalent individuals to be inferable from a Web dataset
through the incongruous values 08445a31a78661b5c746feff39a9db6e4e2cc5cf and
da39a3ee5e6b4b0d3255bfef95601890afd80709 for the prominent inverse-functional
property foaf:mbox sha1sum – the former value is the sha1-sum of an empty string
and the latter is the sha1-sum of the ‘mailto:’ string, both of which are erroneously 
published by online FOAF exporters.4 Thus, in SAOR, we cross-check
the values of inverse-functional properties against a black-list of known noisy
values. Also, we disallow owl:sameAs inferences from travelling to the predicate
position of a triple or to the object position of an rdf:type triple: this is contrary
to rule eq-rep-p in OWL 2 RL, and to the lack of a restriction on rule eq-rep-o
where rdf:type predicates are allowed (Table 5).

Aside from noisy data, na¨ıve materialisation over OWL 2 RL equality rules
eq-ref, eq-sym (Table 3) and eq-trans (Table 6) – which axiomatise the reﬂexive,
symmetric, and transitive nature of owl:sameAs resp. – leads to quadratic growth
in inferences. Again, take for example the 85,803 equivalent individuals we had

3 One important note: rule eq-diff1 requires reﬂexive owl:sameAs statements to ﬂag
inconsistent reﬂexive owl:differentFrom statements; in the absence of the former,
one should support the following rule: ?x :differentFrom ?x . ⇒ false.
4 See, for example http://blog.livedoor.jp/nkgw/foaf.rdf

122

A. Hogan and S. Decker

previously found; na¨ıvely, the OWL 2 RL rules would mandate 85,8032=7.362b
statements to represent the pair-wise equivalences. Also, assuming that each
individual was mentioned in, on average, eight unique statements5, the eq-rep-*
rules would infer 7.362b * 8 = 59b statements, with massive repetition.

Although the above example again relies on noisy Web data, there do exist
valid examples on the Web of large “equivalence chains” of individuals. Again
in [14] we discovered a resource representing a “global user” on the vox.com
blogging platform which exports FOAF data; this global user was identiﬁed by
a blank node and was mentioned in the FOAF proﬁles of all users.6 Thus, in our
crawl we found 32,390 unique resources, in diﬀerent documents, with the valid
value http://team.vox.com/ for inverse-functional property foaf:weblog. Again,
such would lead to the inference of over a billion owl:sameAs statements and
billions more statements in duplicative data.

Taking such considerations into account, in order to avoid an explosion of
repetitious inferences in [14,16] we instead choose a single ‘pivot’ identiﬁer for
identifying equivalent individuals. Thus, we compress repetitive entries into one
single entry; we also store equivalence relations from the pivot element to all
other identiﬁers such that the fully expanded view can be realised by the consumer 
application using backward-chaining techniques.

Finally, there are two cardinality-related rules supported in SAOR for which
no equivalent rule exists in OWL 2 RL; namely rdfc2 (Table 9) and an exactcardinality 
version of cls-maxc2 (Table 6). Their omission relates to the constraint 
that OWL 2 RL documents must also be valid OWL 2 DL documents [22,
Section 2.1] which enforces certain computational guarantees, e.g., for entailment
checking. Thus, the OWL 2 RL ruleset omits exact-cardinality versions of rules
for cls-maxc* and cls-maxqc* (Table 6) and support for minimum-cardinality;
also missing are rules relating to disjoint-union expressions, which could be supported 
analogously to union-of and disjoint-class expressions (resp. cls-duni1
and cls-duni2 in Table 9). More puzzlingly, the ruleset omits support for selfrestriction 
expressions which are supported by OWL 2 DL/EL; the omitted rules
(cls-hs* in Table 9) are reciprocal of those for has-value expressions (cls-hv*
in Table 4); motivation for the omission is missing from the draft documents.7
In terms of Web reasoning, one other notable consequence of enforcing OWL 2
DL restrictions in OWL 2 RL documents is the forbiddance of inverse-functional
datatype-properties [19, Section 9.2.8]: the deﬁnition of such properties is common 
on the Web; examples include foaf:mbox sha1sum and various FOAF chat
ID properties whereby the former is commonly used as a primary means of
identifying foaf:Person members without using URIs.

5 Here, perhaps assuming uniqueness which also considers context.
6 See http://team.vox.com/profile/foaf.rdf for the RDF description of the resource 
with foaf:nick "Team Vox" and, e.g.,
http://danbri.vox.com/profile/foaf.rdf as an example of a user proﬁle, all of
which reference the Team Vox user.

7 We can only conjecture that this is perhaps related to a possible owl:hasSelf emulation 
of an owl:ReflexiveProperty expression which is not supported.

On the Ostensibly Silent ‘W’ in OWL 2 RL

123

In summary, although the OWL 2 RL proﬁle does not introduce new individuals,
 and although sound and complete when applied to a valid OWL 2
RL document, the proﬁle is not immediately suited to application over Web
data. Indeed, a Web reasoner should perhaps consider abandoning completeness
guarantees for a more syntactically permissive, semantically inclusive and practicable 
(albeit, possibly incomplete) approach: e.g., allowing inverse-functional
datatype-properties, including omitted rules as exempliﬁed in Table 9 and curtailing 
quadratic equivalence inferencing on the Web.

2.2 Separating Terminological Data

The main optimisation of SAOR, and indeed the main divergence from traditional 
rules engines, is in considering a distinction between terminological data
and assertional data. Herein, we refer to terminological data as the segment of
the Web crawl which deals with class and property descriptions – using RDF(S)
and OWL terms – that are supported by the given ruleset.

In [16], we showed that <1% of data in our large Web dataset represented terminological 
data; however, this small segment of data is the most frequently accessed 
for reasoning, with most rules including terminological expressions in their
antecedents. For example, the FOAF ontology currently contains 559 triples, the
majority of which we would consider to be terminological; however, there exists
hundreds of millions8 of statements on the Web which use the properties and
classes deﬁned by the former 559 triples. Based on such observations, we optimise 
access to the terminological data; we perform an initial scan of the dataset
and extract terminological statements while building an in-memory hashtable
representation of this information which we call our “TBox”.
In creating an in-memory TBox, for which the terminological information
required by each rule can be accessed in O(1) (in practical terms, considering our
hashtable-based implementation), we signiﬁcantly reduce the implementational
complexity of all rules requiring terminological knowledge. Also, since we only
index <1% of the data, the cost of building the hashtable is relatively low.
In [16], we categorised our rules according to their terminological and assertional
arity; i.e., the amount of patterns in the rule that could be answered by the
TBox and the amount that could not. In particular, we identiﬁed eighteen rules
which required zero or one assertional patterns and thus, could be serviced by
statement-wise scan of the entire (possibly unsorted) dataset.
Take for example the following rule:
?c owl:intersectionOf (?c1 ... ?cn) . ?x a ?c . ⇒ ?x a ?c1, ..., ?cn .
Herein, the terminological patterns serviceable by the TBox are underlined.
To execute this rule, the dataset can be scanned statement-by-statement, with
triples satisfying the ?x a ?c . pattern joined with the TBox; inferred statements 
can be recursively joined with the TBox in the same fashion. Thus, we
can execute such rules using two scans of the unsorted data; the ﬁrst builds the
TBox and the second executes the rules (again, cf. [16] for more detail).

8 E.g., see http://vmlion25.deri.ie/; the ﬁgure could however be in the billions.

124

A. Hogan and S. Decker

However, there exist a number of rules which contain more than one purely
assertional pattern in the antecedent, and thus require execution of joins on the
arbitrarily large ABox – and even worse – exhaustive application on all inferred
ABox triples. Such rules are more expensive to compute and require indexing of a
much larger portion of the data; in [16], we presented means to execute such rules
using static sorted indices; however, such an approach encountered diﬃculties in
achieving termination and is better suited to approximative reasoning. In any
case, we showed that the majority of inferences for our Web dataset were covered
by the set of rules with zero or one assertional pattern (<0.3% of inferences were
found through rules with more than one assertional pattern9). Subsequently,
using the rules with a low assertional arity, we demonstrating reasoning over
1.1b statements, crawled from 665k Web documents, in <16.5 hours.
Following from this, Appendix A lists OWL 2 RL rules in order of increasing
complexity, starting with rules with no antecedent (R0) and ending with rules
with a variable number of assertional patterns (R6-7). In practical terms, rules
in R0-3 present an opportunity for near-linear scale with respect to Web reasoning 
in a system such as SAOR (at least, given observable trends in Web data);
rules in R4-5 require assertional joins (with an upper-bound of ﬁve conjunctive
patterns for rule cls-maxqc4), which are more expensive to compute at Web
scale; rules in R6-7 may present Web reasoners with the daunting task of computing 
arbitrarily-large conjunctive- assertional-patterns – Web reasoners would
probably have to enforce maximally supported lengths for such expressions.

2.3 Authoritative Reasoning

In preliminary work on SAOR, we encountered a puzzling deluge of inferences
from na¨ıve reasoning over a Web dataset. For example, we found that reasoning 
on a single membership assertion of owl:Thing – apparently the “top-level”
concept – caused 4,251 inferences when na¨ıve reasoning was applied to the Web
dataset.10 Again for example, the document http://www.eiao.net/rdf/1.0 deﬁnes 
9 properties to be in the domain of rdf:type [15].11

The problem is more widespread than core RDF(S)/OWL terms; for one membership 
assertion of foaf:Person, na¨ıve reasoning created 4,631 inferences (an
additional 380 inferences on top of owl:Thing) as opposed to the six inferences
mandated by the FOAF ontology. As another example, there are multiple documents 
which declare the class foaf:Image to be an owl:ObjectProperty [15].12
In [16], we termed such third party redeﬁnition of ontology terms “ontology hi-
jacking” and proposed a solution to counter such behaviour based upon analysis
of “authoritative sources” for terminological data:

9 This ﬁgure is, however, increasing with popular usage of transitive properties.
10 E.g., the document

http://lsdis.cs.uga.edu/~{}oldham/ontology/wsag/wsag.owl accounts for 55
such inferences where owl:Thing is a member of 55 union class descriptions.

11 Such usage of owl:Thing is prohibited by the structural syntax of OWL 2 RL [19].
12 E.g., see

http://wiki.sembase.at/index.php/Special:ExportRDF/Dieter_Fensel

On the Ostensibly Silent ‘W’ in OWL 2 RL

125

Deﬁnition 1 (Authoritative Source). A Web document from source (con-
text) c speaks authoritatively about an RDF term n iﬀ:

1. n is a blank node; or
2. n is a URI and c coincides with, or is redirected to by, the namespace of n.

We then deﬁned our notion of an “authoritative rule application” whereby, here
paraphrasing, each Web document satisfying a terminological pattern in the
antecedent must speak authoritatively for at least one term appearing in both
the assertional and terminological parts of the antecedent; e.g., take the rule:

?p rdfs:domain ?c . ?x ?p ?y . ⇒ ?x a ?c .

Here, the term matched by ?p must be authoritatively spoken for by the document 
serving the rdfs:domain triple. Therefore, taking the previous example
where nine domains for rdf:type are non-authoritatively deﬁned, the document
http://www.eiao.net/rdf/1.0 does not speak authoritatively for rdf:type, which
is bound by ?p: thus, no inference takes place.

Of course, we still allow extension of external ontologies, whereby memberships 
of local terms are translated into memberships of remote terms, but not
vice-versa; e.g., for the above rule, authoritative reasoning will still permit a
triple such as ex:sibling rdfs:domain foaf:Person . when served in a location 
authoritative for the ex: namespace, facilitating translation from subjectmembers 
of the local property ex:sibling to the remote class foaf:Person.

Along these lines, Tables 4-9 indicate authoritative variables for the OWL 2
RL rules in bold-face; when enforced, the document(s) serving the terminological
statements must speak authoritatively for at least one binding of an authoritative
variable for the rule to ﬁre.

3 Web Use-Cases

The OWL 2 New Features and Rationale document [10] is intended to provide 
rationale and use-cases for novel OWL 2 features; in particular, the document 
deﬁnes 19 use-cases which motivate new features. However, the document
focuses largely on domain-speciﬁc use-cases, with, e.g., nine use-cases tied to
the Health Care and Life Sciences (HCLS) domain. In this section, we brieﬂy
look at how new OWL 2 features could be exploited on the Web by investigating 
possible pragmatic extensions of two prominent Web ontologies; namely
Friend Of A Friend (FOAF) and Semantically Interlinked Online Communities
(SIOC).

FOAF is a lightweight ontology providing classes and properties for describing
personal information and resources; these terms are amongst the most commonly
instantiated on the Web [9, Table 1&2], with many blogging platforms and social
networks providing automatic exports of user proﬁles in FOAF. SIOC [2], similarly,
 is a lightweight ontology for describing and connecting resources relating

126

A. Hogan and S. Decker

to online social communities and the various platforms for information dissemination 
on the Web; SIOC reuses terms from other Web ontologies, including
FOAF. SIOC terms have more recently seen a large growth in popularity as
large-volume exporters have become available.13

Both ontologies are pragmatically lightweight to foster uptake amongst nonexpert 
communities; we follow such precedent – e.g., we ignore the new disjointunion 
qualiﬁed-cardinality and self-restriction constructs since both FOAF and
SIOC have previously avoided complex class descriptions from the original OWL
speciﬁcation – and select the following novel OWL 2 constructs as possible targets 
for use in FOAF and/or SIOC: (i) IrreflexiveProperty/AsymmetricProperty;
(ii) propertyChainAxiom; and (iii) hasKey.

In order to provide insights into the fecundity of our proposed extensions, we
perform reasoning over a representative Web dataset. We retrieved this dataset
from the Web in April 2009 by means of a Web crawl using MultiCrawler [12]; beginning 
with Tim Berners-Lee’s FOAF ﬁle14, we performed a seven-hop breadth
ﬁrst crawl for RDF/XML ﬁles; after each hop, we extracted all URIs from the
crawled data as input for the next hop. Finally, we restricted the crawl according 
to pay-level-domains; we enforced a maximum of 5,000 crawled documents 
from each domain so as to ensure a diverse and representative dataset.
The crawl consisted of access to 149,057 URIs, and acquired 54,836 (36.8%)
valid RDF/XML documents containing 12,534,481 RDF statements; of these,
3,751,617 statements (29.9%) contain a URI in the FOAF namespace and 782,188
(6.2%) contain a URI in a SIOC namespace.

Property constraints. We now look at asymmetrical/irreﬂexive property con-
straints: we take precedent from the current owl:disjointWith assertions in
FOAF and SIOC which analogously provide simple means of consistency checking.
 Firstly, please note that all asymmetric properties are irreﬂexive. Also,
we only select properties whose irreﬂexivity was not already implicitly constrained 
by disjoint domain/range assertions; we exclude datatype properties,
and, e.g., we exclude workplaceHomepage since the domain (Person) and range
(Document) are disjoint and symmetric or reﬂexive relations thereof would already
be ﬂagged. We chose 6 FOAF properties and 17 SIOC properties as being implicitly 
assymetric/irreﬂexive and one SIOC property as being irreﬂexive alone:
sibling.

Applying these constraints to our Web dataset, we found 319 sioc:link15, 2
foaf:holdsAcccount and 1 foaf:mbox reﬂexive statements. We found no examples
of symmetric statements for the asymmetric properties. Although the results are
less than convincing, the asymmetric/irreﬂexive constraints would constitute a
straightforward extension of the FOAF/SIOC ontologies; please note that for

13 See http://vmlion25.deri.ie/ for a recent survey of the terms in a >1bn statement

Web dataset.
http://www.w3.org/People/Berners-Lee/card

14
15 The textual description of the link property recommends irreﬂexive use [1]. Most
such reﬂexive statements are produced by the SIOC WordPress exporter; e.g., see
http://dowhatimean.net/?sioc_type=site

foaf:depiction

foaf:mbox
foaf:made
sioc:avatar
sioc:email

sioc:creator_of

Thing

On the Ostensibly Silent ‘W’ in OWL 2 RL

127

foaf:Agent

foaf:holdsAccount

foaf:OnlineAccount

(inc. sioc:User)

sioc:topic

foaf:nick

foaf:mbox_sha1sum

sioc:name

sioc:email_sha1

Literal

sioc:Item

sioc:has_container

sioc:Container

sioc:topic

Thing

Fig. 1. FOAF/SIOC property chain translations

authoritative reasoning, these constraints should be provided in the FOAF/SIOC
ontologies for the FOAF/SIOC terms respectively.

Property chains. The owl:propertyChainAxiom allows for deﬁning arbitrarily
long paths which, when present, succinctly infer membership of a single property.
The main use-case we envisage for this construct relates to translating SIOC
attributes attached to an instance of sioc:User into FOAF attributes attached
to foaf:Agent. The FOAF proﬁle deﬁnes a class foaf:OnlineAccount intended to
represent the online presence of a foaf:Agent through the foaf:holdsAccount relation;
 SIOC deﬁnes sioc:User, a subclass of foaf:OnlineAccount, and provides a
more expressive vocabulary for deﬁning and connecting the sioc:User with online
services. Thus, we can translate from the SIOC attributes for sioc:User/foaf:OnlineAccount 
to equivalent FOAF properties with a domain of foaf:Agent or an
encompassing class thereof.

Another possible use-case is to formally realise the informal semantics of
sioc:topic which state that “...a Container will have an associated topic or set
of topics that can be propagated to the Items it contains” [1]: this propagation
can be implemented using OWL 2 property chains.

Figure 1 depicts the envisaged translations.; to take an example, the assertion
foaf:nick :propertyChainAxiom (foaf:holdsAccount, sioc:name) . made in the
FOAF or SIOC ontology would allow for authoritative translation of sioc:name
values attached to sioc:Users into foaf:nick values attached to foaf:Agents.16
Applying the above chains to our dataset, we found 29,617 inferences; viz.:
29,373 foaf:nick, 216 foaf:depiction, 20 foaf:mbox and 8 foaf:mbox sha1sum
statements respectively. Here it seems, the only practically convincing use-case
is the translation of sioc:name values into foaf:nick values, although perhaps
with the growth of online SIOC data, the above ﬁgures may begin to increase.

Complex keys. We examine one last use-case for the new OWL 2 constructs;
namely the owl:hasKey construct which is used to deﬁne a set of properties

16 This translation seems a neat ﬁt: the informal description of foaf:nick states that
it is for values “such as those use [sic.] in IRC chat, online accounts, and computer
logins” [4].

128

A. Hogan and S. Decker

whose values together uniquely identify a member of the speciﬁed class. We
foresee one possible use-case which again lies on the intersection of FOAF and
SIOC: members of foaf:OnlineAccount, and thereby of sioc:User, are uniquely
deﬁned by the properties foaf:accountName and foaf:accountServiceHomepage
together.

Applying the above key to our dataset, we found 4,576,310 non-reﬂexive
:sameAs inferences (only includes inferences from application of prp-key and not
of, e.g., eq-trans) mentioning 78,534 individuals, with the longest equivalence
chain containing 723 individuals. Due to rare usage of URIs for OnlineAccount
members, complex keys are the only solution currently available to uniquely
identify and aggregate such resources.

4 Related Work

Several rule expressible non-standard OWL fragments; namely OWL-DLP [11],
OWL− [7] (which is a slight extension of OWL-DLP), OWLPrime [25] and
pD* [24]; have been deﬁned in the literature and enable incomplete but sound
RDFS and OWL Full inferences.

Some existing systems already implement a separation of TBox and ABox
for scalable reasoning, where in particular, assertional data are stored in some
RDBMS; e.g., Hawkeye [20] demonstrates reasoning over a 166m triple Web
dataset – however, they use a prescribed TBox. Also, like us, they internally
choose pivot identiﬁers to represent equivalent sets of individuals.

Work presented in [5] introduced the notion of an authoritative description
which is very similar to ours; however, we provide much more extensive treatment
of the issue, supporting a much more varied range of RDF(S)/OWL constructs.
One promising alternative to authoritative reasoning for the Web is the notion
of “context-dependant” or “quarantined reasoning” introduced in [8], whereby
inference results are only considered valid (quarantined) within the given context
of a document.

5 Conclusion

In this paper, we have presented discussion relating to applying OWL 2 RL over
Web data. In particular, we discussed a separation of terminological data from
purely assertional data wherein terminological data represents a small fraction
of an overall Web dataset and is the most frequently accessed during reasoning.
 We presented a categorisation of OWL 2 RL rules based on terminological/
assertional arity and discussed the implementational feasibility of said categories.
We also discussed authoritative reasoning, which heeds the source of information
when making inferences, thus countering unwanted third-party contributions. We
identiﬁed those variable positions present in the OWL 2 RL/RDF rules which
should be authoritatively restricted to counter-act ontology hijacking. Finally,
motivated by a lack of Web reasoning discussion in the oﬃcial speciﬁcations, we

On the Ostensibly Silent ‘W’ in OWL 2 RL

129

presented a number of Web use-cases for OWL 2 terms based on two popular
Web ontologies: viz. SIOC and FOAF. Although some of the use-cases were not
convincing when presented with a real Web dataset, we found some practical
deployment for the owl:propertyChainAxiom and owl:hasKey constructs. In any
case, our purview was limited to that of SIOC and FOAF, and we conclude that
new OWL 2 terms may ﬁnd more productive application in other/future Web
ontologies.

References

1. Boj¯ars, U., Breslin, J.G.: SIOC Core Ontology Speciﬁcation (January 2009),

http://rdfs.org/sioc/spec/

2. Breslin, J.G., Harth, A., Bojars, U., Decker, S.: Towards semantically-interlinked
online communities. In: G´omez-P´erez, A., Euzenat, J. (eds.) ESWC 2005. LNCS,
vol. 3532, pp. 500–514. Springer, Heidelberg (2005)

3. Brickley, D., Guha, R.: RDF vocabulary description language 1.0: RDF Schema.

W3C Recommendation (February 2004), http://www.w3.org/TR/rdf-schema/
4. Brickley, D., Miller, L.: FOAF Vocabulary Speciﬁcation 0.91 (November 2007),

http://xmlns.com/foaf/spec/

5. Cheng, G., Ge, W., Wu, H., Qu, Y.: Searching semantic web objects based on class

hierarchies. In: Proceedings of Linked Data on the Web Workshop (2008)

6. de Bruijn, J.: RIF RDF and OWL Compatibility, W3C Working Draft (July 2009),

http://www.w3.org/TR/rif-rdf-owl/

7. de Bruijn, J., Polleres, A., Lara, R., Fensel, D.: OWL

−

. Technical Report WSML

d20.1v0.2 (2005)

8. Delbru, R., Polleres, A., Tummarello, G., Decker, S.: Context dependent reasoning
for semantic documents in Sindice. In: Proc. of the 4th Int. Workshop on Scalable
Semantic Web Knowledge Base Systems (SSWS 2008) (October 2008)

9. Ding, L., Finin, T.: Characterizing the Semantic Web on the Web. In: Cruz,
I., Decker, S., Allemang, D., Preist, C., Schwabe, D., Mika, P., Uschold, M.,
Aroyo, L.M. (eds.) ISWC 2006. LNCS, vol. 4273, pp. 242–257. Springer, Heidelberg
(2006)

10. Golbreich, C., Wallace, E.K.: OWL 2 New Features and Rationale. W3C Working

Draft (2009), http://www.w3.org/TR/owl2-new-features/

11. Grosof, B., Horrocks, I., Volz, R., Decker, S.: Description logic programs: Combining 
logic programs with description logic. In: 13th International Conference on
World Wide Web (2004)

12. Harth, A., Umbrich, J., Decker, S.: Multicrawler: A pipelined architecture for crawling 
and indexing semantic web data. In: Cruz, I., Decker, S., Allemang, D., Preist,
C., Schwabe, D., Mika, P., Uschold, M., Aroyo, L.M. (eds.) ISWC 2006. LNCS,
vol. 4273, pp. 258–271. Springer, Heidelberg (2006)

13. Hayes, P.: RDF semantics. W3C Recommendation (February 2004),

http://www.w3.org/TR/rdf-mt/

14. Hogan, A., Harth, A., Decker, S.: Performing object consolidation on the semantic

web data graph. In: I3: Identity, Identiﬁers, Identiﬁcation Workshop (2007)

15. Hogan, A., Harth, A., Passant, A., Decker, S., Polleres, A.: Weaving the Pedantic

Web. Technical report, DERI Galway (2009),
http://www.deri.ie/fileadmin/documents/DERI-TR-2009-07-28.pdf

130

A. Hogan and S. Decker

16. Hogan, A., Harth, A., Polleres, A.: Scalable Authoritative OWL Reasoning for the

Web. Int. Journal on Semantic Web and Information Systems 5(2) (2009)

17. Luk´acsy, G., Szeredi, P.: Eﬃcient description logic reasoning in prolog: The dlog

system. CoRR, abs/0904.0578 (2009)

18. Motik, B., Grau, B.C., Horrocks, I., Wu, Z., Fokoue, A., Lutz, C.: OWL 2
Web Ontology Language Proﬁles, W3C Candidate Recommendation (June 2009),
http://www.w3.org/TR/owl2-profiles/

19. Motik, B., Patel-Schneider, P.F., Parsia, B.: OWL 2 Web Ontology Language Structural 
Speciﬁcation and Functional-Style Syntax, W3C Candidate Recommendation
(June 2009),
http://www.w3.org/TR/owl2-syntax/

20. Pan, Z., Qasem, A., Kanitkar, S., Prabhakar, F., Heﬂin, J.: Hawkeye: A practical
large scale demonstration of semantic web integration. In: Meersman, R., Tari,
Z., Herrero, P. (eds.) OTM-WS 2007, Part II. LNCS, vol. 4806, pp. 1115–1124.
Springer, Heidelberg (2007)

21. Schneider, M.: OWL 2 RDF-Based Semantics. W3C Candidate Recommendation

(June 2009), http://www.w3.org/TR/owl2-rdf-based-semantics/

22. Smith, M., Horrocks, I., Kr¨otzsch, M.: OWL 2 Web Ontology Language Conformance,
 W3C Candidate Recommendation (June 2009),
http://www.w3.org/TR/owl2-conformance/

23. Smith, M.K., Welty, C., McGuinness, D.L.: OWL Web Ontology Language Guide.

W3C Recommendation (February 2004), http://www.w3.org/TR/owl-guide/

24. ter Horst, H.J.: Completeness, decidability and complexity of entailment for RDF
Schema and a semantic extension involving the OWL vocabulary. Journal of Web
Semantics 3, 79–115 (2005)

25. Wu, Z., Eadon, G., Das, S., Chong, E.I., Kolovski, V., Annamalai, M., Srinivasan,
 J.: Implementing an Inference Engine for RDFS/OWL Constructs and
User-Deﬁned Rules in Oracle. In: 24th Int. Conf. on Data Engineering. IEEE,
Los Alamitos (2008)

A Rule Tables

In this Section, we provide Tables 1-9 for reference (which include all OWL
2 RL rules) presented in Turtle-like syntax; the default namespace refers to
owl:. Rules are categorised according to increasing terminological/assertional
antecedent arity; authoritative variable positions are denoted using bold-face.

Table 1. Rules with no antecedent

R0 : no antecedent
Notes

OWL2RL SAOR Consequent
-
prp-ap
cls-thing
-
cls-nothing -
-
dt-type1
dt-type2
-
-
dt-eq
dt-diﬀ
-

?ap a :AnnotationProperty . For each built-in annotation property
:Thing a :Class .
:Nothing a :Class .
?dt a rdfs:Datatype .
?l a ?dt .
?l1 :sameAs ?l2 .
?l1 :diﬀerentFrom ?l2 .

-
-
For each built-in datatype
For all ?l in the value space of datatype ?dt
For all ?l1 and ?l2 with the same data value
For all ?l1 and ?l2 with diﬀerent data values

On the Ostensibly Silent ‘W’ in OWL 2 RL

131

Table 2. Only terminological antecedent patterns

R1 : only terminological patterns in antecedent

OWL2RL SAOR Antecedent (terminological)
cls-00

rdfc0 ?c :oneOf (?x1 ... ?xn) .

scm-cls

scm-sco

-

-

?c a :Class .

?c1 rdfs:subClassOf ?c2 .
?c2 rdfs:subClassOf ?c3 .

scm-eqc1 -

?c1 :equivalentClass ?c2 .

scm-eqc2 -

scm-op

scm-dp

scm-spo

-

-

-

?c1 rdfs:subClassOf ?c2 .
?c2 rdfs:subClassOf ?c1 .

?p a :ObjectProperty .

?p a :DatatypeProperty .

?p1 rdfs:subPropertyOf ?p2 .
?p2 rdfs:subPropertyOf ?p3 .

scm-eqp1 -

?p1 :equivalentProperty ?p2 .

Consequent
?x1 ... ?xn a ?c .
?c rdfs:subClassOf ?c , :Thing ;
:equivalentClass ?c .
:Nothing rdfs:subClassOf ?c .

?c1 rdfs:subClassOf ?c3 .

?c1 rdfs:subClassOf ?c2 .
?c2 rdfs:subClassOf ?c1 .

?c1 :equivalentClass ?c2 .

?p rdfs:subPropertyOf ?p .
?p :equivalentProperty ?p .
?p rdfs:subPropertyOf ?p .
?p :equivalentProperty ?p .

?p1 rdfs:subPropertyOf ?p3 .

?p1 rdfs:subPropertyOf ?p2 .
?p2 rdfs:subPropertyOf ?p1 .

?p1 :equivalentProperty ?p2 .

?c1 rdfs:subClassOf ?c2 .

?c rdfs:subClassOf ?c1...?cn .
?c1...?cn rdfs:subClassOf ?c .

Table 3. No terminological, but one assertional antecedent pattern

OWL2RL

SAOR Antecedent Consequent Notes

R2 : one assertional antecedent pattern

eq-ref

-

eq-sym
cls-nothing2 -
dt-not-type -

rdfp6

(cid:2)

?s ?p ?o .

?s :sameAs ?s .
?p :sameAs ?p .
?o :sameAs ?o .
?x :sameAs ?y . ?y :sameAs ?x .
?x a :Nothing . false
false
?l a ?dt .

Where ?l is not in the value space of ?dt

scm-eqp2 -

scm-dom1 -

scm-dom2 -

scm-rng1 -

scm-rng2 -

scm-hv

-

scm-svf1 -

scm-svf2 -

scm-avf1 -

scm-avf2 -

scm-int
scm-uni

-
-

?p rdfs:range ?c2 .

?p1 rdfs:range ?c .

?p1 rdfs:domain ?c .

?p1 rdfs:subPropertyOf ?p2 .
?p2 rdfs:subPropertyOf ?p1 .
?p rdfs:domain ?c1 . ?c1 rdfs:subClassOf ?c2 . ?p rdfs:domain ?c2 .
?p2 rdfs:domain ?c .
?p1 rdfs:subPropertyOf ?p2 .
?p rdfs:range ?c1 . ?c1 rdfs:subClassOf ?c2 .
?p2 rdfs:range ?c .
?p1 rdfs:subPropertyOf ?p2 .
?c1 :hasValue ?i ; :onProperty ?p1 .
?c2 :hasValue ?i ; :onProperty ?p2 .
?p1 rdfs:subPropertyOf ?p2 .
?c1 :someValuesFrom ?y1 ; :onProperty ?p .
?c2 :someValuesFrom ?y2 ; :onProperty ?p .
?y1 rdfs:subClassOf ?y2 .
?c1 :someValuesFrom ?y ; :onProperty ?p1 .
?c2 :someValuesFrom ?y ; :onProperty ?p2 .
?p1 rdfs:subPropertyOf ?p2 .
?c1 :allValuesFrom ?y1 ; :onProperty ?p .
?c2 :allValuesFrom ?y2 ; :onProperty ?p .
?y1 rdfs:subClassOf ?y2 .
?c1 :allValuesFrom ?y ; :onProperty ?p1 .
?c2 :allValuesFrom ?y ; :onProperty ?p2 .
?p1 rdfs:subPropertyOf ?p2 .
?c :intersectionOf (?c1 ... ?cn) .
?c :unionOf (?c1 ... ?cn) .

?c1 rdfs:subClassOf ?c2 .

?c1 rdfs:subClassOf ?c2 .

?c1 rdfs:subClassOf ?c2 .

?c1 rdfs:subClassOf ?c2 .

132

A. Hogan and S. Decker

Table 4. At least one terminological and exactly one assertional pattern

R3 : at least one terminological/only one assertional pattern in antecedent

Antecedent

Consequent

(cid:2)

(cid:2)

OWL2RL SAOR

(cid:2)
(cid:2)

terminological
?p rdfs:domain ?c .
?p rdfs:range ?c .
?p a :IrreﬂexiveProperty .
?p a :SymmetricProperty .
?p1 rdfs:subPropertyOf ?p2 .
?p1 :equivalentProperty ?p2 .
?p1 :equivalentProperty ?p2 .
?p1 :inverseOf ?p2 .
?c :intersectionOf (?c1 ... ?cn) .
?c :unionOf (?c1 ... ?ci ... ?cn) .

prp-dom rdfs2
prp-rng
rdfs3
prp-irp
-
(cid:2)
prp-symp rdfp3
(cid:2)
prp-spo1 rdfs7
prp-eqp1 rdfp13a
prp-eqp2 rdfp13b
(cid:2)
prp-inv1 rdfp8a
(cid:2)
rdfc3a
cls-int2
(cid:2)
rdfc1
cls-uni
* ?x :someValuesFrom :Thing ; :onProperty ?p . ?u ?p ?v .
rdfp15
cls-svf2
(cid:2)
rdfp14b
cls-hv1
(cid:2)
cls-hv2
rdfp14a
cax-sco
rdfs9
cax-eqc1 rdfp12a
cax-eqc2 rdfp12b

?x :hasValue ?y ; :onProperty ?p .
?x :hasValue ?y ; :onProperty ?p .
?c1 rdfs:subClassOf ?c2 .
?c1 :equivalentClass ?c2 .
?c1 :equivalentClass ?c2 .

?u a ?x .
?u ?p ?y .
?x a ?c1 .
?x a ?c1 .
?x a ?c2 .

?x a ?c .
?y a ?c .
false
?y ?p ?x .

assertional
?x ?p ?y .
?x ?p ?y .
?x ?p ?x .
?x ?p ?y .
?x ?p1 ?y . ?x ?p2 ?y .
?x ?p1 ?y . ?x ?p2 ?y .
?x ?p2 ?y . ?x ?p1 ?y .
?x ?p1 ?y . ?y ?p2 ?x .
?x a ?c .
?x a ?ci

?x a ?c1...?cn .
?x a ?c .
?u a ?x .
?u ?p ?y .
?u a ?x .
?x a ?c2 .
?x a ?c2 .
?x a ?c1 .

(cid:2)
(cid:2)

Table 5. No terminological, but multiple assertional patterns

R4 : no terminological pattern/multiple assertional patterns

rdfp7
rdfp11

OWL2RL SAOR Antecedent
eq-trans
eq-rep-s
eq-rep-p -
eq-rep-o rdfp11
eq-diﬀ1

(cid:2)
* ?s :sameAs ?s
. ?s ?p ?o .
(cid:2)
. ?s ?p ?o .
?p :sameAs ?p
(cid:2)(cid:2)
(cid:2)
* ?o :sameAs ?o
. ?s ?p ?o .

-

(cid:2)

?x :sameAs ?y . ?y :sameAs ?z .

prp-npa1 -

prp-npa2 -

?x :sameAs ?y ; :diﬀerentFrom ?y .
?x :sourceIndividual ?i1 ; :assertionProperty ?p ;
:targetIndividual ?i2 . ?i1 ?p ?i2 .
?x :sourceIndividual ?i1 ; :assertionProperty ?p ;
:targetValue ?lt . ?i1 ?p ?lt .

Consequent
?x :sameAs ?z .
(cid:2)
?s
?p ?o .
?s ?p
?o .
(cid:2)
?s ?p ?o
.
false

(cid:2)

false

false

On the Ostensibly Silent ‘W’ in OWL 2 RL

133

Table 6. At least one terminological and mulitple assertional patterns

R5 : at least one terminological/multiple assertional patterns in antecedent

OWL2RL SAOR
(cid:2)

prp-fp
prp-ifp
prp-asyp
prp-trp
prp-pdw -

rdfp1
rdfp2
-
rdfp4

prp-adp

cls-com

-

-

cls-svf1

rdfp15

cls-avf

rdfp16

cls-maxc1 -

cls-maxc2 rdfc4b

cls-maxqc1 -

cls-maxqc2 -

cls-maxqc3 -

cls-maxqc4 -

cax-dw

cax-adc

-

-

Antecedent

Consequent

assertional
?x ?p ?y1 , ?y2 .

terminological
?p a :FunctionalProperty .
?y1 :sameAs ?y2 .
?p a :InverseFunctionalProperty . ?x1 ?p ?z . ?x2 ?p ?z . ?x1 :sameAs ?x2 .
?p a :AsymmetricProperty .
?p a :TransitiveProperty .
?p1 :disjointWith ?p2 .
?x a :AllDisjointProperties ;
owl:members (?p1 ... pn) .
?c1 :complementOf ?c2 .
(cid:2) ?x :someValuesFrom ?y ;

?x ?p ?y . ?y ?p ?x .
?x ?p ?y . ?y ?p ?z .
?x ?p1 ?y ; ?p2 ?y .

false
?x ?p ?z .
false
false

?u ?pi ?y ; ?pj ?y .

?x a ?c1, ?c2 .

false

?u ?p ?v . ?v a ?y .

?u a ?x .

:onProperty ?p .

(cid:2) ?x :allValuesFrom ?y ;

:onProperty ?p .
?x :maxCardinality 0 ;
:onProperty ?p .
?x :maxCardinality 1 ;
:onProperty ?p .
?x :maxQualilifedCardinality 0 ;
:onProperty ?p ; :onClass ?c .
?x :maxQualiﬁedCardinality 0 ;
:onProperty ?p ; :onClass :Thing .
?x :maxQualiﬁedCardinality 1 ;
:onProperty ?p ; :onClass ?c .
?x :maxQualiﬁedCardinality 1 ;
:onProperty ?p ; :onClass :Thing .
?c1 :disjointWith ?c2 .
?x a :AllDisjointClasses ;
:members (?c1 ... ?cn) .

?u a ?x ; ?p ?v .

?v a ?y .

?u a ?x ; ?p ?y .

false

?u a ?x ; ?p ?y1 , ?y2 . ?y1 :sameAs ?y2 .

?u a ?x ; ?p ?y .
?y a ?c .

?u a ?x ; ?p ?y .

false

false

?u a ?x ; ?p ?y1 , ?y2 .
?y1 a ?c . ?y2 a ?c .

?y1 :sameAs ?y2 .

?u a ?x ; ?p ?y1 , ?y2 . ?y1 :sameAs ?y2 .

?x a ?c1 , ?c2 .

?z a ?ci , ?cj .

false

false

Table 7. No terminological, but a variable number of assertional patterns

R6 : no terminological pattern/variable assertional patterns

OWL2RL SAOR Antecedent

Consequent

eq-diﬀ2

eq-diﬀ3

-

-

?x a :AllDiﬀerent ; :members (z1 ... zn) .
?zi :sameAs ?zj .
?x a :AllDiﬀerent ; :distinctMembers (z1 ... zn) .
?zi :sameAs ?zj .

false

false

Table 8. At least one terminological and variable assertional patterns

R7 : at least one terminological/variable assertional patterns in antecedent
Consequent

Antecedent

OWL2RL SAOR

terminological

prp-spo2 -

?p :propertyChainAxiom (?p1 ... ?pn) .

prp-key

-

?c :hasKey (?p1 ... pn) .

cls-int1

rdfc3c ?c :intersectionOf (?c1 ... ?cn) .

?u1 ?p ?un+1 .

assertional
?u1 ?p1 ?u2 .
...
?un ?pn ?un+1 .
?x a ?c .
?x ?p1 ?z1 .
...
?x ?pn ?zn .
?y a ?c .
?y ?p1 ?z1 .
...
?y ?pn ?zn .
?y a ?c1 ... ?cn . ?y a ?c .

?x :sameAs ?y .

134

A. Hogan and S. Decker

Table 9. Rules not in OWL 2 RL

ID

SAOR

Rules not in OWL 2 RL

Antecedent

terminological

assertional

cls-minc1 rdfc2 ?x :minCardinality 1 ; :onProperty ?p . ?u ?p ?y .
cls-hs1
?x :hasSelf true ; :onProperty ?p .
?u ?a ?x .
-
?x :hasSelf true ; :onProperty ?p .
cls-hs2
-
?u ?p ?u .
?x :disjointUnionOf (?c1 ... ?ci ... ?cn) . ?y a ?ci .
cls-duni1 -
cls-duni2 -
?x :disjointUnionOf (... ?ci ... ?cj ...) . ?y a ?ci , ?cj . false

Consequent R
R3
?u a ?x .
R3
?u ?p ?u .
R3
?u a ?c .
R3
?y a ?x .
R5

