Reusing Groupware Applications 

Sergio F. Ochoa1, Luis A. Guerrero1, José A. Pino1, and César A. Collazos2 

1 Department of Computer Science 

Universidad de Chile 

Blanco Encalada 2120, Santiago, Chile 

{nbaloian,pgaldame,luguerre}@dcc.uchile.cl 

2 Department of Systems 
Universidad del Cauca 

FIET-Sector Tulcan, Popayán, Colombia 
{ccollazo}@unicauca.edu.co 

Abstract. Many groupware applications have been developed and continue being 
 developed  over  white-box  groupware  platforms.  These  platforms  have 
brought  important  contributions  to  the  development  of  groupware  systems. 
However, the lack of compatibility among these platforms is limiting the portability 
 of  such  solutions.  This  paper  presents  a  middleware,  which  allows  to 
improve the portability of new and legacy groupware applications supported by 
white-box platforms. The middleware translates a set of functionalities provided 
by the groupware platforms to a set of common groupware services used by the 
applications.  These  services  provide  groupware  support  and allow to improve 
the portability of groupware systems. A prototype of the proposed middleware 
has been tested and the interim results are encouraging.  

1   Introduction 

Concepts  like  portability  and  reuse  of  components  and  designs  have  already  been 
accepted  and  promoted  by  the  software  industry  [1,  6].  The  main  advantage  is  the 
reduction in the development time and cost. In addition, an improvement in quality of 
the final product can be expected because of the reuse of mature designs and software 
components. These results have motivated the software industry to move towards the 
reuse of adaptable solutions that use standard interfaces, since they are easy to scale, 
update, and replace. Although reuse of solutions brings important advantages for the 
software industry, it also requires a high level of product standardization. Portability 
is  poor  in  the  case  of  groupware  systems,  specifically,  applications  supported  by 
white-box groupware platforms. White-box groupware platforms, such as Coast [12], 
Groupkit [7] and TWiki [5], provide through the server, a set of classes or services 
implementing  typical  concepts  of  the  groupware  area,  such  as  floor  control,  shared 
repository and session management. These services are not compatible among different 
platforms, because of the lack of standards in the groupware area. Therefore, applications 
using these services are not easy to reuse.  

Many  organizations  have  spent  important  efforts  on  developing  and  inserting 
groupware  applications  to  support  vital  parts  of  their  functionality  (e.g.  workflows, 
discussion  forums  or  messaging  systems).  Lack  of  portability  of  their  groupware 
applications  forces  organizations  to  avoid  or  delay  the  change  of  such  supporting 

G.-J. de Vreede et al. (Eds.): CRIWG 2004, LNCS 3198, pp. 262–270, 2004. 
© Springer-Verlag Berlin Heidelberg 2004 

Reusing Groupware Applications      263 

platforms.  This  would  mean  the  re-development  of  the  current  applications,  the  retraining 
of the employees and the migration of the information. 

This  paper  presents  a  middleware  component,  called  GPC  (Groupware  Platform 
Compatibility),  which  acts  as  an  intermediary  between  groupware  applications  and 
white-box  groupware  server  platforms.  GPC  homogenizes  the  main  groupware  services 
required by applications and hides the differences among white-box groupware 
platforms.  

Next  section  describes  the  groupware  concepts  that  could  be  used  by  groupware 
applications  in  order  to  provide  collaborative  functionalities.  Section  3  presents  related 
work about portability of groupware solutions. Section 4 presents the main components 
of the GPC middleware. This section also shows how to work GPC and the 
restrictions required for using it. Sections 5 and 6 present the interim results, the conclusions 
and future work. 

2   Groupware Services 

Guerrero  et  al.  have  defined  nine  basic  concepts  (or  patterns)  which  are  eventually 
present  in  a  groupware  system  to  be  supported  by  server  platforms  [8].  These  concepts 
are: sessions, users, roles, messages, objects, repositories, views, environments 
and  floor  control.  The  sessions  (also  called  work  sessions,  groups,  or  conferences) 
maintain information about the users who interact in an asynchronous or synchronous 
way through a groupware application. The users (or collaborators) are the members of 
the work group. Every user can have specific access rights according to his/her role. 
Users send Messages (notifications or events) to communicate. Application modules 
also  send  messages  for  the  same  purpose.  Objects  (meta-objects or information ob-
jects)  are  information  about  object  instances  produced  by  the  users  during  group 
work. Most of the time, it is needed to store object attributes, which is information 
about  the  work  object  (or  meta-information),  such  as  the  owner  of  the  object,  the 
creation date and time, and previous versions. The objects are stored in repositories 
and it is possible to see a portion of a repository by using various views. The environments 
organize and coordinate multiple working sessions, or multiple user groups 
working  on  the  same  groupware  applications.  They  also  allow  sharing  groupware 
applications among many user groups. The floor control policies define the strategies 
used to manage the shared resources.  

Table 1. Common features in white-box groupware platforms. 

Coast  GroupKit  Habanero  JSDT  MetaWeb  TOP  TWiki 

X 
X 
 
X 
X 
X 
X 
X 
X 

X 
X 
X 
X 
 
 
 
X 
 

X 
X 
 
X 
X 
 
 
X 
X 

X 
X 
 
X 
X 
X 
 
X 
X 

X 
X 
 
X 
X 
X 
X 
X 
 

X 
X 
X 
X 
X 
X 
X 
X 
X 

X 
X 
 
X 
X 
X 
 
X 
X 

Features 
Sessions 

Users 
Roles 

Messages 
Objects 

Repositories 

Views 

Floor Control 
Environments 

