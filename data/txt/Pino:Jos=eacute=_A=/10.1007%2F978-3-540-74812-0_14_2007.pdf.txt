Designing Mobile Shared Workspaces for Loosely 

Coupled Workgroups 

Andrés Neyem, Sergio F. Ochoa, and José A. Pino 

Department of Computer Science, Universidad de Chile. 

Blanco Encalada 2120, Santiago, Chile 

{aneyem,sochoa,jpino}@dcc.uchile.cl  

Abstract.  Recent  advances  in  mobile  computing  devices  and  wireless 
communication have brought the opportunity to transport the shared workspace 
metaphor to mobile work scenarios. Unfortunately, there are few guidelines to 
support  the  design  of  these  mobile  shared  workspaces.  This  paper  proposes  a 
design  process  and  several  guidelines  to  support  the  modeling  of  these 
groupware  systems.  Particularly,  workspaces  that  support  loosely  coupled 
workgroups.  The  process  and  guidelines  are  based  on  a  literature  review  and 
authors’ experience in the development of mobile shared workspaces.  

Keywords:  Mobile  shared  workspaces,  groupware  design  guidelines,  loosely 
coupled work. 

1   Introduction  

Shared  workspaces  aim  at  supporting  cooperative  tasks.  They  provide  users  with  a 
virtual space in which information can be shared and exchanged. Usually, these tools 
are  focused  on  information  sharing  in  the  sense  of  cooperative  authoring, 
commenting,  and  annotating  shared  documents  as  a  group  activity  [35].  Besides, 
shared  workspaces  allow  users  to  perform  specific  tasks  and  to  interact  with  other 
users.   

Shared workspaces are intended to increase the users’ joint productivity. A number 
of studies and projects have shown that workspaces are also valuable for distributed 
collaboration [12], [35]. Typically, these groupware applications consider distributed 
users communicated by a wired network. 

Advances  in  mobile  computing  devices  and  wireless  communication  have  allowed 
transporting  the  shared  workspace  metaphor  to  mobile  work  scenarios.  In  such  a 
scenario, a group of mobile workers are on the move to carry out the assigned activities. 
Workers  in  these  groups  are  weakly  dependent  on  each  other  and  they  can  function 
autonomously;  often  they  do  so  without  the  need  for  immediate  clarification  or 
negotiation with other workers. Examples of this work setting include health care [19], 
[30], construction management [32], m-Learning [36] and disaster relief [7], [26].  

Since physical location is a changing dimension in mobile work, it is difficult for 
mobile  workers  to  stay  aware  of  others’  locations  and  availabilities  in  order  to 
communicate  and  coordinate  work  [28].  In  addition,  the  frequent  disconnections  of 

J.M. Haake, S.F. Ochoa, and A. Cechich (Eds.): CRIWG 2007, LNCS 4715, pp. 173–190, 2007. 
© Springer-Verlag Berlin Heidelberg 2007 

174 

A. Neyem, S.F. Ochoa, and J.A. Pino 

wireless  networks  make  difficult  to  use  centralized  resources  and  ensure  the  users 
reachability [23]. These features make the solutions designed for shared workspaces 
in  fixed  settings  unsuitable  for  mobile  work  scenarios  [18].  This  new  collaboration 
setting  brings  interesting  design  and  implementation  challenges  to  groupware 
developers [18], [23], [28]. 

This  paper  presents  a  process  and  a  set  of  guidelines  to  support  the  design  of 
mobile  shared  workspaces  (MSW).  Particularly,  the  proposals  deal  with  supporting 
loosely  coupled  work  by  a  mobile  group  of  people.  The  process  and  guidelines  are 
based on a literature review and authors’ experience in the development of MSW and 
frameworks for mobile groupware. 

Next section deals with the loosely coupled work and the requirements involved in 
the  design  of  shared  workspaces  for  such  a  setting.  Section  3  presents  the  related 
work. Section 4 describes the design process, the major activities and the guidelines to 
cope  with 
the  software  requirements  and  constraints.  Section  5  provides 
recommendations  to  implement  the  design  aspects  of  a  MSW.  Finally,  section  6 
presents the conclusions and further work. 

2   Loosely Coupled Work  

Loose coupling often occurs when it is difficult for workers to communicate directly, 
and  a  common  reason  for  this  is  the  physical  distribution  of  workers  across  a  wide 
distance [29]. Gutwin et al. [12] describe coupling as “the amount of work that one 
person  can  do  before  they  require  discussion,  instruction,  action,  information,  or 
consultation with another”. Pinelle et al.  [29] state that loosely coupled work is work 
in which people need to be aware of others’ activities and decisions, but without the 
need  for  immediate  clarification  or  negotiation.  The  work  can  proceed  in  parallel.  
Loose coupling then is a style of collaboration that occurs in groups, and implies that 
workers can function in a somewhat autonomous fashion without reliance on ongoing 
interaction  with  others.  In  order  to  illustrate  the  main  requirements  involved  in  this 
kind  of  workgroups,  two  work  scenarios  adhering  to  similar  settings  are  briefly 
described below. 
(cid:131)  Healthcare  Services:  Recently,  home  care  has  become  an  important  part  of 
healthcare organizations since it is cost-effective and it is preferred by patients over 
hospital and nursing home stays [6], [30]. In home care, healthcare workers deliver 
services  to  patients  in  their  homes.  Each  patient  is  typically  treated  by  a  team  of 
people,  including  therapists,  nurses,  social  workers,  and  home  health  aides. 
Workers are mobile and work out of different locations. They spend most of the day 
in  the  community  and  may  only  spend  minimal  time  in  the  office,  so  informal 
communication is rare, and formal communication may be difficult to arrange due 
to schedule variability within the team. When communication does occur, it is often 
limited  to  a  small  subset  of  the  treatment  team,  even  though  all  team  members 
might benefit from involvement. This fragmentation in communication can lead to 
difficulties  in  coordinating  care  plans  and  in  planning  shared  outcomes.  Shared 
mobile workspaces running on tablet PCs or PDAs can be used by healthcare team 
members to supervise and update the status of a patient’s health treatment or his/her 
medical record. Furthermore, the shared workspace status can be replicated in the 

 

Designing Mobile Shared Workspaces for Loosely Coupled Workgroups 

175 

mobile computing devices of the people in charge of taking care of such patients. 
Doctors meeting to analyze a complex case need to access all the patient’s health 
information  and  also  information  of  similar  cases  in  order  to  make  the  best 
decisions.  The  decisions  and  their  consequences  should  also  be  recorded  in  the 
MSW of the healthcare team in order to keep track of the patient’s treatment or to 
be used as a guideline in future similar cases. 

(cid:131)  Building and Construction: Typically each construction site has a main contractor, 
which outsources several parts of the construction project, e.g. electrical facilities, 
gas/water/communication networks, painting and architecture. Some of these subcontracted 
companies work during the same time period and they need to know the 
advances of each other in order to plan the execution of pending work. In addition, 
periodically all these companies should report the advances to the main contractor, 
which  is  in  charge  to  coordinate  the  efforts  of  the  sub-contracted  companies.  For 
example, electrical engineers (mobile workers) belonging to a company need to be 
on the move in order to inspect and record the status of the electrical facilities being 
developed by the company employees at a construction site. During the inspection, 
each  engineer  revises  various  parts  of  the  physical  infrastructure  and  records  the 
advances  on  a  MSW,  running  on  the  tablet  PC.  After  the  inspection  and  before 
leaving  the  construction  site,  the  engineers  synchronize  the  used  workspaces  in 
order to get a whole view of the work status for such site (or project). If they detect 
incomplete  or  contradictory  information,  some  of  them  can  inspect  the  facilities 
again in order to solve such case. Before leaving the construction site, an electrical 
engineer shares the updated information with a main contractor’s employee, who is 
in charge of keeping track of the construction project updates. Typically no wireless 
communication support is available at the construction site; however it should not 
be a limitation for collaboration. 

In both scenarios, mobile team members do not know the set of work environments 
that  will  be  involved  and  their  features.  Since  these  work  settings  must  support 
collaboration, we have to assume the worst case. Typically, this worst case considers 
a  work  environment  where  no  communication  support  is  available;  therefore  the 
mobile  groupware  solution  has  to  provide  it.  Team  members  have  to  do  loosely 
coupled  work  in  such  work  setting.  Pinelle  and  Gutwin  [28]  identified  four 
characteristics of loosely-coupled work that allow workers to cope with many of the 
uncertainties  of  wide  area  mobile  networks,  and  that  make  workers  resilient  to  the 
difficulties these uncertainties introduce in mobile groupware design: 

1)  Workers  are  autonomous  and  partition  work  so  that  the  need  for  ongoing 

coordination and planning is minimized. 

2)  Artifacts and data are, in most cases, clearly owned by specific workers, so the 

need for negotiation and coordination of access is minimal. 

3)  Workers  are  rarely  synchronous,  so  they  rely  on  asynchronous  means  for 

gathering awareness information, which allows them to tolerate delays.  

4)  Workers carry out most of their explicit communication asynchronously, and are 

able to tolerate the delays inherent in these exchanges.  

Although the lack of communication support is usually the  main reason to adopt 
loosely coupled work, there are several factors that also contribute to this [28], [29]: 
uncertainty  in  the  work  environment  that  requires  rapid  adaptation  by  work  units,  

176 

A. Neyem, S.F. Ochoa, and J.A. Pino 

unpredictable tasks that are difficult for managers to monitor and evaluate, employees 
that  are  professionals  or  that  have  a  high  level  of  knowledge  specialization,  and 
barriers that interfere with routine collaboration (e.g. physical distribution, mobility, 
and  schedule  variability).  Next  section  describes  the  requirements  that  need  to  be 
addressed by groupware applications in order to support loosely coupled work. 

2.1   Requirements to Support Loosely Coupled Work  

The loosely coupled work supported by mobile computing devices represents a new 
trend  in  CSCW,  therefore  few  studies  are  available.  This  section  presents  the 
requirements  that  should  be  considered  when  designing  a  MSW  to  support  loosely 
coupled work, based on such studies and the authors’ experience. These requirements 
are just those derived from the type of work to support and the features of the work 
and activity contexts [1]: 
Discretionary  Collaboration.  The  autonomy  of  the  mobile  workers  seen  in  loosely 
coupled mobility  means that  collaboration with others is (in  most cases) not strictly 
required; instead, workers engage in collaboration when they decide that it is valuable 
to do so.  Since the collaboration processes are sporadic, the team members carry out 
individual work most of the time [28]. 
Autonomy.  Given  the  team  members’  dynamic  local  work  context  and  the  high 
probability  of  network  disconnections,  mobile  workers  need  to  be  autonomous  
(at least) in term of the software services and information required to do the assigned 
work [23], [28]. 
On-demand information sharing. Workers need to share and synchronize information 
on-demand [26], [29]. When information maintained by a worker is shared with the 
rest  of  the  team,  the  sharing  should  be  at  the  worker’s  discretion  so  that  they  can 
selectively protect information. 
On-demand  information  synchronization.  Since  several  mobile  workers  perform  the 
activities  autonomously  and  in  parallel,  they  need  instances  for  information 
synchronization. Typically this synchronization process is on-demand, and it could be 
attended or unattended [26], [28]. 
Low coordination cost. Tasks are often strongly partitioned among workers and this 
partitioning  minimizes  coordination  demands  and  it  allows  workers  to  work 
autonomously  and  in  parallel  [28].  Ideally,  the  coordination  process  should  be 
unattended [26]. 
Context-aware. Mobile workers are able of adapting themselves to the work context 
they encounter locally [6]. Synchronous and asynchronous awareness mechanisms are 
required to support coordination processes and collaborative work. The synchronous 
mechanisms are required to indicate the availability for interactions of team members. 
On  the  other  hand,  since  workers  have  few  direct  interactions  with  each  other, 
awareness information is not usually as readily available as it is in synchronous work 
situations.  Instead,  workers  attempt  to  maintain  an  awareness  of  others  not  by 
observing  them  directly,  but  by  collecting  evidence  of  others’  past  activities  [28], 
[29].  This  means  that  delays  are  inherent  in  retrieving  awareness  information; 
however, workers are still able to function with these limitations. 

 

Designing Mobile Shared Workspaces for Loosely Coupled Workgroups 

177 

2.2   Requirements for Mobile Shared Workspaces  

Mobile  shared  workspaces  allow  mobile  workers  to  interact  with  other  people  or 
systems  in  an  ad-hoc  way  (like  a  plug  &  play  mechanism),  adapting  themselves 
depending on the context information [33]. Each MSW represents the portion of the 
office  (information  and  services)  which  is  available  to  a  mobile  worker  through  a 
mobile  computing  device.  It  allows  people  to  work  almost  any-time  and  any-place, 
and it is expected to have a positive impact on productivity and quality of work.  

Mobile collaboration supported by these workspaces is highly diverse and there is 
a large variety of work scenarios where the main feature of interaction among workers 
is  loose  coupled.  We  can  identify  two  types  of  mobile  collaboration  related  to  this 
kind  of  interaction:  foreseen  and  unforeseen.  The  first  type  occurs  when  workers 
follow an anticipated collaboration process: a process that has been considered during 
the  workspace  design.  For  example,  this  collaboration  type  is  present  in  the 
construction  management  scenario  described  above,  when  engineers  meet  after  an 
inspection  to  integrate  annotations  and  detect  inconsistencies.  In  this  foreseen  case, 
the users’ collaboration needs are considered in the design of the common workspace. 
On the other hand, unforeseen collaboration can be done by a structural engineer 
belonging  to  the  company  A  when  s/he  shares  information  about  the  inspection 
process  with  personnel  from  the  main  contractor  or  with  electrical  engineers 
belonging to company B. These persons are not able to use a different workspace to 
interact  with  employees  of  the  various  companies  working  at  the  construction  site. 
Therefore, the mobile shared workspaces need to provide mechanisms to support this 
unforeseen  collaboration.  In  addition  to  the  requirements  presented  in  the  previous 
section,  we  can  state  the  following  requirements  for  MSW  design  derived  from 
computer-supported mobile collaborative work:   

Lightweight.  The  definition  of  the  type  of  computing  device  running  the  shared 
workspace depends on the type of  workers’  mobility. For  the case of high  mobility 
(e.g., traveling salesmen, nurses in a hospital, engineers inside a construction site or 
children  in an outdoors educational environment),  issues such as device  weight and 
size may acquire high relevance [1], [11]. The workers’ mobility is inversely related 
to  the  size  and  computing  capability  of  the  mobile  devices  required  to  support  the 
loosely coupled work. It has a direct influence on the usability of the solution. 
Deployment  ease.  An  important  factor  is  the  speed  of  having  the  device  ready  to 
operate.  A  quick  boot-up  time  will  let  workers  productively  use  death  times. 
Applications  –  in  particular,  these  workspaces  –  should  also  self-configure 
automatically after boot-up [26]. 

Self-configurability.  Mobile workers  do  not  need  to  be  aware  of  most  work  context 
changes, particularly, communication issues [1], [6], [26]. The workspaces have to be 
automatically  self-configured  in  order  to  allow  a  mobile  worker  to  interact  with 
reachable  partners  no  matter  the  network  setting  issues.  It  is  particularly  required 
when unforeseen collaboration needs to be supported. 

Interoperability in terms of information and services. This requirement is relevant if 
the  shared  workspace  must  support  unforeseen  collaboration.  Since  mobile  workers 
from various organizations may need to do casual or opportunistic interactions, data 

178 

A. Neyem, S.F. Ochoa, and J.A. Pino 

and  services  formats  should  be  standardized  to  ensure  interoperability  [23],  [26]. 
Thus, receivers will be able to understand the information or services they get. 

Sessions management support. The sessions (also called collaborative sessions, work 
sessions,  work  groups,  or  conferences)  maintain  information  about  the  users  who 
interact by using a MSW. Session management is necessary to deal with the work of 
team members, assign roles and support coordination processes [10], [25]. 

Users  management  support.  The  collaborators  are  the  members  of  one  or  more 
sessions. Every user maintains personal information (such as username, password, full 
name,  etc.)  and  s/he  can  have  specific  access  rights  over  the  shared  resources 
according to her/his role [10], [25]. Users have an identifier that allows workspaces to 
make effective the users’ rights. 

Roles  support.  Not  all  users  have  the  same  rights  to  access  shared  resources  (e.g. 
shared information, message delivery channels). The rights are related to the role each 
user  has  for  each  session  s/he  is  working  on  [10],  [25].  Typically  these  rights  are 
related to the user capability to carry out certain operations (e.g. erase, view, modify 
and recover information) or processes on the shared resources (e.g. backup, message 
delivery). 

Environments support. The environments organize and eventually coordinate multiple 
working sessions or user groups [25]. They can also provide general functionality for 
a  shared  workspace,  such  as:  file  transfer,  message  delivery,  peer  detection  and 
user/sessions awareness. 

Private  and  shared  repositories.  Users  produce  information  as  a  result  of  the 
individual and collaborative work [23], [26]. It can be shared to other users or kept 
private,  depending  on  its  type.  The  private  (or  local)  repository  stores  the  private 
information and the shared repository stores the information the user wants to share. 
The rights to access the shared repository depend on the assigned role.  

Asynchronous  communication.  The  mobility  and  autonomy  of  workers  and  the 
frequent  network  disconnections  make  it  difficult  to  achieve  synchronization,  so 
synchronous 
support 
coordination/collaboration  in  these  settings  [23],  [28].  Typically  when  synchrony  is 
required, it can be by short time periods and it has to be simulated using asynchronous 
communication.  

communication 

not 

is 

a 

good 

option 

to 

Synchronous/asynchronous  interaction  support.  Workers  show  a  preference  for 
asynchronous  interaction  techniques  since  it  allows  them  to  deal  with  schedule  and 
location variability. Most user interaction is asynchronous [26], [28]. However, there 
are a few interactions needing information synchronization or peer detection process.  

It  is  possible  to  group  the  requirements  defined  in  section  2.1  and  2.2  in  the  three 
typical  categories  of  requirements  for  software  systems:  functional,  quality  and 
constraint.  Functional  requirements  indicate  what  the  software  has  to  do.  Quality 
requirements  indicate  the  criteria  to  accomplish  by  the  software  functionality. 
Constraint  requirements  establish  the  present  constraints  when  the  software  is 
running. Next table summarizes and categorizes these requirements. 

 

 

Designing Mobile Shared Workspaces for Loosely Coupled Workgroups 

179 

Table 1. Requirements for mobile shared workspaces 

Functional Requirements 

Quality Requirements 

Autonomous 
Discretionary collaboration 
On-demand information sharing 
Context-aware 
On-demand information synchronization  Easy to deploy 

Session/Users management 
Roles support 
Environment support 
Private and shared repositories 
Synchronous/asynch. interaction support 

Self-configurable 
Interoperable 
 
 
 

Constraint 
Requirements 
Low coordination cost 
Lightweight 
Asynchronous 
communication 
 
 
 
 
 

This set of general requirements imposes design challenges to developers of MSW. 
There are several other issues to consider in the design of these workspaces, such as, 
social  aspects  related  to  the  users,  readiness  to  use  technology  and  specific 
requirements  of  the  activity  to  be  supported  by  the  workspace.  These  additional 
requirements  have  not  been  considered  in  this  stage,  in  order  to  keep  the  problem 
complexity manageable. We plan to work on them in the future. 

3   Related Work 

Although there is a large number of documented experiences on the design, use and 
impact of workspaces for fixed scenarios  [4], [12], [13], [35], there are no in-depth 
studies about the design, use and impact of mobile shared workspaces [3], [32]. Most 
known  studies  are  focused  on  identifying  work  scenarios  where  mobile  technology 
can add value [11], [21], [27], [32].  

There  is  an  interesting  initiative  to  improve  the  groupware  design  process  for 
loosely  coupled  groups  for  the  healthcare  sector  [29],  [30].  The  authors  describe  a 
contextual  model  for  this  workplace,  and  they  provide  some  general  guidelines  for 
developing groupware applications that support loosely coupled work practices, such 
as managing clinical documentation, planning treatments, and scheduling visits with 
patients.  These  guidelines  are  focused  on  creation  of  asynchronous  groupware 
systems that use a client-server architecture; therefore they provide a limited support 
for  fully-distributed  work  environments.  Nonetheless,  the  requirements  identified  in 
these two works are highly relevant in the design of MSW.     

On the other hand, there are several experiences reporting the use of collaborative 
mobile applications [2], [14], [33], [34], [36]. Although some of these applications are 
fully-distributed, they do not describe or analyze the strategies used to deal with the 
requirements identified in section 2. Therefore, the potential design solutions cannot 
be  evaluated,  formalized  through  design  patterns  or  reused  in  future  application 
developments.  

One  of  the  most  related  works  was  done  by  Jørstad  et  al.,  who  studied  the 
feasibility  of  developing  generic  coordination  services  in  a  distributed  (but  stable) 
work  scenario  [17].  They  concluded  generic  coordination  services  definition  is 

180 

A. Neyem, S.F. Ochoa, and J.A. Pino 

feasible  and  they  developed  a  model  that  was  mapped  to  a  Service  Oriented 
Architecture.  The  generic  coordination  services  they  defined  included  Locking, 
Presentation  Control,  User  Presence  Management,  Organization  Management  and 
Communication Control. These services were put together into a coordination service 
layer  and  made  available  to  the  collaborative  applications.  Unfortunately,  this 
proposal does not consider changes in the local work context and people’s mobility. 

There  is  a  large  list  of  reusable  designs  applicable  to  the  coordination  services 
design  of  groupware  applications  for  fixed  networks  [5],  [10],  [16],  [25].  However, 
the  contextual  variables  influencing  the  collaboration  scenario  (e.g.  communication 
instability and low feasibility to use servers) and the mobile work (e.g. use of contextaware 
 services  and  support  for  ad-hoc  coordination  processes)  make  such  solutions 
unsuitable. 

On the other hand, there are several platforms and frameworks to share information 
work  in  a  wireless  scenario.  Most  of  them  are  not  able  to  be  dynamically  adapted 
using  contextual  information  or  to  support  a  fully  distributed  work  scenario. 
Examples  of  these  evolutions  are  the  tuple-based  distributed  system  derived  from 
LINDA  [9],  such  as:  FT-LINDA,  PLinda,  TSpaces,  Lime,  JavaSpaces,  and  TOTA 
[31]. These initiatives are able to support mobile collaboration; therefore, they could 
be  used  to  implement  MSW,  but  not  in  highly  dynamic  scenarios.  This  is  because 
they  use  centralized  components  to  provide  binding  among  components  of  the 
distributed system. Other platforms to share resources in Mobile Ad-Hoc NETworks 
(MANETs)  are  iClouds  [15],  Proem  [18]  and  XMIDDLE  [20].  Nevertheless,  these 
platforms are just focused on data sharing and they do not support the autonomy and 
interoperability capabilities required by mobile workers. 

Alarcon et al. presents a method to analyze several contexts involved in a specific 
loosely coupled work in order to provide some guides to design a particular mobile 
collaborative  solution  [1].  These  guidelines  are  focused  on  the  selection  of 
appropriate computing devices, networking support and the paradigm for HCI.   

In terms of functionality provided by a mobile shared workspace, the related works 
are  mainly  the  authors’  previous  research  in  the  area  of  mobile  groupware 
applications for disaster relief. However, these works do not report the details of the 
design solutions used to deal with the requirements identified in section 2.   

4   Designing Mobile Shared Workspaces 

Mobile  shared  workspaces  are  used  in  various  work  scenarios  to  support  several 
activities carried out by mobile workers. Thus, the design of these tools must consider 
different  contexts  involved  in  loosely  coupled  work  in  order  to  get  contextualized 
systems. Contextualized applications are easy to adopt by the users; unfortunately the 
design of contextualized tools is not obvious [1]. Although diverse contexts need to 
be  considered  in  the  design  of  a  MSW,  this  section  proposes  a  stepwise  design 
process  that  is  fed  just  for  the  work  and  activity  contexts  (Figure  1).  It  must  be 
emphasized that we are not proposing a new software development process, since we 
assume a typical process is being used, i.e., a software development process including 
at  least  the  conception,  analysis  and  design  phases.  Therefore,  this  process  can  be 
considered  as  a  guidance  tool  to  strengthen  some  development  activities  of  mobile 
shared workspaces and it can be embedded in a typical software life cycle. 

 

Designing Mobile Shared Workspaces for Loosely Coupled Workgroups 

181 

in 

it  needs 

loosely  coupled  work  scenarios; 

This  process  is  focused  on  the  features  of  the  system  required  to  support 
collaboration 
to  be 
complemented  with  a  traditional  software  design  (i.e.  single-user  systems).  The 
proposed  process  will  focus  on  the  design  of  groupware  capabilities  (e.g. 
sessions/users  management),  and  the  traditional  design  process  will  deal  with  the 
design of ad-hoc functionality (e.g. user interfaces). 

therefore, 

Usually,  the  contexts  considered  in  the  proposed  design  process  are  the  most 
restrictive  and  they  provide  key  general  requirements  to  take  into  account  in  a 
workspace  design.  The  analysis  of  these  contexts  (first  step  of  the  process)  allows 
developers to identify the key requirements (presented in Table 1) that are present in 
the design of a particular workspace.  

Sometimes these requirements are contradictory or unable to be satisfied with the 
available resources. In such a case, the requirements should be redefined in order get 
a viable alternative for the development process (second step). Once the requirements 
have been adjusted, they need to be specified because they represent a formal entry 
for the design process. This activity is also part of the second step. 

 

Analysis 

Requirements 
Specification 

Architectural 

Design 

Detailed 
Design 

Work 
Context 

Activity  
Context 

Constraint  
Requirements 

Functional 

Requirements 

Quality 

Requirements

Groupware 

General 
Strategy 

Ad Hoc 

Design Issues 

Groupware 

Specific 
Solutions 

Ad Hoc 
Specific 
Solutions 

 
 
s
e
c
a
p
s
k
r
o
W
d
e
r
a
h
S
 
e
l
i

 

b
o
M

 

n
g
i
s
e
D

 

Fig. 1. Mobile Shared Workspaces Design Process 

The  third  and  fourth  steps  involve  the  architectural  and  detailed  design  based  on 
the requirements, and both of them are part of the MSW design. The ad-hoc system 
design  issues  are  also  part  of  the  MSW  design.  These  issues  represent  the  typical 
design  aspects  of  a  single-user  application  (e.g.  ad-hoc  functionality  and  user 
interfaces), which are present in every software development process. The design of 
these  aspects  will  not  be  discussed  in  this  paper  because  they  are  not  related  to 
groupware  and  they  depend  on  any  particular  MSW.  Next  sections  describe  the 
phases of the stepwise process, emphasizing the third and fourth steps. 

182 

A. Neyem, S.F. Ochoa, and J.A. Pino 

4.1   Analysis Phase 

The analysis phase deals with understanding the problem domain. Thus, the work and 
activity  contexts  are  analyzed  in  order  to  determine  which  requirements  could  be 
involved  in  the  development  of  a  particular  MSW.  Typically,  the  work  context 
considers  the  physical  conditions  and  technological  infrastructure  surrounding  each 
collaborator while s/he is carrying out the activity. The physical space, environmental 
conditions and communication support are the main variables to take into account in 
the  work context analysis [1]. Since  workers are on  the  move  when performing the 
activity, the work context could change from one location to another.  

Typically, loosely coupled work carried out by these mobile collaborators can be 
split into several activities. Each activity could have its own context. The variables to 
consider  during  the  analysis  of  the  activities  context  are  the  type  of  interactions 
required by the group members, the communication and coordination requirements to 
perform  the  activity,  and  the  activity  criticality  and  duration  [1].  Analyzing  these 
variables  it  is  possible  to  establish  which  functional  requirements  (presented  in  
table 1) will be applicable to the MSW. Analyzing the variables of the work context it 
is possible to identify the quality and constraint requirements. Finally, the analysis of 
both contexts will provide useful background information to choose the best mobile 
devices to support the activity [11].  

4.2   Requirements Specification 

The list of requirements obtained in the previous phase could include contradictory or 
highly risky requirements, e.g. the MSW has to support some periods of synchronous 
work among users that are on the move in a physical space without communication 
infrastructure. Since it is almost impossible to satisfy such requirements combination, 
they need to be adjusted in order to get a sound basis for the design process. Every 
requirements  refinement  should  be  validated  with  the  work  and  activity  contexts  in 
order to see that no contradictory assumptions are included. 

In  addition, 

the 

the 

requirements  definition. 

A preliminary design of the  mobile  workers’ collaboration process  must be done 
based  on 
technological  and 
communication  support  required  to  perform  the  activity  have  to  be  defined.  These 
design decisions influence the defined requirements and vice versa. For instance, the 
workers’  high  mobility  could  ask  for  the  use  of  handheld  devices,  these  devices 
impose restrictions on the actions that can be done by a mobile worker. Therefore, a 
second  process  to  adjust  the  requirements  should  be  done  in  order  to  ensure  the 
feasibility  of  designing  a  MSW  that  supports  the  activity  in  the  specified  work 
contexts, considering the available technological infrastructure.  

4.3   Architectural Design 

It  is  difficult  to  design  a  one-size-fits-all  system  that  works  well  under  all  potential 
usage situations. MSW designers often end up making significant assumptions about 
the environment and certain design aspects. Usually these MSW must be redesigned 
to be effectively used if the assumptions no longer hold. The guidelines associated to 
the  design  aspects  for  traditional  collaborative  systems  are  inappropriate  for  highly 
dynamic  mobile  scenarios  because  these  solutions  were  design  for  fixed  networks. 

 

Designing Mobile Shared Workspaces for Loosely Coupled Workgroups 

183 

Architectures supporting mobility have to deal with several limitations which are not 
present  in  traditional  groupware  systems,  such  as:  bandwidth  constraints,  unreliable 
connections,  dynamic  work  context  and  computing  devices  with  scarce  resources. 
Next, some key guidelines to design MSW architectures are presented and Figure 2 
show the architecture. 

Layered.  Services  in  a  groupware  system  are  clearly  delimited:  communication, 
coordination  and  collaboration  [24].  Therefore,  a  layered  MSW  architecture  is 
recommended  in  order  to  separate  the  concerns.  Each  layer  groups  the  functions 
related  with  the  same  concern,  thus  providing  flexibility  and  maintainability  of  the 
solution.  

Fully distributed. Since the mobile workers need to be autonomous, the MSW have to 
be fully distributed [18], [23]. This distribution includes the communication, data and 
groupware  services.  No  centralized  components  have  to  be  used  as  part  of  the 
architecture,  because  they  become  a  potential  failure  point.  Failure  probability  of 
centralized  components  is  unacceptably  high  due  to  the  high  disconnection  rate  in 
wireless networks, and particularly in Mobile Ad-hoc Networks (MANETs).  

Service-oriented. The service-oriented approach lets mobile groupware systems to be 
extensible, flexible and interoperable in term of services discovery, consumption and 
provision  [17],  [23].  Service-oriented  architectures  helps  decouple  concerns  about 
network  availability  and  connectivity.  It  usually  implies  simplifications  in  the 
software, which are highly relevant when running on a handheld device. If a standard 
format of services is used to implement the functionality, the developer can assume 
such  services  will be interoperable, even in a  heterogeneous scenario. Thus,  mobile 
shared  workspaces  developed  under  this  approach  have  the  potential  to  offer  and 
consume services on many levels of abstraction. 

Asynchronous  communication.  The  high  disconnection 
rate  allows  mainly 
asynchronous communication [23], [28]. Therefore it is recommended the architecture 
adopts  a  message-oriented  approach.  Since  each  remote  service  invocation  needs  to 
ensure  the  channel  between  service  consumer  and  provider  is  maintained  for  a 
significant period, unblocking remote invocations should be considered to support the 
interactions between mobile workers. 

Low  bandwidth  consumption. Typically the effective data  transfer rate in a  wireless 
network  is  low,  and  it  decreases  with  larger  distance  or  when  there  are  obstacles 
between sender and receiver. This situation is emphasized when the loosely coupled 
work is supported by mobile ad-hoc networks. Data synchronization capabilities and a 
high rate of data replication will help reduce the bandwidth consumption [20], [28]. 

Platform  neutral.  The  work  scenario  could  be  heterogeneous  in  term  of  hardware, 
data  and  services  involved  in  the  loosely  coupled  work  [26],  [28].  Thus,  the 
architectural design must emphasize the data and services interoperability, i.e. using 
standardized formats and interfaces. This is important when unforeseen collaboration 
should be supported. 

Ad-hoc  communication.  It  should  be  assumed  no  pre-existing  communication 
infrastructure  will  be  available  to  support  the  activity;  therefore  mobile  ad-hoc 

184 

A. Neyem, S.F. Ochoa, and J.A. Pino 

networks will be required to collaborate [18], [23]. Even if the work scenario provides 
infrastructure-based  wireless  communication  there  will  be  many  times  in  which 
mobile  workers  will  get  isolated.  This  is  a  consequence  of  the  instability  of  such 
communication  service  and  its  limited  threshold.  If  the  architecture  assumes  that 
mobile  ad-hoc  communication  will  be  required,  the  system  capability  to  support 
collaboration among mobile workers is increased. 

Device A 

Device B 

Collaboration Layer 

Collaboration Layer 

Coordination Layer 

Coordination Layer 

Communication Layer 

Communication Layer 

Ethernet/Wireless

Communication Layer 

Coordination Layer 

Collaboration Layer 

Device C 

Layer 3 

Collaboration 

Layer 2 

Coordination 

Mobile Shared Workspace 

Notifications, 
Sessions 
Management,  User  Roles, 
Data  Sharing,  Awareness, 
Context Management 

Layer 1 

Communication  

Communication Services 

 

Fig. 2. Mobile Shared Workspaces Architecture 

4.4   Detailed Design 

This  section  presents  the  strategies  to  share  data,  and  manage  users,  roles,  sessions 
and context information as a way to deal with most functional requirements specified 
in  the  table  1.  These  design  solutions  are  aligned  with  the  guidelines  given  for  the 
architectural design. 

4.4.1   Sessions, Users and Roles Management 
Mobile shared workspaces must allow multiple work sessions involving users playing 
several roles. Sessions, users and roles management should be fully-distributed since 
the  MSW  should  be  autonomous.  Moreover,  the  loosely  coupled  work  requires  ondemand 
 collaboration,  information  sharing  and  data  synchronization;  thus,  explicit 
session  management  [8]  should  be  used  in  the  MSW  design.  In  explicit  sessions, 
participants  must  intentionally  connect  a  client  to  other  clients  to  interchange 
information or carry out opportunistic collaboration. 

Any user in the MANET may participate in more than one session. They access a 
session sending a request or by invitation. Once a user gets in a session s/he becomes 
visible and s/he can access the shared resources of such a session. At that moment, the 
user’s local shared resources become visible to the rest of the session members. When 
a user leaves a session, the local private and shared resources are kept available for 
him/herself, by allowing the user work asynchronously. Figure 3 shows this process. 

Every user must have a local private and a shared repository for each session s/he 
belongs. It allows her/him to  share resources on-demand. A  work session is created 

 

Designing Mobile Shared Workspaces for Loosely Coupled Workgroups 

185 

when the first user is registered as member of it and it is deleted when the last user is 
unregistered. A session is potentially alive even if no users are currently connected, 
but  there  are  registered  users.  The  type  of  explicit  work  sessions  matching  loosely 
coupled work are the following ones: ad-hoc, public-subscribe and private-subscribe. 
The  ad-hoc  session  is  an  open  public  resource  that  can  be  accessed  by  any  user 
connected  to  the  wireless  network.  The  public-subscribe  session  involves  a  simple 
subscription process. Typically, users request a session subscription and automatically 
obtain the right to access it. Finally, private-subscribe sessions require a subscription 
process  carried  out  by  invitation.  Each  invitation  has  associated  a  user  role.  If  the 
mobile worker accepts the invitation, then s/he will play such role in that session.  

 

User A - Local Resources  

P
r
i
v
a
t
e
 
R
e
p
o
s
i
t
o
r
y

Shared Repository 

Session B 

Session A 

Reconcilable  Irreconcilable 

Shared Sessions 

Session A – Shared Resources 

Irreconcilable Resources 

Reconcilable Information 

Connect  

Disconnect  

User B - Local Resources  

Shared Repository 

Session A 

Irreconcilable  Reconcilable 

 

y
r
o
t
i
s
o
p
e
R
 
e
t
a
v
i
r
P

User C - Local Resources  

Session B – Shared Resources 

User D - Local Resources  

P
r
i
v
a
t
e
 
R
e
p
o
s
i
t
o
r
y

 

Shared Repository 

Session B 

Session A 

Irreconcilable Resources 

Shared Repository 

Session A 

Session B 

Reconcilable  Irreconcilable 

Reconcilable Information 

Irreconcilable  Reconcilable 

 

y
r
o
t
i
s
o
p
e
R
 
e
t
a
v
i
r
P

 

Fig. 3. General strategy for session management 

4.4.2   Shared and Private Resources Management  
Workspaces  supporting  loosely  coupled  work  include  shared  information  and 
services. Since  mobile  workers have to be autonomous, the resources required by a 
user  during  an  activity  should  be  reachable  (locally  stored).  High  levels  of  users’ 
autonomy  are  obtained  with  high  data  and  services  replication.  However,  this 
replication  adds  inconsistency  to  shared  resources  and  the  reconciliation  process 
increases its complexity.  

Mobile workers connected to a session use a local (private) repository to store the 
private resources and a shared (public) repository to store the resources they want to 
share with the session members (Figure 3). The shared repository contains two types 
of information resources: reconcilable and irreconcilable. A reconcilable resource is a 
piece  of  information  which  is  able  to  be  synchronized  with  other  copies  of  such 
resource (from other mobile workers) in order to obtain a consistent representation of 
it.  These  resources  are  shared  through  data  reconciliation  (or  synchronization) 

186 

A. Neyem, S.F. Ochoa, and J.A. Pino 

processes.  This  process  could  be  on-demand;  therefore  each  user  decides  when  to 
synchronize and  whom  to synchronize  with.  A user can synchronize or get (via file 
transfer) shared resources only if the users involved in the process are all connected to 
the same session at the same time. It is worth noting that the reconciliation protocol 
must  use  a  mechanism  to  control  possible  conflicts  between  different  replicas.  In 
other  words,  it  can  be  performed  in  an  application-specific  way.  This  strategy  is 
fundamental for a large class of applications [22]. Therefore, programmers can easily 
develop  complex  mobile  shared  workspaces  that  need  data  sharing,  without 
considering the problems related to disconnections and possible data inconsistencies.  
This sharing approach maximizes the opportunity for distributed asynchronous work 
and enables mobile workers to modify shared data without restrictions.  

On the other hand, the irreconcilable resources are those pieces of information that 
cannot be synchronized. Typically, these are files that the system has no information 
about their internal structure. These resources are shared through file transfer.   

4.4.3   Context Management 
Context  means  for  us  everything  that  can  influence  the  behavior  of  shared 
workspaces; this includes resources internal  to a computing device (e.g.  memory or 
screen  size)  and  external  resources  (e.g.  bandwidth,  quality  of  the  network 
connection, and mobile hosts’ location and proximity) [6]. Context is highly dynamic 
in  mobile  scenarios.  Mobile  hosts  may  rapidly  connect  and  leave  the  network.  The 
lookup service is more complex in the mobile scenario, and broadcasting is the usual 
way of implementing service advertisement.  

Every MSW that needs to be context-aware has to implement a context manager. 
This manager has to store, update and monitor current status of the context in order to 
adapt the MSW functionality to changes in the work scenario (e.g. a mobile worker 
gets isolated or networking support is not available anymore). The context  manager 
can also be used to adapt the system functionality to heterogeneous mobile computer 
devices and communication scenarios. Furthermore, context information can be used 
to optimize application behaviors depending on the computing resources availability. 
Some  contextual  variables  useful  in  mobile  collaboration  are:  location,  relative 
location, computing devices characteristics and networking support. 

The context manager has to be carefully engineered in order to reduce the use of 
limited  resources,  such  as  battery,  CPU,  memory  or  network  bandwidth.  This 
manager must provide only a minimal set of functionalities and then it is the MSW 
which is in charge of monitoring and adapting its behavior according to its own needs. 
A service-oriented approach can be useful to design and implement this component, 
because it deals with the heterogeneity and shortage of resources. 

4.4.4   Guidelines Summary 
Table 2 presents a summary of the requirement that usually are present in the design 
of a MSW and the design guidelines that can be used to address them. Although these 
guidelines  help  MSW  developers,  they  do  not  represent  a  complete  and  accurate 
strategy to deal with such requirements.  

 

 

Designing Mobile Shared Workspaces for Loosely Coupled Workgroups 

187 

Table 2. Matching between requirements and guidelines 

 

n
o
i
t
a
c
i
n
u
m
m
o
c
 
c
o
h
-
d
A

 
s
u
o
n
o
r
h
c
n
y
s
A

 

n
o
i
t
a
c
i
n
u
m
m
o
c

 

n
o
i
t
u
l
o
s
 
e
r
a
w
a
-
t
x
e
t
n
o
C

 
s
n
o
i
s
s
e
s
 

d
e
t
u
b
i
r
t
s
i
D

 

n
o
i
t
a
z
i
n
o
r
h
c
n
y
s
 
a
t
a
D

 
t
n
e
m
e
g
a
n
a
m

 
s
n
o
i
s
s
e
s
 

k
r
o
w

 
t
i
c
i
l
p
x
E

 

d
e
t
u
b
i
r
t
s
i
d

 

y
l
l
u
F

 

d
e
r
e
y
a
L

 

 
 
l
a
r
t
u
e
n
m
r
o
f
t
a
l
P

 
s
n
o
i
s
s
e
s
 
e
b
i
r
c
s
b
u
s
-
e
t
a
v
i
r
P

 

n
o
i
t
a
m
r
o
f
n
i
 
e
l
b
a
l
i
c
n
o
c
e
R

 
e
t
a
i
r
p
o
r
p
p
a
 
f
o

 

n
o
i
t
c
e
l
e
S

 
e
c
i
v
e
d

 

g
n
i
t
u
p
m
o
c
 
e
l
i
b
o
m

 

d
e
t
n
e
i
r
o
-
e
c
i
v
r
e
S

 
e
r
u
t
c
e
t
i
h
c
r
a

 

y
r
o
t
i
s
o
p
e
r
 
e
t
a
v
i
r
P

 

y
r
o
t
i
s
o
p
e
r
 

d
e
r
a
h
S

Guideline  

Requirement 

Discretionary collaboration 
On-demand information sharing 
On-demand information synchronization 
Session/Users management 
Roles support 
Environment support 
Local and shared repositories 
Synchronous/asynch. interaction support 
Autonomous 
Context-aware 
Easy to deploy 
Self-configurable 
Interoperable 
Low coordination cost 
Lightweight 
Asynchronous communication 

 

5   Technologies to Implement the Guidelines 

This  section  presents  several  key  technologies  that  can  be  used  to  implement  the 
design guidelines presented above. Some of the most relevant are the following ones: 
Web services technology (WS). It provides interesting chances of getting lightweight, 
interoperable  and  loosely  couple  solutions.  In  order  to  show  the  WS  capabilities, 
Neyem  et  al.  have  recently  proposed  a  μWebServer  that  runs  on  several  mobile 
computing devices and uses these technologies to expose and consume Web services 
[23].  WS  technology  also  includes  standards  specifications  for  secure  messaging, 
dynamic  discovery,  description,  event  support,  and  file  transmission  on  resourceconstrained 
mobile devices. 
IEEE 802.11a/b/g (Wi-Fi). These networks allow implementing a MANET with a low 
effort. MANETs may be reconfigured on the fly through a protocol running on each 
node belonging to the network. These networks have a limited threshold (about 200 
meters in open areas and 20 meters in built areas) that could be enlarged if routing 
capabilities are implemented on them. This limitation could be overcome  when WiMax 
Mobile (IEEE 802.16e) is available. 
HTTP Protocol. This protocol provides the capability of exposing Web services and 
executing requests to/from limited mobile devices. HTTP supports the processing of 
HTML,  GIF  and  JPEG  Web  requests  and  GET  and  POST  through  SOAP 
components. This protocol uses a communication port (by default) that is available in 
any communication scenario. This ensures to MSW that changes in the work context 
features  do  not  interfere  with  the  designed  interaction  mechanisms.  This  is 
particularly relevant when unforeseen collaboration needs to be supported. 

188 

A. Neyem, S.F. Ochoa, and J.A. Pino 

SOAP  Messaging.  Since  communication  between  services  is  message-oriented,  the 
messaging framework that supports the communication process must be standardized; 
therefore every  service  will use the same  message  format  and transport protocol. In 
addition,  the  SOAP  messaging  framework  provides  some  important  message 
(delivery)  patterns  for  asynchronous  communication,  such  as:  unicast  one-way, 
multicast  one-way,  unicast  request/response,  and  multicast  request/unicast  response. 
This  functionality  provides  most  of  the  messaging  services  that  developers  need  to 
implement in order to support communication in a MSW. 
XML (eXtensible Markup Language). This data format is a widely accepted standard, 
it  provides  flexibility  and  it  is  easy  to  use.  Information  represented  with  XML  is 
potentially interoperable and reconcilable. XML Schemas can be linked to XML files 
in  order  to  add  semantics  to  such  information.  It  ensures  this  information  will  be 
understandable  by  any  MSW  that  access  it.  Furthermore,  the  synchronization 
mechanisms of XML information can help to reduce the bandwidth consumption.  

6   Conclusions and Further Work 

Mobile shared workspaces try to transport the shared workspace metaphor to mobile 
work scenarios. They seem to be useful to increase the mobile workers productivity 
when they carry out loosely coupled work. Reports of the MSW usage include areas 
such  as  health  care  [19],  [30],  construction  management  [32],  m-Learning  [36]  and 
disaster relief [7], [26]. Unfortunately, there are few guidelines to support the design 
of these groupware systems.  

This  paper  presents  a  design  process  and  several  guidelines  to  model  MSW  that 
support  collaboration  in  loosely  coupled  scenarios.  These  guidelines  are  mainly 
focused on the groupware capabilities of the system, and they are based on common 
functional, quality and constraint requirements. The presented guidelines are mainly 
related to architectural and detailed design. The first ones are focused on addressing 
the MSW quality and constraint requirements, and the guidelines for detailed design 
deal  with  the  functional  requirements.  These  guidelines  consider  both  foreseen  and 
unforeseen collaboration. 

Developers  can  use  these  design  recommendations  to  model  and  implement 
contextualized  MSW.  For  that  reason,  the  MSW  requirements  involved  in  a 
groupware  project  can  be  identified  by  analyzing  the  work  and  activity  contexts. 
Other  contexts  can  also  be  considered  in  the  MSW  design  (e.g.  social  and 
organizational  contexts);  however  they  have  low  influence  on  the  design  of 
groupware  supporting  mechanisms  of  the  solution  (e.g.  data  sharing,  sessions  and 
users management, and context awareness).  

Designers  must  carefully  consider  these  requirements  and  the  impact  the 
technological  support  will  have  on  the  flexibility,  autonomy  and  interoperability  of 
the  MSW.  The  weight  of  the  solution  in  terms  of  memory  and  CPU  consumption 
should  also  be  considered.  Typically  users  with  a  high  degree  of  mobility  (e.g., 
traveling  salesmen,  nurses  in  a  hospital,  children  in  an  outdoors  educational 
environment,  or  engineers  at  a  construction  site)  require  smaller  mobile  computing 
devices  in  order  to  reduce  the  transportation  effort.  However,  these  devices  impose 
limitations to the design of  MSW that runs on them. The service-oriented approach 
may help groupware designers to conceive lightweight solutions. 

 

Designing Mobile Shared Workspaces for Loosely Coupled Workgroups 

189 

The  guidelines  presented  in  this  paper  provide  a  basic  foundation  for  the 
development  of  mobile  shared  workspaces  for  loosely  coupled  work  scenarios.  It 
intends to increase the technical feasibility of the solutions in the area and to reduce 
the development effort of MSW. Future work includes the creation and evaluation of 
a formal framework to guide the design of these workspaces.  

 

Acknowledgments.  This  work  was  partially  supported  by  Fondecyt  (Chile),  grants 
Nº: 11060467 and 1040952 and by MECESUP (Chile) Project Nº:UCH0109.  

References  

1.  Alarcón,  R.,  Guerrero,  L.,  Ochoa,  S.,  Pino,  J.:  Analysis  and  Design  of  Mobile 
Collaborative  Applications  using  Contextual  Elements.  Journal  of  Computing  and 
Informatics 25(6), 469–496 (2006) 

2.  André,  P.,  Antunes,  P.:  SaGISC:  A  Geo-Collaborative  System.  In:  de  Vreede,  G.-J., 
Guerrero, L.A., Marín Raventós, G. (eds.) CRIWG 2004. LNCS, vol. 3198, pp. 175–191. 
Springer, Heidelberg (2004) 

3.  Andriessen,  J.H.E.,  Vartiainen,  M.  (eds.):  Mobile  virtual  work:  A  new  paradigm? 

Springer, Heidelberg (2006) 

4.  Appelt, W., Hinrichs, E.: Tailorability in the BSCW shared workspace system. In: Proc. 

WACC’99, USA, pp. 59–68 (1999) 

5.  Arvola,  M.:  Interaction  Design  Patterns  for  Computers  in  Sociable  Use.  International 

Journal of Computer Applications in Technology 25(2/3), 28–139 (2006) 

6.  Bottazzi,  D.,  Corradi,  A.,  Montanari,  R.:  Context-Aware  Middleware  Solutions  for 
Anytime and Anywhere Emergency Assistance to Elderly People. IEEE Communications 
Magazine 44(4), 82–90 (2006) 

7.  Canos,  J.,  Borges,  M.,  Alonso,  G.:  An  IT  View  of  Emergency  Management,  IEEE 

Computer, vol. 38(12), 27 (2005) 

8.  Edwards, K.: Session Management for Collaborative Applications, ACM CSCW, 323–330 

(1994) 

9.  Gelernter, D.: Generative Communication in Linda. ACM Transactions on Programming 

Languages and Systems 7(1), 80–112 (1985) 

10.  Guerrero,  L.,  Fuller,  D.:  A  pattern  system  for  the  development  of  collaborative 

applications. Journal of Information and Software Technology 43(7), 457–467 (2001) 

11.  Guerrero, L., Ochoa, S., Pino, J., Collazos, C.: Selecting Computing Devices to Support 

Mobile Collaboration. Group Decision and Negotiation 15(3), 243–271 (2006) 

12.  Gutwin, C., Greenberg, S.: A Descriptive Framework of Workspace Awareness for RealTime 
Groupware. Computer Supported Cooperative Work 11(3), 411–446 (2002) 

13.  Haake,  J.,  Haake,  A.,  Schümmer,  T.,  Bourimi,  M.,  Landgraf,  B.:  End-User  Controlled 
Group  Formation  and  Access  Rights  Management  in  a  Shared  Workspace  System.  In: 
Proc. CSCW’04, USA, pp. 554–563 (2004) 

14.  Häkkilä,  J.,  Mäntyjärvi,  J.:  Collaboration  in  Context-Aware  Mobile  Phone  Applications. 

In: Proc. HICSS’05, USA, p. 33.a (2005) 

15.  Heinemann,  A.,  Kangasharju,  J.,  Lyardet,  F.,  Mühlhäuser,  M.:  iClouds:  Peer-to-Peer 
Information Sharing in Mobile Environments. In: Kosch, H., Böszörményi, L., Hellwagner, 
H. (eds.) Euro-Par 2003. LNCS, vol. 2790, pp. 1038–1045. Springer, Heidelberg (2003) 

16.  Herrmann,  T.,  Hoffmann,  M.,  Jahnke,  I.,  Kiele,  A.,  Kunau,  G.,  Loser,  K.,  Menold,  N.: 
Concepts  for  Usable  Patterns  of  Groupware  Applications.  In:  ACM  SIGGROUP 
Conference on Supporting Group Work, USA, pp. 349–358 (2003) 

190 

A. Neyem, S.F. Ochoa, and J.A. Pino 

17.  Jørstad,  I.,  Dustdar,  S.,  Van  Thanh,  D.:  Service  Oriented  Architecture  Framework  for 

collaborative services. In: Proc. WETICE’05, Sweden, pp. 121–125 (2005) 

18.  Kortuem,  G.,  Schneider,  J., Preuitt,  D.,  Thompson,  T.G.C.,  Fickas,  S.,  Segall,  Z.:  When 
peer-to-peer  comes  face-to-face:  collaborative  peer-to-peer  computing  in  mobile  ad-hoc 
networks. In: Proc. P2P’01, Sweden, pp. 75–91 (2001) 

19.  Markarian,  A.,  Favela,  J.,  Tentori,  M.,  Castro,  L.:  Seamless  Interaction  Among 
Heterogeneous  Devices  in  Support  for  Co-located  Collaboration.  In:  Dimitriadis,  Y.A., 
Zigurs,  I.,  Gómez-Sánchez,  E.  (eds.)  CRIWG  2006.  LNCS,  vol. 4154,  pp.  389–404. 
Springer, Heidelberg (2006) 

20.  Mascolo, C., Capra, L., Zachariadis, S., Emmerich, W.: XMIDDLE: A Data-Sharing Middle-ware 

for Mobile Computing. Journal on Personal and Wireless Communications 21(1), 77–103 (2002) 

21.  Nah,  F.,  Sheng,  H.:  The  Value  of  Mobile  Applications:  A  Utility  Company  Study. 

Communications of the ACM 48(2), 85–90 (2005) 

22.  Neyem, A., Ochoa, S., Pino, J.: A Strategy to Share Documents in MANETs using Mobile 

Devices. In: Proc. ICACT’06, Korea, pp. 1400–1404 (2006) 

23.  Neyem,  A.,  Ochoa,  S., Pino,  J.: Supporting  Mobile  Collaboration  with  Service-Oriented 
Mobile Units. In: Dimitriadis, Y.A., Zigurs, I., Gómez-Sánchez, E. (eds.) CRIWG 2006. 
LNCS, vol. 4154, pp. 228–245. Springer, Heidelberg (2006) 

24.  Ochoa,  S.F.,  Guerrero,  L.A.,  Fuller,  D.,  Herrera,  O.:  Designing  the  Communication 
Infrastructures  of  Groupware  Systems.  In:  Haake,  J.M.,  Pino,  J.A.  (eds.)  CRIWG  2002. 
LNCS, vol. 2440, pp. 413–433. Springer, Heidelberg (2002) 

25.  Ochoa, S.F., Guerrero, L.A., Pino, J.A., Collazos, C.: Reusing Software Components. In: 
de  Vreede,  G.-J.,  Guerrero,  L.A.,  Marín  Raventós,  G.  (eds.)  CRIWG  2004.  LNCS, 
vol. 3198, pp. 262–270. Springer, Heidelberg (2004) 

26.  Ochoa,  S.,  Neyem,  A.,  Pino,  J.,  Borges,  M.:  Supporting  Group  Decision  Making  and 
Coordination  in  Urban  Disasters  Relief  Efforts.  International  Journal  of  Decision  Syst. 
(2007) (in Press) 

27.  Perry,  M.,  O’hara,  K.,  Sellen,  A.,  Brown,  B.,  Harper,  R.:  Dealing  with  mobility: 
understanding  access  anytime,  anywhere.  ACM  Transactions  on  Computer-Human 
Interaction 8(4), 323–347 (2001) 

28.  Pinelle,  D.,  Dyck,  J.,  Gutwin,  C.:  Aligning  Work  Practices  and  Mobile  Technologies: 
Groupware Design for Loosely Coupled Mobile Groups. In: Chittaro, L. (ed.) Mobile HCI 
2003. LNCS, vol. 2795, pp. 177–192. Springer, Heidelberg (2003) 

29.  Pinelle,  D.,  Gutwin,  C.:  A  Groupware  Design  Framework  for  Loosely-Coupled 

Workgroups. In: Proc. ECSCW’05, France, pp. 65–82 (2005) 

30.  Pinelle, D., Gutwin, C.: Loose coupling and healthcare organizations: adoption issues for 
groupware deployments. Computer Supported Cooperative Work 15(5-6), 537–572 (2006) 
31.  Russello,  G.,  Chaudron,  M.,  van  Steen,  M.:  An  experimental  evaluation  of  self-managing 
availability in shared data spaces. Science of Computer Programming 64(2), 246–262 (2007) 
32.  Schaffers, H., Brodt, T., Pallot, M., Prinz, W. (eds.): The Future Workplace - Perspectives 

on Mobile and Collaborative Working, Telematica Instituut, The Netherlands (2006) 

33.  Tarasewich,  P.:  Designing  Mobile  Commerce  Applications.  Communications  of  the 

ACM 46(12), 57–60 (2003) 

34.  Wang,  Y.,  van  de  Kar,  E.,  Meijer,  G.:  Designing  mobile  solutions  for  mobile  workers: 
lessons  learned  from  a  case  study.  In:  Kishino,  F.,  Kitamura,  Y.,  Kato,  H.,  Nagata,  N. 
(eds.) ICEC 2005. LNCS, vol. 3711, pp. 582–589. Springer, Heidelberg (2005) 

35.  Whittaker, S., Geelhoed, E., Robinson, E.: Shared Workspaces: How Do They Work and 

When Are They Useful? Journal of Man-Machine Studies 39(5), 813–842 (1993) 

36.  Zurita, G., Nussbaum, M.: MCSCL: Mobile Computer Supported Collaborative Learning. 

Journal of Computers & Education 42(3), 289–314 (2004) 

