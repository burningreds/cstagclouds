Sergio F. Ochoa 

sochoa@dcc.uchile.cl) 

José A. Pino 

jpino@dcc.uchile.cl) 

Fabián Poblete 

 
 

 

 

 
 
 

(Department of Computer Science, Universidad de Chile, Chile 

(Department of Computer Science, Universidad de Chile, Chile 

fpoblete@dcc.uchile.cl) 

Journal of Universal Computer Science, vol. 15, no. 9 (2009), 1812-1832
submitted: 15/8/08, accepted: 25/4/09, appeared: 1/5/09 © J.UCS

Estimating Software Projects Based On Negotiation 

(Department of Computer Science, Universidad de Chile, Chile 

Abstract:  The  Software  Engineering  community  has  been  trying  to  get  fast  and  accurate 
software  estimations  for  many  years.  Most  of  the  proposed  methods  require  historical 
information and/or experts’ judgment. Because of that, the current methods are not suitable for 
novice developers or persons who do not know the company development capability. In order 
to help overcome such need, this paper proposes a software estimation method named CEBON 
(Collaborative Estimation Based On Negotiation). The method is applicable to small/mediumsize 
projects (1-6 months). It focuses on supporting estimation of Web information systems in 
scenarios where historical data is not available. The CEBON method has been used to estimate 
eight real projects. The obtained results were compared with the real projects execution, which 
were carried out by novice developers in Chile. The comparison indicates the method is able to 
deliver quite accurate results. In addition, a survey applied to the involved developers shows 
they  feel comfortable using the estimation method. The article also describes a collaborative 
software application supporting the CEBON process and a preliminary evaluation of both the 
estimation method and the supporting tool.  
 
Keywords:  Software  Estimation,  Collaborative  Work,  Groupware  System,  Novice  Software 
Developers. 
Categories: D.2.0, D.2.9, H.4.m., M.0, M.8 

1 

Introduction 

Estimating  software  development  effort  (time  and  cost)  is  a  Software  Engineering 
topic  being  studied  for  over  three  decades.  Several  estimation  methods  have  been 
proposed, trying to get fast and accurate predictions for software projects.  

Two groups of estimating methods can be recognized from the various proposals: 
(1) the parametric methodologies, which estimate based on a mathematical formula, 
and  (2)  the  methodologies  based  on  judgments  and  intuitions,  which  use  historic 
material and the developers’ experience to generate estimated values. Regardless of 
the prediction strategy, all of them involve elements requiring significant experience 
on  software  development.  Thus,  people  with  little  experience  are  usually  not  taken 

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

1813

into  account  by  a  reasonable  method  intended  to  generate  serious  software  project 
estimates. 

Currently,  there  are  particular  projects  and  development  scenarios  where  the 
clients prefer novice developers (1-2 year of experience) instead of experienced ones. 
An  example  of  that  case  is  the  development  of  small  Web  information  systems 
intended for relaxed software markets (details are presented in section 2). Typically 
these projects are low-risk and low-impact for the organization; therefore the clients 
prefer 
to  develop  such  solutions. 
Unfortunately,  these  novice  developers  are  left  without  historical  information  or 
accurate methods to generate sound estimates. 

inexpensive  human  resources 

to  employ 

This paper proposes an estimation method and a supporting tool suitable for novice 
developers,  in  order  to  predict  the  duration  of  small/medium-size  projects  using 
negotiation. Typically these projects involve 3-5 people working during 2-5 months. 
This project size was chosen considering the most common type of initiatives that is 
currently  being  developed  in  Chile.  However,  some  studies  show  this  project  type 
could also be common in several other countries [Reifer 2000].  

The proposed estimation method, named CEBON (Collaborative Estimation Based 
On Negotiation), was used in the final course of the Computer Science curriculum at 
the  University  of  Chile.  The  CEBON  evaluation  process  involved  25  novice 
developers  (students  with  1-2  years  of  experience  as  developers),  and  eight 
development projects with a duration of 14 weeks. The obtained results were highly 
encouraging. 

Next section describes the development scenario which CEBON was designed for. 
Section  3  presents  and  discusses  the  related  work  on  software  estimation  methods. 
Section  4  describes  the  CEBON  method  and  the  phases  that  compose  it.  Section  5 
presents  a  brief  description  of  the  collaborative  application  supporting  the  process. 
Section 6 describes the evaluation process and the preliminary results. Finally, section 
7 contains the conclusions and future work. 

2  Development Scenario 

Several  studies  of  the  Chilean  software  industry  conducted  by  Sacre  [Sacre  2003], 
Stein  [Stein  2003]  and  IDC  [IDC  2003]  during  2002  indicate  that  most  software 
developments correspond to Web information systems. The typical project duration is 
between 2 and 5 months, and usually they are conducted by an experienced project 
manager, having more than 7 years of experience, leading a group of 3 to 5 novice 
developers having one or two years of experience.  

On the other  hand, between  2006 and 2008 several  surveys  were applied by the 
authors  to  software  developers  in  various  work  scenarios.  The  obtained  results  are 
quite similar to the previous ones. Tables 1 to 4 show a summary of the most relevant 
results. 

These  tables  present  information  from  four  sources.  Rows  1  and  2  present  the 
information  collected  from  two  important  Chilean  software  companies.  The  data 
presented in row 3 was gathered from independent software developers working for 
large  Chilean  software  companies  or  directly  for  specific  clients.  Row  4  presents 
information  related  to  the  advanced  Computer  Science  undergraduate  students  (1-2 
year of experience as developers) at the University of Chile.  

1814

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

 

Table 1: Characterization of the development teams 

Table  1  shows  there  is  an  important  number  of  novice  developers  working  for 
software  companies.  The  average  experience  of  the  team  members  is  two  years  in 
company B and three years in company C. In the case of the undergraduate students 
(row 4) the team average experience is the same as the project manager’s experience; 
it could be indicating these persons are managing their own projects.  

Table 2 shows a summary of the team size for projects being currently developed. 
Most people answering the survey are  working on  groups composed of two to  five 
members. 
 

Table 2: Work team size 

 

Table 3 shows a summary of the project type and duration in which the developers 
are  working  on.  Most  of  them  (85%)  correspond  to  Web  information  systems,  and 
most projects have duration from three to six months. 
 
 

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

1815

 

Table 3: Project types and duration 

The first four columns of table 4 indicate how frequently these developers have to 
do some estimation. The remaining five columns show the estimation method they are 
using  or  they  would  like  to  use  (in  case  of  people  not  currently  estimating).  
Analyzing the collected data it is possible to say that  most of the asked developers 
need to estimate (92.3%). Moreover, 62.8% of the surveyed people usually have to 
provide estimates.  
 

 

Table 4: Estimation needs and used methods 

On  the  other  hand,  most  of  them  (73.6%)  use  their  own  experience  or  expert 
judgment  to  support  the  estimates.  However,  most  of  them  are  not  experienced 
developers  and  thus,  their  estimates  probably  are  unreliable.  These  results  clearly 
indicate the  need  for an estimation  method suitable  for novice developers. Besides, 
Table  3  shows  that  most  of  these  current  projects  are  Web  information  systems 
involving 2-6 months of duration. Table 2 shows the groups executing these projects 
have 2-5 developers. Considering this information as indicative, this article proposes 
CEBON  (Collaborative  Estimation  Based  On  Negotiation),  an  estimation  method 
intended to help overcome this need. Next section presents related work concerning 
estimation methods supported by little historical information. 

1816

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

3  Related Work 

Several software effort estimation models have been proposed. Some of the most well 
known ones are Price-S, Slim, Seer-Sem and COCOMO II [Ferens and Christensen 
1998, Boehm et al 2000]. These models are mainly parametric, i.e., they are based on 
formulas  with  metrics  like  Lines  Of  Code  (LOC)  [Phillips    1998],  Function  Points 
(FP)  [Matson  et  al.  1994]  or  Web  Objects  (WO)  [Reifer  2000].  The  use  of  these 
models  requires  experience  and  a  long  analysis  of  historical  data,  which  is 
inappropriate  for  novice  developers  [Ochoa  et  al  2003]  or  persons  having  little 
historical  information  available.  This  situation  is  also  present  in  particular  software 
products, such as courseware [Thackaberry and Rada 1998]. 

On  the  other  hand,  judgment  based  estimation  models  seem  to  fit  well  with  the 
requirements of the estimation process. A key part of these models applicability is the 
possibility to do it in group. The objective of this kind of estimates is to gather every 
group member’s viewpoint in order to reach a common agreement on the estimate to 
be  made.  Thus,  the  estimate  will  probably  be  less  biased  than  estimates  made  by 
individual  group  members  working  alone.  The  most  representative  methodology 
adhering  to  this  strategy  is  Wideband  Delphi  [Boehm  1981],  which  uses  an  expert 
judgment  approach.  Its  objective  is  to  gather  the  opinions  of  a  group  of  experts 
regarding  a  certain  topic,  review  and  comment  their  estimates,  and  make  new 
estimating rounds based on their recently discussed answers. 

On the other hand, concerning ways of discussing, interesting work has been done 
in research areas  such as Electronic Meeting Systems [Nunamaker et al. 1991] and 
Group  Decision  and  Negotiation  [Brodt  1997].  A  noteworthy  example  is  the  Issue 
Based Information Systems (IBIS) model [Rittel and Webber 1973]. The IBIS model 
arose as an answer to try to solve “wicked” problems, for which traditional problem 
solving methods are unsuitable [Rittel and Webber 1973, Camillus 2008]. This model 
is supported by a structured discussion involving three elements: issues, positions and 
arguments. The group members discuss in order to clarify the issues and the possible 
solutions to a problem. According to Rittel, “wicked” problems should be solved in 
some  way  involving  argumentation,  where  all  given  arguments  are  systematically 
confronted to the various points of view from all the team members [Camillus 2008]. 
Other similar model is “Beliefs, Reasons and Moves” (BRM), which introduces a 
set of rules to represent a type of dialog in which participants try to express agreement 
or disagreement about a certain topic [Zabala et al. 1999]. In our case, it could apply 
to the estimation of software development efforts. The three main components of this 
model  are  mentioned  in  its  name:  beliefs,  reasons  and  moves.  This  representation 
offers a basic set of actions that allow developers to structure a discussion in order to 
ease the acquisition of the knowledge provided by the participants. If we could apply 
this model to our problem, developers not only would carry out the estimation process 
but would also enlarge their experience based on this knowledge sharing process. 

Quignard and Barker proposed a model which is formed by a set of communicative 
actions [Quignard, and M. Baker 1997]. The  main difference  with  the BRM  model 
actions  is  the  way  the  discussion  ends.  Here  one  of  the  participants  asks  the  other 
people to end the meeting, thus he/she tries to force an agreement about the solution 
to be adopted.  

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

1817

Considering the problem we are dealing and the related work, this paper proposes 
an estimation method adapted from Wideband Delphi. The adaptation involves: (1) to 
replace the expert participation by the collaborative work of novice developers, and 
(2)  to  support  the  work  of  group  members  through  a  collaborative  tool  with  the 
individual estimation and negotiation processes. Furthermore, participants do not need 
to be co-located to generate estimates; thus, the process can be done in a distributed 
way. The use of a collaborative application allows team members to do the process in 
either  synchronous  or  asynchronous  manner.  Next  section  describes  the  CEBON 
method. 

4  The CEBON Method 

CEBON  is  a  methodology  based  on  judgments  and  intuitions,  and  it  includes  the 
negotiation  as  a  key  part  of  the  process.  This  method  was  designed  to  be  used  by 
development teams with 3-6 members. Although team members have little historical 
information to support the estimates, it is assumed they have an idea about the team’s 
development  speed  [Ochoa  et  al  2007].  This  assumption  is  based  on  the  fact  that 
developers’ productivity does not vary much at the first stages of their career.  

Since the discussion and  negotiation processes play a  key role in  this  method, a 
collaborative software tool has been designed to support them. These processes help 
team  members  to  validate  and  refine  their  perception  about  development  times  and 
costs. Thus, the sharing of experiences, opinions and arguments allows developers to 
build new knowledge and skills to apply during the next estimation process.  

The main aims behind CEBON design were getting a methodology: (1) suitable for 
novice developers, (2) able to support the making of reasonable predictions and (3) let 
participants  increasingly  improve  their  estimating  skills.  CEBON  is  a  step-by-step 
process  that  involves  five  phases:  discussion,  context  evaluation,  estimation,  voting 
and agreement (Figure 1). It is important to note that the output of one phase is used 
as part of the input for the following phase. Thus, the method becomes an evolving 
process  where  not  only  the  software  estimation  improves,  but  also  the  shared 
knowledge  of  the  team  mates.  The  first  two  phases  are  focused  on  knowledge 
acquisition.  The  next  two  phases  (estimation  and  voting)  deal  with  the  knowledge 
elaboration and organization. Finally, the last phase determines if the team was able to 
arrive to a sound common conclusion. The negotiation activities are transversal to the 
whole  process;  therefore  they  are  present  in  at  least  four  of  the  five  phases  of  the 
proposed method. 

The tools used in each phase of the process are part of the collaborative application 
supporting  CEBON.  These  tools  were  integrated  in  an  active  space  [Arroyo  et  al. 
2008]  that  helps  team  members  to  manage  the  shared  knowledge.  Team  members’ 
competencies,  in  the  form  of  their  technical  and  cognitive  capabilities,  are  closely 
related to the ability of the team to exploit existing knowledge and to create new one. 
[Braga de Vasconcelos et al., 2003]. 

 
 
 
 

1818

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

Figure 1: Flow of the CEBON process 

 

 Initial Discussion 

4.1 
This phase is the starting point. All team members participate in a meeting trying to 
develop  common  knowledge  about  the  project  scope,  risk  and  its  main  challenges. 
This meeting can be face-to-face or distributed.  

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

1819

Before  the  meeting,  all  team  members  must  read  the  documentation  on  the 
problem to solve. Developers  who have a better understanding of the problem (e.g. 
persons who met with the client/users) describe the problem to the rest of the group. 
The  goal  is  to  create  a  discussion  about  the  elements  that,  as  a  group,  they  think 
should be taken into account for the estimation process. Also, the existing resources 
should be analyzed, such as available tools and the knowledge and experiences that 
group members have had with similar projects.  

When  the  discussion  is  conducted  in  a  distributed  way,  the  tool  supporting  this 
activity  is  a  structured  chat.  This  chat  structures  the  contributions  as  a  discussion 
forum,  but  also  it  allows  contributions  access  as  soon  as  they  arrive.  Thus,  it  is 
possible  to  take  advantage  of  the  benefits  not  only  of  a  chat  but  also  a  discussion 
forum. 

The inputs to this phase are the ideas presented by team members to each other, 
whereas  the  output  corresponds  to  the  written  discussion  about  these  ideas  and 
agreements. The formal output is a digital form with a set of ideas and agreements to 
be considered during the estimation phase. The tool supporting the CEBON process is 
in charge of keeping this digital form accessible for the team members. 

 Context Approach 

4.2 
Users will be able to do the following activities in this phase: (1) re-think the ideas 
and agreements reached in the previous phase, and (2) define a list of major tasks to 
be estimated. The first activity intends to determine the context on which the estimate 
will  be  based,  and  the  ideas  and  agreements  that  will  be  used  for  the  estimation 
process. During this activity each user will be able to express these agreements from 
his/her own viewpoint, and discuss them if new information indicates they need to be 
changed. The goal is to count on a sound base to carry out the estimation process. The 
discussion should continue as long as the team members do not feel comfortable with 
the agreements supporting the estimation process. 

On the other hand, the discussion process should not take a long time because it 
increases the estimation effort; particularly the time required to generate an estimate. 
Therefore, it is important the team members’ contributions are presented in a concise 
manner.  In  addition,  the  tool  supporting  this  process  and  the  asynchronous  work 
should also contribute to reduce the estimation effort.  

A digital form containing the estimation context is used to record and organize the 
shared knowledge the participants have to consider during the next CEBON phases. It 
includes the knowledge a person may have about a task being analyzed, as well as the 
external factors that may affect its development project. This information is stored as 
a digital form by the collaborative application supporting CEBON, which implements 
an organizational memory of the project. Thus, it keeps available such information at 
the moment that an estimation session is being held. The input to this activity is the 
digital  form  reached  in  the  previous  phase,  while  the  output  corresponds  to  the 
context digital form.  

On the other hand, the second activity of this phase wants to reach an agreement 
about  the  major  tasks  that  need  to  be  estimated  in  this  project.  Therefore  each 
developer  has  to  list  the  major  tasks  (no  more  than  ten)  and  send  them  to  a 
coordinator  by  using  the  supporting  tool.  The  coordinator  joins  the  contributions, 
eliminates the redundancy and generates a preliminary list of major tasks. This list is 

1820

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

discussed  and  refined  in  order  to  summarize  the  project  by  including  at  most  ten 
major tasks. The context digital form and the list of major tasks are inputs to the next 
CEBON phase. 

Estimation 

4.3 
At  the  starting  point  of  this  phase  the  users  access  a  digital  form  which  asks  for 
estimates on the  major tasks  identified in the previous phase. Particularly, the team 
members have to assign to each task their bets on cost, duration, starting and ending 
dates. The application supporting the process will compute the time periods and it will 
automatically determine the project duration estimate.  

At this  stage, each estimate is  made by each individual. Team  members have to 
work alone to get their own estimate and write them down on the corresponding fields 
of the digital form. These predictions could include arguments, which are stored in the 
same  form.  At  the  end  of  the  estimation  form,  users  will  see  the  various  points  of 
view regarding the context of the estimate, as they were expressed by the participants 
in the previous phase. This is done to give them as much information and opinions as 
possible before the users generate their estimates.  

The context expressed by the team members in the previous phase, which is input 
to this phase, will be shown on the lower part of the computer screen. It gives team 
members a broad view of the problem they have to solve.  

Once  all  team  members  have  provided  their  estimates,  the  supporting  tool 
organizes that information in a hierarchical way, allowing team members to access it. 
Thus,  they  can  review  their  partners’  estimates  and  the  supporting  arguments,  and 
they may change their own estimates just once. Typically, when team members see 
the other estimates and arguments they often modify their own ones. The negotiation 
of  the  requirements  to  be  considered  in  the  project  could  be  supported  by  a  multicriteria 
preference analysis [In and Olson. 2004]. 

 
This  phase  is  closed  after  this  adjustment.  The  deliverables  are  the  adjusted 
estimates performed by the team members, and the arguments given to back them up. 

 Voting 

4.4 
At  the  starting  point,  the  tool  supporting  CEBON  presents  an  opinion  form  to 
developers. It allows each participant to see the adjusted estimates  generated in the 
previous phase, and their corresponding arguments. An anonymous voting method is 
used to avoid the bandwagon effect present in the original Wideband Delphi model 
[Leibenstein 1950]. Members must provide a score to each given estimate, depending 
on how they think it solves the presented problem.  

The voting process is conducted task by task: cost, duration, and starting/ending 
dates. A participant who proposed a certain time interval as his estimate may give a 
better  score  to  another  user’s  one  if  he  thinks  now  that  it  is  more  adequate  to  the 
problem,  or  if  the  supporting  arguments  are  sounder  than  his  own.  Outputs  of  this 
phase  are  the  scores  given  to  the  previous  phase  estimates,  based  on  each  team 
member’s criterion. 
 

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

1821

Estimation Agreement 

4.5 
The supporting tool computes an indicator which is the average acceptance for each 
estimate based on the results of the voting process. This information is organized in a 
list and it is published in order to allow team members see and discuss the results. 

At this point, the developers must decide whether they agree on the estimate with 
the highest score, or they think a new iteration should be carried out. If the users are 
satisfied  with  this  estimate,  the  current  process  is  finished.  Otherwise,  a  new 
estimation round begins. In both cases, the estimation meeting can be resumed later, 
and  the  proposed  dates,  costs,  arguments  and  presented  context  from  previous 
iterations of this estimation process can be reviewed.  

The output of this phase is the agreement reached by the participants on whether 
the estimate with the highest score is good enough for the problem they are trying to 
solve.  This  determines  either  the  need  for  a  new  iteration  or  if  the  end  of  the 
estimation session. 

 

Action 

Inform 
because a1 

i1 

Estimate  e1 
because a1 

Accept  end 
of session 

Reject end of 
session 

Not 
because a1 

i1 

Agree  with 
i1 

Description 

The  information  i1  is  communicated  to  the  group.  It  is  backed  up  by 
argument a1. Information i1 may be a problem specification or a context 
description. 
The variable e1 is estimated by a member for the topic being discussed, 
basing  his  estimation  on  a1,  where  a1  may  be  one  or  more  of  the 
arguments presented on a previous phase, or a new one. The metrics for 
variable e1 will change according to the topic being discussed. 
A  member  tells  the  rest  of  the  group  that  he  wishes  to  end  the  current 
estimation  session.  Acceptance  means  that  the  member  thinks  that  the 
reached  estimate  is  acceptable,  or  that  the  meeting  has  reached  a 
reasonable  time  limit.  This  action  is  communicated  to  the  rest  of  the 
members in an anonymous way. 
A  member  tells  the  rest  of  the  group  that  he  does  not  want  to  end  the 
current estimation session. A rejection means that the member thinks that 
they  reached  an  estimate  which  is  not  acceptable  as  an  answer  to  the 
problem  being  solved.  This  action  is  communicated  to  the  rest  of  the 
members in an anonymous way. 
A  member informs the rest of the group the information i1 is not valid 
due to argument a1. If this communicative action is presented, it implies 
that  there  is  a  disagreement  on  the  arguments  presented  by  the 
participants. If a2 is accepted as valid, the information supported by the 
original argument is not valid anymore. 
A member informs the rest of the group that he thinks that information i1 
presented by another participant of the discussion is supported by enough 
valid arguments to regard the presented information as valid. 

Table 5: Communicative actions 

 

1822

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

Communicative Actions 

4.6 
A  set  of  communicative  actions  was  defined  in  order  to  effectively  carry  out  the 
CEBON process using a supporting Web tool (Table 5).  These actions may appear 
during  an  estimation  session  and  they  are  useful  to  structure  the  discussion  and 
negotiation processes. 

These  actions  are  a  simple  representation  of  the  most  basic  sentences  that 
developers can use to express their ideas on a meeting. They were designed based on 
the phases presented previously. The goal is to encourage the discussion of proposals 
among the group members, and to guide the estimation process towards a final result 
based on arguments presented by the participants, and supported by the majority of 
the group. 

5 

Collaborative Tool Supporting CEBON 

A  supporting  tool  was  created  to  ease  and  guide  the  interactions  among  team 
members  during  the  several  phases  of  the  process.  This  tool  intends  to  reduce  the 
estimation effort and allows remote users to participate in the process.  

The  architecture  of  this  tool  is  simple.  The  physical  architecture  includes  three 
layers  (Figure  2):  clients  (represented  by  a  Web  navigator),  work  environment 
(composed by the tool functionality) and the knowledge base (implemented through a 
database).  The  most  complex  layer  is  clearly  the  work  environment.  The  logical 
architecture  shows  a  gross-grain  view  of  this  component  (Figure  2),  which 
implements two logical layers. The upper layer implements all the tools  supporting 
the collaboration process: an estimation tool, the digital forms, the structured chat, a 
voting tool, users/sessions management and a setup tool. 
 

 

Figure 2: Physical and Logical Architecture of the Supporting Tool 

 

On  the  other  hand,  the  lower  layer  implements  the  communication  and 
coordination  services  required  to  support  the  collaboration.  For  example,  floor 
control, access control to shared resources, tracking of users’ activities, and message 
delivery.  These  two  layers  communicate  to  each  other  through  an  Application 

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

1823

Program Interface (API). Similarly the communication between the service layer and 
the database in established through Data Access Objects (DAO). 

Application Structure 

5.1 
The  supporting  tool  groups  its  functionality  behind  its  main  menu  options: 
collaborative  tools,  projects,  estimation  and  exit.  Figure  3  shows  how  the  Web 
application structures such functionality. 

This functionality can be mapped to the main structure of the tool user’s interface 
(Figure 4). The interface pattern is composed of three main areas: (1) main menu, (2) 
secondary menu and (3) information display area. The first one allows a user select a 
category. Once one of them is chosen, the secondary menu is updated with the options 
available  for  such  category.  In  the  case  shown  in  Figure  4  the  secondary  menu  is 
displaying  the  options  available  for  the  “Tools”  category.  All  the  functionality 
implemented  in  this  supporting  application  can  be  accessed  in  the  same  way.  The 
information display area is used to present the information requested by the user. 
 

 

Figure 3: Functionality of the estimation supporting tool 

One of the main components of this tool is not visible through the user interface. 
Such component is the coordinator which is responsible for guiding the users through 
the CEBON phases and to coordinate the team members’ actions. This component is 
part of the lower layer of the logical architecture, and it has been implemented as a 
service.  The  options  available  through  the  user  interface  during  each  phase  of  the 
process are controlled by this coordinator. 

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

1824

 

Figure 4: Structure of the user interface  

 

 Estimating the Development Effort 

5.2 
The supporting tool provides team members with an environment in which they can 
estimate the time needed to complete each  major activity (Figure 5). Each  member 
has to propose the starting and ending dates for these tasks using a Web form. They 
also have to support these bets with arguments. A task cost estimate and its arguments 
should be given by each team member. 

After the developers have had some estimation sessions, the tool shows them the 
arguments provided by other team members in support of their estimations, and the 
gap  that  may  exist  among  their  different  opinions.  The  idea  is  the  developers  will 
acquire the skills and knowledge that will allow them to improve the quality of their 
future estimates. They will be able to do that by studying this information, by learning 
from  the  experiences  of  other  team  members,  and  the  practice  of  continuous 
estimation, 

Since  the  tool  supports  the  users’  participation  in  a  distributed  way,  it  embeds 
some  special features designed for such  scenario. For instance, a  user  may join the 
session not necessarily at the beginning of an estimation process. The cyclical nature 
of  the  process  allows  this,  although  of  course,  participation  of  all  members  is 
desirable  at  all  times.  The  coordinator  component  is  in  charge  of  controlling  these 
events. This component redirects users to the corresponding form, depending on the 
estimation phase currently being executed. 

On the other hand, the tool gives the users anonymous points of view from the rest 
of the participants, which may make them look at the problem on a different way. The 
users’  opinions  are  equally  weighted,  regardless  of  whether  or  not  they  were 
physically present when the estimation meeting was held. 
 

 

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

1825

Figure 5: User interface for the project estimation 

 

6 

CEBON Evaluation Process 

The  usefulness  of  the  tool  and  the  supported  estimation  process  was  evaluated  by 
novice developers. This experience was carried out as a part of a regular course on 
Software Engineering at the Computer Science Department of the University of Chile. 
Participants  were  senior  undergraduate  Computer  Science  students  with  one  or  two 
years of experience as part-time developers.  

A total of 25 students participated in the exercise, which was carried out during 
two  semesters:  Autumn  2007  and  2008  respectively.  These  persons  used  CEBON 
supported by the collaborative tool in order to estimate the development effort of five 

1826

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

real  software  projects.  All  of  them  were  small-size  Web  information  systems.  The 
projects were specially selected for this experience.  

At the beginning of the exercise, students were assigned to groups (3-4 members 
per group). Each group was assigned to a different software project on which several 
adverse conditions were present, and the project had to be completed in spite of them.  
All projects required an introductory discussion in order to be able to understand 
the problem to be solved. Besides, in a couple of teams no person in the group knew 
the programming language that had to be used to develop the software. This implied 
the  development  team  would  have  to  dedicate  some  time  to  learn  how  to  use  the 
language first. 

Students started the estimation process by creating an entry for that project using 
the supporting tool. Then, they assigned an initial time span for the project based on a 
group  consensus.  Next,  they  divided  their  project  in  the  major  tasks  (or  major 
activities). At least one task was assigned to each team member. These persons were 
responsible  to  lead  the  estimation  of  the  tasks  assigned  to  them.  Therefore,  each 
student registered on the application his/her assigned tasks, and worked on getting a 
better  understanding  of 
they 
communicated the acquired knowledge on the assigned major activities to the rest of 
the team. 

to  him/her.  Afterwards, 

the  activity  assigned 

Then, the CEBON process was performed until an agreement was reached on the 
development time and cost for each task. Those individual task estimates were added 
up and a total time and cost were obtained for the whole project. Finally, the initial 
development  time  and  cost  agreed  by  the  team  were  compared  to  the  estimates 
obtained used CEBON. Such comparison indicates the students feel estimates using 
CEBON are most accurate. The same feeling had the instructors of the course, who 
are experienced software developers.  

At the end of this activity, the students were asked to answer a questionnaire. The 
questionnaire  was  intended  to  evaluate  CEBON  as  estimation  method  and  also  the 
collaborative supporting tool  as a  way to reduce the estimation effort. Next  section 
presents the obtained results. 

Obtained Results 

6.1 
Twenty  five  students  completed  this  activity  and  the  questionnaire:  eleven  persons 
during  2007  and  fourteen  during  2008.  The  questionnaire  asked  for  their  opinion 
about the methodology and the supporting application. This evaluation tool included 
the following statements. 
S1:  The  reasoning  behind  your  estimate  changed  once  you  saw  the  arguments 

presented by the rest of the group in the estimation phase. 

S2:  Because  of  CEBON,  your  group  reached  an  agreement  faster  than  in  a  regular 

estimation process. 

S3: The reached agreement is more accurate than the one you could have reached in a 

traditional estimation process. 

S4:  The  functionality/usability  of  the  software  tool  supporting  the  process  was 

adequate to perform the assigned activities. 

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

1827

S5:  This  tool  is  useful  to  register/retrieve  the  information  behind  the  main  tasks 

composing the project. 

S6: This tool could help you improve the time estimates you perform when working 

in a group, and to learn from past experiences. 
 
Figure 6 depicts the students’ answers to each statement. A general analysis of this 
information  indicates  there  is  an  important  degree  of  agreement  with  each 
proposition. This particularly occurs with those used to evaluate the supporting tool to 
the CEBON process (statements 4, 5 and 6). 

 

Figure 6: Students’ answers  

 

On the other hand, the results gathered for the statements evaluating the CEBON 
method  (statements  1  to  3)  indicate  the  method  helps  to  correct  the  estimates 
individually done by the team members (statement 1), and they feel more comfortable 
with the estimate if it need to be agreed (statement 3). Besides, the participants feel 
the estimation method helps to reduce the time required to generate an estimate, if it is 
compared  with  a  process  carried  out  through  typically  (unstructured)  estimation 
meetings  (statement  2).  Some  of  the  most  representative  answers  are  presented  in 
Table 6. 

The opinions gathered from the students who used the application indicate several 
positive  impacts.  As  a  summary  it  is  possible  to  say  they  appreciate  the  guidance 
provided  by  CEBON  and  the  support  given  by  the  supporting  tool.  Most  of  them 
think the method supported by the tool is appropriate for novice developers. They also 
highlighted the inexistence of some negative factors in the process, that are present in 
a traditional estimation meeting, such as fear to express the ideas or difficulty to close 
an estimation process because there are members who do not feel comfortable with 
the reached estimate. Furthermore, it was regarded useful to keep a record of a project 
and its tasks. Students considered that it could help them to improve their estimation 

1828

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

skills through learning from previous iterations and the experience provided by other 
users. 

Empirical Validation 

6.2 
The instructors of the course individually estimated each project in terms of cost and 
time in order to evaluate the accuracy of the estimation process. The instructors used 
Wideband Delphi because it is a method they typically apply for such activity. The 
standard deviation between the time estimates of the instructors and the students was 
in  the  range  of  15-30%,  which  is  highly  acceptable.  In  case  of  cost  estimates  the 
standard  deviation  was  in  the  range  of  35-50%.  Although  this  difference  is  not  so 
small,   the instructors think it was because  the students  are more familiar  with the 
development time than with the development costs. In addition, the time spent by the 
instructors to give their estimates was about 70% less than the average time spent by 
the teams. It could also be justified because the instructors are experienced persons: 
they knew well the process to be followed to get such estimates, and typically a group 
of two persons is more productive (per capita) than one composed by a larger number 
of members. 

Based on those estimates the instructors asked each team to reduce the assigned 
project scope in order to be developed in fourteen weeks (almost a semester). After an 
instructor’s review, the projects were executed. Four of these projects were finished 
on time and put into production. The last one  was not successful because the team 
work failed. However, the reduction of the project scope was good, and the project 
was  finished in 14  weeks. Therefore, the empirical results show CEBON  is able to 
support estimates by novice developers and provide quite accurate predictions.  

During  the  execution  of  this  experiment  the  authors  realized  the  value  of  the 
negotiation  when  the  knowledge  used  to  make  decisions  is  poor  or  uncertain.  This 
negotiation  process  leads  to  an  equilibrium  and  consensus,  which  is  vital  in  the 
described  work  scenario.  Since  all  participants  are  able  to  present  their  proposals, 
argue and choose their best options, the process  is perceived as fair. Therefore, the 
persons feel comfortable if they have to use it to estimate future projects. 

The process is non-invasive for the users since each phase of the proposed method 
involves  activities  that  are  known  by  the  participants,  and  these  activities  are  well 
integrated in a workflow. Most users indicated the estimation method was natural and 
easy. However, the authors believe this feeling is also a consequence of the use of the 
supporting tool. Fortunately, the tool has shown it is a good support for the CEBON 
method.  Otherwise,  the  estimation  process  could  have  had  some  problems,  for 
example:  (1) for sharing knowledge, (2) to allow a flexible participation of the team 
members, or (3) to obtain a comprehensive view of the contributions. 

 
 
 
 
 
 
 
 

 

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

1829

Stat. 

Developers agreed because 

Developers disagreed because 

P1 

P2 

P3 

P4 

P5 

P6 

The arguments from the rest of the 
group gave me a general view of the 
problem they were solving. Thus I can 
realize the challenges involved in the 
execution of each major task. 

The pre-established time limit set for 
each phase helped to manage the flow of 
the estimation session. This time limit is 
hard to control in a face-to-face meeting.
Moreover, the step-by-step process helps 
a lot to keep the control of the process, 
and the supporting tool helps to reduce 
the estimation effort. 

I am feeling comfortable providing an 
estimate that has been approved by all of 
us. Because I do not have too much 
experience estimating, I prefer 
something agreed. In fact, most of the 
individual estimates changed during the 
first review. 

I think the way projects and tasks are 
shown on screen is useful, and it eases 
the execution of each phase of the 
process. In addition, the tool gave us 
anonymity when we participated in a 
remote way. It avoid the persons be 
influenced (in favor or against) by the 
partners.  

The application stores all conversations 
and meetings held, the initial estimates, 
and this information can be accessed at 
any time of the estimation process. The 
information is well organized, so I was 
able to find everything just with two or 
three clicks. It really helps!! 

I learned a lot from this experience. I 
think I got more elements that will allow 
me to give more accurate estimates. 
About the time, I feel the supporting tool 
has a key role to keep the time involved 
in each phase of the process controlled. 

Since we had previously discussed initial 
and final dates, I knew which answers my 
partners were going to give when we were 
in the estimation phase. 

I am an experienced developer. I think I 
could get a sound estimate in the same time 
period, even without this method. 

At this point we do not know how accurate 
our estimate is. We have to validate this 
number against the real project 
development to see how accurate this 
method is. 

There was no way to coordinate the 
members of the groups once we were in the 
application. In addition, there was not 
enough awareness about the actions of my 
partners, and that the chosen color scheme 
was inadequate. 

There are other ways to show the 
arguments supporting the estimates without 
a need to take actions to retrieve them. 
 
 

The tool does not allow including in the 
context, the capabilities of each student, the 
working cohesion of the group and the 
uncertainty of the system requirements. 

Table 6: Reasons for agreement and disagreement 

1830

7 

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

Conclusions and Further Work 

CEBON  is  a  simple  estimation  method  based  on  negotiation,  which  is  intended  to 
support novice developers in that process. It is easy to apply and it seems to be able of 
generate  sound  estimations.  Since  there  is  no  estimation  methods  particularly 
designed for novice developers, CEBON represents a first step in that direction. The 
study  presented  in  section  2  shows  there  are  several  scenarios  without  experienced 
developers where accurate predictions on software project efforts are needed. 

In  order  to  support  people  using  CEBON  and  trying  to  reduce  the  CEBON 
application effort, a collaborative supporting tool was developed. Such tool partially 
automates the CEBON process and allows team members to participate in the process 
phases  not  only  face-to-face  but  also  in  a  distributed  way.  The  CEBON  model 
determined  the  requirements  behind  the  design  and  implementation  of  the  tool 
functionalities  to  support  the  phases  of  the  process.  CEBON  also  defined  the 
information  that  is  required  as  input  from  the  participants  in  each  stage  of  the 
estimation process, and the output of each one.  

Several elements were considered in the design of this supporting tool, in order to 
allow the users to work collaboratively. For example, the guiding component, which 
is  in  charge  of  aiding  all  group  members  in  the  way  they  have  to  input  their 
contributions to the discussions. Thus, such contributions become easy to read for the 
rest of the participants and to use (in the best way possible) during the time dedicated 
to  hold  these  meetings.  The  early  definition  of  a  communication  protocol  based  on 
communicative actions was extremely useful to reach this goal.  

The  proposal  was  evaluated  through  five  projects;  all  of  them  were  small  Web 
information  systems.  The  experimental  validation  activity  was  carried  out  by  25 
senior  undergraduate  students  at  the  University  of  Chile.  The  validation  process 
involved an estimation exercise where the results were compared with the instructors’ 
predictions. Based on the obtained results it is possible to say the proposal is able to 
deliver quite accurate results, the novice developers feel comfortable using it and they 
feel they are able to improve the estimation skills because of the feedback gathered 
during  the  process.  Additionally,  an  adaptation  of  such  projects  (with  an  estimated 
development  effort  of  14  weeks)  was  defined  and  executed  by  each  team.  80%  of 
these  projects  were  finished  successfully  indicating  there  was  a  correspondence 
between the estimated effort and the real effort. The other 20% (corresponding to one 
project)  was  unsuccessful  not  because  of  a  wrong  estimation  but  a  coordination 
problem inside  the  group that does not allowed team  work. These empirical results 
support  the  previous  ones,  indicating  the  proposal  would  be  able  to  provide  quite 
accurate estimations when it is used by novice developers.   

On  the  other  hand,  more  experimentation  it  is  still  required  to  get  strong 
conclusions. Particularly, it is important to determine the role of the supporting tool in 
the success of these predictions. The authors are sure the feedback gathered in future 
experience  will  allow  improving  the  estimation  method  and  the  supporting  tool.  In 
addition, the authors want to evolve this proposal to enhance the learning process the 
users can follow to improve their estimation skills. 

 
 

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

1831

Acknowledgements 
This  work  was  partially  supported  by  Fondecyt  (Chile),  grants  Nº:  11060467  and 
1080352.  

References 

[Arroyo et al. 2008] Arroyo, R.F., Gea, M., Garrido, J.L., Haya, P.A., Carro, R.M.: “Authoring 
Social-aware Tasks on Active Spaces”; Journal of Universal Computer Science 14, 17 (2008), 
2840-2858. 
[Boehm  1981]  Boehm,  B.:  “Software  Engineering  Economics”;  Upper  Saddle  River,  NJ:  
Prentice Hall PTR, (1981). 
[Boehm et al 2000] Boehm, B., Abts, C., Brown A.W., Chulani, S., Clark, B. K., Horowitz, E., 
Madachy,  R.,  Reifer,  D.,  Steece,  B.:  “Software  Cost  Estimation  in  COCOMO  II”;  PrenticeHall,
 1st Edition, (2000). 
[Braga  de  Vasconcelos  et  al.,  2003]  Braga  de  Vasconcelos,  J.,  Kimble  C.,  Rocha,  A.: 
"Organizational Memory Information Systems An example of a Group Memory System for the 
Management of Group Competencies"; Journal of Universal Computer Science 9, 12, (2003), 
1410-1427. 
[Brodt  1997]  Brodt,  S.  (ed.).:  “Innovative  Approaches  to  Research  on  Group  Decision  and 
Negotiation”; Group Decisions and Negotiation. Springer (1997).  
[Camillus 2008] Camillus, J.C.: "Strategy  as a  Wicked Problem”; Harvard Business Review, 
86,5 (2008), 98-106. 
[Ferens  and  Christensen  1998]  Ferens,  D.V.,  Christensen,  D.S.:  “Calibrating  Software  Cost 
Models  to  Department  of  Defense  Databases  –  A  Review  of  Ten  Studies”;  (1998),  URL: 
www.amc.army.mil/amc/rm/files/proj_decalogue.pdf. 
[IDC 2003] International Data Corporation (IDC) Chile: “The Chilean Software Industry”; A 
Study for Japan External Trade Organization (in Spanish), (2003). 
[In and Olson. 2004] In, H.P. and Olson, D.: "Requirements Negotiation Using Multi-Criteria 
Preference Analysis"; Journal of Universal Computer Science 10, 4 (2004), 306-325. 
[Leibenstein 1950] Leibenstein, H.: “Bandwagon, Snob, and Veblen Effects in the Theory of 
Consumers' Demand”; Journal of Economics, 64, 2, (1950), 183-207. 
[Matson  et  al.  1994]  Matson,  J.,  Barret,  B.,  Mellichamp,  J.:  “Software  Development  Cost 
Estimation Using Function Points”; IEEE Transactions on Software Engineering 20, 4, (1994), 
275-287. 
[Nunamaker  et  al.  1991]  Nunamaker,  J.  F.,  Dennis,  A.,  Valacich,  J.,  Vogel,  D.,  George,  J.: 
“Electronic  meeting  systems  to  support  group  work”;  Communications  of  the  ACM  34,  7, 
(1991), 40-61. 
[Ochoa et al 2003] Ochoa, S., Bastarrica, C., Parra, G.: "Estimating the Development Effort of 
Web Projects in Chile"; Proceedings of the First Latin American World Wide Web Conference 
(LA-WEB 2003), IEEE CS Press, Santiago, Chile, (2003), 114 – 122.  
[Ochoa  et  al  2007]  Ochoa,  S.F.,  Pino,  J.A.,  Andrade,  D.:  “Strategies  to  Estimate  the 
Development  Effort  of  Web  Projects  in  Immature  Scenarios”  (in  Spanish);  Revista  de  la 
Pontificia Universidad Católica del Ecuador, 81, (2007), 125-171.  

1832

Ochoa S.F., Pino J.A., Poblete F.: Estimating Software Project ...

[Phillips  1998]  Phillips,  D.:  “The  Software  Project  Manager’s  Handbook”;  IEEE  Computer 
Society Press, (1998). 
[Quignard, and M. Baker 1997] Quignard, M. and Baker, M.: “Modeling Argumentation and 
Belief Revision in Agent Interactions”; 2nd European Conference on Cognitive Science (ECCS 
97). Manchester, U.K., (1997). 
[Reifer 2000] Reifer, D.J.: “Web Development: Estimating Quick–to-Market Software”; IEEE 
Software, 17, 6 (2000), 57–64. 
[Rittel  and  Webber  1973]  Rittel,  H.  and  Webber,  M.:  “Dilemmas  in  a  general  theory  of 
planning”; Policy Sciences, 4, Elsevier Scientific Publishing Company (1973), 155-169. 
[Sacre 2003] Sacre, E.: “A Methodology To Develop Web Applications in Small and Medium 
Size  Enterprises”;  Master  Thesis  (in  Spanish).  Computer  Science  Department,  University  of 
Chile (2003). 
[Stein 2003] Stein, W.: “A Web Software Process for Small or Medium-Sized Projects Focused 
on  the  Chilean  Scenario”;  Engineering  Thesis  (In  Spanish).  Computer  Science  Department, 
University of Chile, (2003).  
[Thackaberry  and  Rada  1998]  Thackaberry,  C.W.,  and  Rada,  R.:  "Estimation  Metrics  for 
Courseware  Maintenance  Effort";  Journal  of  Universal  Computer  Science  4,  3,  (1998),  308325.
 
[Thompson 2007] Thompson, P., Iqbal, R., James, A.: “Supporting Decision Making in CSCW 
Design”;  Proceedings  of 
the  11th  International  Conference  on  Computer  Supported 
Cooperative Work in Design (CSCWD’07), IEEE Press, (2007), 651-656.  
[Zabala et al. 1999] Zabala, S., Lara, I., Gener, H.: “Beliefs, Reasons and Moves in a Model for 
Argumentative Dialogues”; Proceedings of the CLEI’99 Conference, Paraguay, (1999). 
 

