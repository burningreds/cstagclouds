Building Real-World Ad-Hoc Networks to Support 
Mobile Collaborative Applications: Lessons Learned 

Roc Messeguer1, Sergio F. Ochoa2, José A. Pino2, Esunly Medina1, Leandro Navarro1, 

Dolors Royo1, and Andrés Neyem3 

1 Department of Computer Architecture, Universitat Politècnica de Catalunya, Spain 

{messeguer,esunlyma,leandro,dolors}@ac.upc.edu 

2 Department of Computer Science, Universidad de Chile, Chile 

{sochoa,jpino}@dcc.uchile.cl 

3 Department of Computer Science, Pontificia Universidad Católica de Chile, Chile 

aneyem@ing.puc.cl 

the  constraints 

Abstract.  Mobile  collaboration  is  required  in  several  work  scenarios,  i.e.  
education, healthcare, business and disaster relief. The features and capabilities 
of the communication infrastructure used by mobile collaborative applications 
will influence the type of coordination and collaboration that can be supported 
in real work scenarios. Developers of these applications are typically unaware 
of 
the  
collaborative  system.  Therefore,  this  paper  presents  an  experimental  study  of 
how  ad-hoc  networks  can  effectively  support  mobile  collaborative  work.  The 
article analyzes several networking issues and it determines how they influence 
the  collaborative  work.  The  paper  also  presents  the  lessons  learned  and  it  
provides  recommendations  to  deal  with  the  networking  issues  intrinsic  to  adhoc 
networks. 

the  communication 

infrastructure 

imposes  on 

Keywords:  Mobile  Collaboration,  Communication  Support,  Wireless  
Networks. 

1   Introduction 

Collaborative applications are intended to support the work performed by a group of 
collaborators who pursue a common goal. The focus in recent years has been stationary 
collaboration; however, advances in mobile computing and communication have 
made mobile collaboration a real possibility. Medical applications [12, 2], collaborative 
 learning  [20],  emergency  management  [14],  and  productive  activities  [15]  are 
some of the application areas for mobile collaborative solutions. 

The idea behind this new CSCW paradigm is to support collaboration among mobile 
users, regardless of their physical location. The physical location of each participant 
 can  be  a  precious  source  of  contextual  information  for  collaboration  support 
applications, and it should not be a limitation to collaborate.  

Two decades ago, Ellis et al. showed the coordination and collaboration depended on 
communication [6]. Therefore, if  we want  to enable coordination and collaboration in 
several mobile work scenarios, then we have to improve the communication capabilities 

L. Carriço, N. Baloian, and B. Fonseca (Eds.): CRIWG 2009, LNCS 5784, pp. 1–16, 2009. 
© Springer-Verlag Berlin Heidelberg 2009 

2 

R. Messeguer et al. 

among  the  mobile  users.  Today,  the  wireless  communication  technologies  partially 
match the mobile users’ communication needs. That means mobile groupware designers 
must take into account the capabilities and limitations of the communication infrastructure,
 when they are designing a new collaborative application.  

This  article  presents  a  study  showing  when  and  how  an  ad-hoc  network  can  be 
used to support mobile collaborative work, and also which are the limitations and the 
considerations to be applied for mobile groupware application design. The study involved 
 several  experiments  carried  out  in  representative  work  scenarios,  using  realworld 
ad-hoc network implementations.  

The next section presents the communication requirements to support mobile collaborative 
 work.  Section  3  describes  the  test  bed  used  in  this  study.  Section  4  
describes  the  experimental  evaluation.  Section  5  presents  the  lessons  learned  and 
section  6  lists  the  recommendations  to  deal  with  ad-hoc  networking  issues.  Finally, 
section 7 presents the conclusions and future work. 

2   Requirements on Ad-Hoc Communication for Mobile 

Collaborative Applications 

We define an ad-hoc network as an autonomous and decentralized system formed by 
a  collection  of  cooperating  nodes  which  are  connected  by  wireless  links.  They  can 
dynamically self-organize and communicate among them, in order to make up a network 
without necessarily using any pre-existing infrastructure. Some of the key features 
of these networks are the following: self-organizing network, multi-hop routing, 
wireless  links  with  a  dynamic  topology  (joining/leaving  nodes  and  wireless  links 
changes). 

Mobile collaboration supported by these networks must consider several communication 
 requirements  in  order  to  enable  group  work  in  ad-hoc  settings.  These  requirements 
are briefly explained below.  

1. 

2. 

Adequate  network  performance.  Mobile  collaboration  requires  a  stable  and 
sufficient  network  performance.  Whenever  two  persons  decide  to  interact, 
the  communication  link  must  be  able  to  support  it.  Network  performance 
problems are frequent as users move and the network topology changes. The 
most critical parameters are latency (i.e. time required to transport the information 
between two locations), jitter (i.e. the variance of the latency) and insufficient 
throughput (i.e. data transfer rate) [4]. 
Reliability. Communication reliability is related to the trustworthiness of the 
communication  link to transfer information between two points. Reliability 
design software techniques are used to deal with typical data transfer problems 
such as packet loss and ordering [4]. 

3.  Dynamic  network  architecture. Typically, the  network architecture controls 
the data distribution strategy used to transport the information between two 
points.  Since  ad-hoc  networks  are  dynamic  in  terms  of  topology,  performance 
 and  reliability,  the  groupware  system  has  to  adapt  itself  to  determine 
the  distribution  schemes  which  are  best  suited  for  a  particular  application 
and collaboration scenario [4]. 

Building Real-World Ad-Hoc Networks to Support Mobile Collaborative Applications 

3 

4. 

5. 

Interoperability. Mobile users must be allowed to interact with anyone else 
on a casual or opportunistic collaboration. As a consequence their collaborative 
mobile applications should offer interoperability of communication, data 
and services [13]. 
Awareness of users’ reachability. Mobile users need to know if a particular 
user is reachable when they intend to start a collaborative activity [13]. 

Several studies have been published about how these issues affect groupware applications 
when they run over Internet. A study presented by Gutwin et al. shows perform-
ance/usability  of  real-time  distributed  groupware  applications  depends  on  network 
parameters  such  as  latency,  jitter,  packet  loss,  bandwidth  and  type  of  traffic 
(UDP/TCP) [7]. Network delays due to latency and jitter have serious effects on us-
ers’  work, causing difficulties in coordination and  forecasting [7]. In extreme situations 
they cause communication break downs; this occurs,  e.g.,  when latency > 300 
ms [18], or jitter > 500 ms [5]. It has been also reported that insufficient bandwidth 
increases latency and packet loss [7]. It is clear at least some of these issues will also 
affect  collaboration  on  ad-hoc  networks.  That  motivates  this  paper  which  tries  to 
determine  how  networking  issues  affect  mobile  collaboration  supported  by  ad-hoc 
networks. 

The study presented in this article evaluates whether the networking issues in adhoc 
 networks  are  comparable  to  those  obtained  on  extreme  situations.  It  intends  to 
provide mobile application designers with a range of values that can be found in realworld 
work scenarios, for a set of key networking parameters such us throughput (i.e. 
real bandwidth), packet loss, latency and jitter. The study also provides advice on how 
to keep the network performance and reliability within acceptable ranges. 

3   Test Bed Description 

All the tests involved in this study used real-world ad-hoc networks. The traffic was 
emulated to ensure the repeatability of the results. In order to provide realism to the 
simulated traffic, the study followed the recommendations by Kiess and Mauve [11]. 
Next  sections  present  the  hypotheses  and  the  experimentation  scenarios  involved  in 
this study. We also describe the routing protocols, hardware and software used in the 
experimentation process. 

3.1   Work Hypotheses 

The work hypotheses involved in this study are the following ones: 

Hypothesis  1.  The  network  bandwidth  and  reliability  decrease  when  increasing 
number of hops between the sender and receiver nodes.  
Hypothesis 2. The network bandwidth and reliability decrease with increasing mobility 
of the nodes.  
Hypothesis 3. The network bandwidth and reliability decrease due to increasing interference 
generated by mobile devices from other users.  

4 

R. Messeguer et al. 

Hypothesis 4. Routing protocols based on number of hops (such as BATMAN [9]) 
have  better  reliability  and  bandwidth  than  protocols  based  on  statistics  (such  as 
OLSR [8]). 
Hypothesis 5. In ad-hoc networks, communication on UDP has better performance 
than communication on TCP. 

3.2   Experimentation Scenarios 

In order to validate the hypotheses, the  study considered three experimentation sce-
narios:  static,  mobile  and  working  group  scenarios.  These  three  scenarios  represent 
key situations in collaborative activities. Each one is briefly described below. 

Static work scenario: Communication can occur between any pair of users independently 
of the distance between them. There was no mobility in this scenario (each node 
was stationary), and the network topology was chain. Five nodes were located at 11 to 
14 meters of distance between them; therefore, a 4-hops ad-hoc network was established.
 Since this scenario allows monitoring and reproducing the network multi-hop 
behavior, it was used to validate hypothesis 1. 

Mobile work scenario: A single person moves around the room while the other users 
are still working. This test scenario is similar to the first one, because it uses the same 
hardware  and  network  topology.  However,  this  new  one  introduces  nodes  mobility, 
implemented  through  a  mobile  user  who  continually  walked  between  both  ending 
points of the network. In this case, an extra node (i.e. node 6: the node used by the 
mobile  user)  was  included  in  the  test  scenario.  The  test  began  with  node  6  located 
close to node 1 (network ending point), and the data transfer is always done between 
the mobile user and node 5 (the other network ending point). Packet filtering was also 
used in order to force the communication between these nodes always goes through at 
least 2 hops. This scenario was used to validate hypothesis 2 because it is possible to 
isolate the effect produced by a mobile user. 

Working groups scenario: People work in groups and wish to exchange information 
within their group or between groups. We prepared two different sub-scenarios. The 
first one involved two groups composed of three mobile nodes each, and one group 
consisting of two mobile nodes. These tests were carried out in a laboratory of 146 m2 
and the distance between groups was about 12 to 18 meters. The second sub-scenario 
involved  two  groups  of  four  mobile  nodes  each.  The  distance  between  groups  was 
about 8 meters. In both cases the data transfer must be performed among group members 
or between groups. This test scenario was used to validate hypothesis 3. 

The validation of hypotheses  4 and 5 does not require specific settings; therefore 

they can be evaluated in each of the described test scenarios.  

3.3   Routing Protocols of Mobile Ad-Hoc Networks  

The routing protocol usually has an important role in network reliability and performance.
 Thus, we reviewed the most widespread protocols and we selected the following 
ones:   

Building Real-World Ad-Hoc Networks to Support Mobile Collaborative Applications 

5 

Better Approach To Mobile Ad-hoc Networking (BATMAN) [9]. The routing metric 
used by this protocol is the number of hops involved in the communication. This is a 
proactive  routing  protocol  using  a  distance  vector  approach  to  determine  the  best 
route between sender and receiver. The routing metric represents the main criterion to 
determine the best path for data transmission, from a given source to a given destination.
 The protocol implementation used during the tests was BATMANd for Linux.  

Optimized Link State Routing Protocol (OLSR) [8]. The routing metric used by this 
protocol is Expected Transmission Count (ETX) [3]. This is a proactive routing protocol 
using a link state approach to select the optimal route. The routing metric represents 
the main criterion to determine the best path for data transmission, from a given 
source  to  a  given  destination.  The  protocol  implementation  used  in  the  test  was 
OLSRd for Linux and Windows. 

3.4   Metrics for Link Quality Evaluation 

The  metrics  used  to  assess  link  communication  quality  during  the  tests  were  those 
relevant  for  mobile  collaborative  work  (described  in  section  2)  and  also  those  designed 
to determine the Mobile Ad-hoc Networks (MANETs) protocols performance 
[3, 11]. The metrics provided by the traffic generator itself were also taken into account 
[16]. These  metrics  were divided into three groups,  depending on the type of 
traffic  used  for  measuring  them:  (1)  ICMP  traffic  metrics  using  Round-Trip  Time 
(RTT), (2) UDP traffic metrics considering throughput, packet loss and jitter, and (3) 
TCP traffic  metrics involving throughput,  handshake time, out of order packets and 
number of re-transmissions. 

The  UDP/TCP  traffic  was  generated  using  the  Iperf  tool  [16].  The  metrics  were 
measured by conducting a 60 seconds test, on  which UDP/TCP packets  were transferred 
between a given source-destination pair. For UDP, packets were generated at 
different  bit  rates;  consequently,  several  UDP  traffic  loads  were  offered  to  the  network.
 Unlike with UDP, in the TCP experiment we tested the maximum achievable 
throughput; therefore, no given bit rates were specified. 

The RTT was measured by conducting a 60 seconds test, on which ICMP packets 
were  transferred  between  a  source-destination  pair,  using  the  regular  ping  service. 
Those experiments were carried out for packet sizes of 64 or 1024 bytes. 

3.5   Hardware 

The experiments were carried out using eight laptops. Six of them were HP NX6310 
with an IBM Intel Core 2 T5500 of 1.66 GHz processor and 1 GB of RAM. Each of 
these computers had an internal Intel PRO/Wireless 3945ABG Network Connection 
card for IEEE 802.11b/g wireless connectivity. In addition, two HP NX6110 laptops 
were also used in the experiments. These computers are almost equal to the previous 
ones;  the  only  difference  is  the  model  of  the  internal  wireless  card  (Intel 
PRO/Wireless 2200BG card for IEEE 802.11b/g). During the experiments, the wireless 
cards on the laptops were set to channel 1 at the 802.11b/g band, using auto rate, 
transmission power 1 dBm and RTC/CTS off, following recommendations in [10]. 

6 

R. Messeguer et al. 

3.6   Test Bed Supporting Software 

All laptops were equipped with Linux Operating System (Ubuntu 8.04 Linux distribution 
with the 2.6.24-19-generic kernel) and also MS Windows XP. The traffic generator 
used in the test was Iperf (version 2.4) and the regular ping service provided by the 
operating system.  

The traffic analyzers were Wireshark, and tcpdump (similar to Wireshark but with 
a  command  line  interface).  A  MAC  filter  was  also  used  to  classify  packets  on  the 
MAC layer and force a  multi-hop behavior avoiding direct communication between 
two nodes [11]. 

In order to avoid the human intervention as much as possible, a LiveCD was prepared.
 This LiveCD adds an extension to the operating system facilitating the test bed 
implementation, use and data gathering [17].  

4   Experimentation / Evaluation Ad-Hoc Networks 

This section presents the obtained results in the tests performed in the three described 
work  scenarios.  The  results  allow  mobile  application  designers  to  see  the  range  of 
values that can be found in real work scenarios, for each key networking issue. These 
results allow also understanding the degree of validity of the hypotheses. 

4.1   Static Work Scenario 

The tests in all work scenarios involve at least 10 repetitions in order to get representative 
values. In the static work scenario it is possible to see that the RTT (Round-Trip 
Time) increases with the number of required hops and also with the packet size. For 
small packets the behavior of OLSR and BATMAN is similar (Fig. 1) and the RTT 
seems to be comparatively better with large size packets. 

Fig. 1. RTT of the ping service, using different routing protocols and packet sizes 

 

Figure 2 and 3 show the throughput decreases with the number of hops using both, 
UDP and TCP transport protocols. Once again, for both types of traffic, the behavior 
of  OLSR  and  BATMAN  was  similar.  In  case  of  TCP,  the  packet  out  of  order,  retransmission 
 and  handshake  time  (about  0.5  ms)  are  zero  or  negligible  numbers.  In 
both routing protocols the values are almost equal (Fig. 3). 

Building Real-World Ad-Hoc Networks to Support Mobile Collaborative Applications 

7 

 

 

Fig.  2.  Throughput  on  UDP,  considering 
various routing protocols and number of hops 

Fig.  3.  Throughput  on  TCP,  considering 
various routing protocols and number of hops 

4.2   Mobile Work Scenario 

For all considered TCP metrics, BATMAN has a better behavior than OLSR (Table 1). 
It can be due to the fact that OLSR uses the ETX metric for the selection of the routes, 
and the ETX metric utilizes statistical information of the 10 last probes to compute its 
current value. Since the mobile user location is constantly changing, the computed best 
route  becomes  out-dated  soon  when  using  OLSR.  Therefore,  it  will  involve  a  major 
rate of out-of-order packets and a higher number of retransmissions.  
 
 
Table 1. Routing protocols comparison using 
TCP 

 

 

 

Fig.  4.  Throughput  on  UDP,  considering 
various offered loads 

 
The RTT  was similar for both protocols. However, BATMAN showed a  slightly 
better  UDP  throughput  than  OLSR  for  medium  offered  loads.  For  higher  loads  the 
behavior of the routing protocols shows reversed results (Fig. 4). 

4.3   Working Groups’ Scenario 

As mentioned in section 3.2, this experimentation scenario has two sub-scenarios to 
be implemented. The first one is composed of three groups of nodes, and the second 

8 

R. Messeguer et al. 

one  has  two  groups  of  mobile  users.  The  experimentation  results  belonging  to  each 
sub-scenario are presented below.  

4.3.1   First Experimentation Sub-scenario 
This experimentation process involved two groups composed of three  mobile  nodes 
each  one,  and  a  third  one  composed  of  two  mobile  nodes.  In  this  case  the  mobile 
nodes  belonging  to  the  three  groups  were  transmitting  and  receiving  information 
during all the observed period.  
 

(a) 

(b) 

 

Fig.  5.  UDP  throughput  intra/inter-group  transmissions,  using  two  protocols  and  various  
offered loads 

Figure  5a  shows  the  UDP  throughput  obtained  by  three  groups  of  mobile  users, 
when they communicate inside the group (intra-group interactions) using both routing 
protocols.  The  experiment  considered  mainly  offered  loads  of  2000  and  3000  kbps 
which  are  typical  values  to  be  found  in  mobile  collaboration  scenarios  on  wireless 
networks.  Figure  5b  shows  the  results  of  the  same  experiment,  but  now  involving 
mobile users communicating with users belonging to other groups (inter-group inter-
actions). 

These results show both routing protocols are similar when the offered load is 2000 
kbps  or  less.  After  that  limit,  the  throughput  obtained  with  OLSR  is  superior  to 
BATMAN. This situation is a consequence of the high mobility of the nodes. In this 
case, the routing tables of both protocols become rapidly out-dated; however, OLSR 
has  a  better  capability  to  adapt  itself  to  the  new  network  characteristics.  In  other 
words, that protocol reacts faster and better to the changes in the networking context. 
This capability is fundamental to support collaboration among users with high mobility,
 such as emergency management.  

4.3.2   Second Experimentation Sub-scenario 
This experimentation scenario involved two groups; each one composed of four mobile 
 nodes.  Intra  and  inter-group  communication  were  evaluated  in  this  scenario. 
Figure 6 shows results of UDP throughput considering intra-group communication. In 
this  case  both  protocols  show  a  similar  behavior  when  the  data  transfer  is  between 

Building Real-World Ad-Hoc Networks to Support Mobile Collaborative Applications 

9 

group  members  and  the  offered  load  is  below  2000  kbps.  After  that  limit  OLSR  is 
able to obtain up to 500 kbps over BATMAN.  

However there is an important difference in the network behavior when the communication 
is among groups. In that case, BATMAN performs better than OLSR for 
loads over 600 Kbps. In those settings BATMAN is able to reach up to 800 Kbps of 
“extra” received throughput (Fig. 7).  This situation could be explained by considering 
 the  ETX  link  quality  metric.  OLSR  uses  2-hops  routes,  which  means  a  lower 
received throughput in comparison with the 1-hop route used by BATMAN. 
 

Fig. 7. Inter-group communication involving 
mobile nodes  

Fig.  6.  Intra-group  communication  involving 
mobile nodes 
 
Table 2 shows the network throughput decreases with an increase in the number of 
transmitting nodes (1 tx: one node transmitting per group, 2 tx: two nodes transmitting 
per group, and so on). The rest of the networking issues are consistent with this 
situation because, e.g., the % of packet loss and the jitter increase with the number of 
transmitting nodes. These results could be showing hypothesis 3 is valid.  

Table 2. Key networking issues vs. routing protocols and offered load 

 
These experiments were reproduced, but using TCP as transport protocol. The obtained 
results were similar to those obtained on UDP. In other words, OLSR performs 
better than BATMAN when the communication is intra-group, but BATMAN has a 
better performance when communication is inter-group. 

 

10 

R. Messeguer et al. 

If we analyze the network behavior when UDP was used, it is possibly to notice the 
performance is affected (in terms of jitter, % packet loss and received throughput) by 
the number of nodes which are transmitting inside each group.  

 

Fig. 8. UDP throughput vs. number of transmitting 
nodes 

Fig.  9.  UDP  jitter  vs.  number  of  transmitting 
nodes 

 

Table 3. Key networking issues vs. number of transmitting nodes (per group) 

 

 

In  order  to  understand  this  influence,  we  used  just  one  routing  protocol: 
BATMAN. On the one hand, Fig. 8 shows the throughput increases with the number 
of  transmitting  nodes.  On  the  other  hand,  Fig.  9  shows  the  network  jitter  increases 
with the number of transmitting nodes. However, the difference is relevant just over 

Building Real-World Ad-Hoc Networks to Support Mobile Collaborative Applications 

11 

2000 kbps of offered load. Table 3 summarizes the results obtained for the key networking 
issues, when two, three and four transmitting nodes are involved. 

4.4   Validation of the Hypotheses  

Next  a  brief  validity  analysis  of  the  hypotheses  is  presented  based  on  the  results 
shown in the previous sections. 
 
Hypothesis 1 - The network bandwidth and reliability decrease when increasing the 
number of hops between the sender and receiver nodes. Figure 2 and 3 show how the 
throughput decreases with the number of hops for both, UDP and TCP transport protocols.
 Therefore, hypothesis 1 is validated by the experiments. 

Hypothesis 2 -  The  network bandwidth  and  reliability  decrease  with  the  mobility  of 
the  nodes.  Unfortunately  the  study  does  not  show  significant  information  related  to 
the  validity  of  this  hypothesis.  However  comparing  the  results  obtained  in  mobile 
work (section 4.2) and working group scenarios (section 4.3) it seems the mobility of 
the users affects negatively the network throughput, if we consider the same number 
of transmitting nodes. If the mobile users are close to each other, network cards produce 
 interference  with  each  other  and  therefore  the  network  performance  degrades 
(Table 3). 

Hypothesis  3  -  The  network  bandwidth  and  reliability  decrease  due  to  the  interference 
from other mobile users. Based on the results presented in Tables 2 and 3, it is 
highly probable hypothesis 3 be true. 

Hypothesis 4 -  Routing  protocols  based  on  number  of  hops  (such  as  BATMAN  [9]) 
have  better  reliability  and  bandwidth  than  protocols  based  on  statistics  (such  as 
OLSR [9]). The study does not show results able to validate this hypothesis. In static 
multi-hop scenarios the results seem to be similar. However, the use of the ETX metric 
 degrades  the  network  performance  when  OLSR  is  used.  In  mobile  scenarios  the 
results depend on the level of mobility of the users. In high mobility, OLSR seems to 
be slightly better than BATMAN. 

Hypothesis 5 - In ad-hoc networks, communication on UDP has better performance 
than communication on TCP. In the work scenarios involving mobility, the obtained 
results (Figs. 2 and 3; Tables 1 and 2) are showing the UDP communication degrades 
slower than TCP communication. Therefore, the throughput on UDP is higher than on 
TCP. These results are showing this hypothesis could be valid. 

5   Lessons Learned 

After the tests performed in the described scenarios, there is much empirical information 
that  must be considered by  mobile groupware application designers. This information 
will be relevant to understand the capabilities and limitations of a collaborative application,
 when it supports mobile work in a real work scenario. For example, the communication 
support degrades when: 

12 

R. Messeguer et al. 

• 

• 

The number of hops required to transport a message increases. Evidence of 
it is a reduction in throughput, a greater latency, and major packet loss. It affects 
the mobile collaborative work when the users are disperse, for example 
on activities taking place in a hospital. 
The  mobility  of  users  increases.  Typically  the  latency  increases  and  the 
throughput decreases because the routing protocols are not fast enough to react 
 to  the  changes  in  the  network  topology  and  composition.  It  affects  the 
collaboration  in  scenarios  with  high  mobility;  for  example  in  emergency 
situations, such as big fires or urban search-and-rescue. 

•  Collaborators  are  very  close  to  each  other.  Typically  the  throughput  decreases 
and the packet loss increases. Although the throughput in these scenarios 
 is  good  enough  to  support  collaboration  at  moderate  rates,  network 
demanding applications (such as audio/videoconference systems) can be seriously 
affected.  

 

Routing  protocols  enable  communication  beyond  the  immediate  neighbors,  i.e.  at 
more  than  one  hop  of  network  distance.  It  means  that  a  user  can  collaborate  with 
persons located in other buildings, just because of using a routing protocol. Otherwise 
the user is restricted to collaborate with persons that are physically sufficiently close. 
The behavior of the routing protocols is diverse. Therefore, the designer must select 
 that  protocol  depending  on  the  users’  mobility,  and  the  features  of  the  work 
physical scenario. Something similar happens with the transport protocols. Typically 
connection-less  transport  (e.g.  UDP)  provides  a  better  throughput  than  connection 
oriented  (e.g.  TCP).  Path  redundancy  could  help  to  increase  the  communication 
throughput.  

6   How Applications Can Deal with the Ad-Hoc Networking Issues 

This section presents a list of recommendations to deal with the communication issues 
in  mobile  collaboration,  which  were  presented  in  section  2:  network  performance 
(measured  in  terms  of  throughput,  latency,  and  jitter),  communication  reliability 
(measured in terms of packet ordering and loss), interoperability (measured in terms 
of hardware, and data and services exchange), awareness  of  users’  reachability and 
the  dynamic  property  of  the  network  architecture.  The  following  sections  present 
possible  solutions  on  the  application  layer,  which  help  to  deal  with  the  challenges 
imposed by the communication limitations of MANET networks.  

6.1   Dealing with Network Performance and Reliability 

Dealing  with  network  performance  and  reliability  can  be  faced  by  applications  in 
several ways. Some of them are the following ones: 

Data compression. Compression is applied to the volume of data required to represent 
information.  It  helps  to  increase  the  apparent  throughput  [4]  and  it  also  results  in 
smaller packets on the network, which reduces the packet loss during the interactions 
among mobile users. 

Building Real-World Ad-Hoc Networks to Support Mobile Collaborative Applications 

13 

Rate  control.  In  order  to  improve  performance,  network  transmission  should  be  decoupled 
from the system’s event model, and the transmission rates should be carefully 
regulated. Because MANETs have a limited bandwidth which has to be shared among 
all nodes which are transmitting concurrently, the regulation of the transmission rate 
on each node could be a solution to avoid the collapse of the network when it is overloaded 
 (system-wide  rate  regulation  systems  may  also  help  to  maintain  a  quality  of 
service  level).  Therefore,  applications  might  adapt  by  decoupling  communication 
from  user  interaction  or  other  tasks  and  by  considering  alternative  data  encodings 
selected depending on current network conditions. 

Adaptive user interfaces. Applications that dynamically change their interaction paradigm 
can better accommodate to changing network conditions. Thus, applications can 
deliver a limited or extended level of  service to the end-user depending on the  network 
conditions (e.g. moving from high to low video, to audio only or text communication 
according to the network conditions). This type of self-adaptation mechanism 
allows applications to adapt gracefully    reducing the impact of the network changes 
on end-users. 

Revealing  network  problems.  Revealing  network  problems  can  be  implemented  as 
awareness components, which inform users about networking problems. Thus, users can 
take some action to try to solve or mitigate the problem. For example, when a mobile 
user becomes isolated, the awareness mechanism can inform him/her about that. Therefore,
 the user can change his/her location to be able to interact with other users. 

Multicasting. Multicast, i.e., sending a message to multiple destinations at once, could 
help  to  eliminate  data  redundancy  freeing  network  capacity,  or  allowing  additional 
interactions among mobile users. However, multicast can become another issue when 
network  links  are  diverse  in  capacity  and  for  applications  requiring  reliable  group 
communication. 

6.2   Dealing with Interoperability, Awareness of Users’ Reachability, and 

Dynamic Network Architectures  

There are several ways of dealing with interoperability, awareness of users’ reachability,
 and various network architectures. Some of them are the following ones: 

Cross  layer  interaction.  The  cross  layer  pattern  recommends  the  separation  of  concern 
 in  different  layers,  and  the  sharing  of  information  among  them  [13].  Although 
sharing  information  between  network  layers  adds  complexity  and  breaks  layered 
models, it provides a very useful mechanism to deal with dynamic network architectures.
 For example, the routing mechanisms can self-adapt based on information from 
the network layer and help to improve the throughput on the network.  

Standardized solutions. Beyond typical data and service interoperability required for 
effective  interaction  among  continuously  changing  groups  of  participants,  mobile 
work  scenarios  will  benefit  from  specific  transport  and  routing  protocols  optimized 
for  a large range of mobile devices (from cellular to laptops), supporting bi-lateral, 
multi-lateral, synchronous and asynchronous communication. 

14 

R. Messeguer et al. 

Gossip  propagation  mechanisms.  Sometimes  two  collaborators  are  unreachable  because 
there is no link between them. Then, it is possible to deliver a gossip, which is 
message travelling through the network during a certain time period, looking for the 
destination user. Typically, these messages (if they are received by the destination) try 
to promote an encounter. For example,  “URGENT:  try  to  be  at  …  after  lunch”. Although 
 this  mechanism  may  not  always  succeed,  it  can  contribute  to  improve  the 
reachability of users in disperse work scenarios or in situations in which few persons 
work together at the same time. 

Pushing notifications. Typically, after a couple of unsuccessful tries to interact with 
somebody,  a  mobile  user  may  no  longer  be  aware  of  such  person.  However,  if  the 
system  notifies  the  user  when  the  destination  becomes  reachable  again,  it  enables 
additional  collaborative  interaction.  Notification  mechanisms  must  be  autonomous, 
proactive and non-invasive to reduce the burden on the participants. 

7   Conclusions and Further Work 

This  study  tries  to  understand  the  challenges  and  it  suggests  how  applications  can 
effectively  use  ad-hoc  networks  in  the  CSCW  domain.  Particularly,  this  study  addresses 
 the  communication  issues  affecting  mobile  collaborative  work.  Although 
there are several studies on real-world ad-hoc networks, most of them are just focused 
on data transfer and technologies analysis [11].  

Designers  of  mobile  groupware  applications  can  take  advantage  of  the  results  of 
this study when designing the functionality of applications in order to benefit from the 
opportunities and avoid the obstacles of these dynamic networks. The design of contextualized 
applications is always a challenge, but even greater for mobile groupware 
systems due to the intrinsic diversity and the dynamic work scenarios [1]. 

Three experimentation scenarios were considered in the study: static, low mobility 
and  high  mobility.  In  addition,  intra-group  and  inter-group  communications  were 
analyzed to understand what network support can be required (and obtained) in real 
work scenarios when two or more mobile users decide to work together. Two typical 
setups for routing and data transportation were used in the tests. The results show a 
number of challenges which the designer has to face.  

The paper also presents a list of lessons learned and a set of recommendations to 
consider in the design of applications; particularly in its communication support infrastructure.
  These  recommendations  can  help  mobile  groupware  designers  to  define  a 
predictable behavior for their systems under a dynamic real-world scenario, according 
to the design objectives and the users’ needs. 

Next steps in this study involve extending the number of experimentation scenarios 
to  cover  an  ample  spectrum  of  mobile  collaboration  styles.  In  addition,  the  authors 
want to include additional hardware diversity in the tests to understand its impact on 
the collaboration capabilities provided by applications. 

Acknowledgements 

This  work  was  partially  supported  by  Fondecyt  (Chile),  grant  Nos  11060467  and 
1080352, by LACCIR grants R0308LAC002 and R0308LAC005, and by the Spanish 
MEC project P2PGrid TIN2007-68050-C03-01. 

Building Real-World Ad-Hoc Networks to Support Mobile Collaborative Applications 

15 

References 

[1]  Alarcón, R., Guerrero, L., Ochoa, S., Pino, J.: Analysis and Design of Mobile Collaborative 
 Applications  Using  Contextual  Elements.  Computing  and  Informatics 25(6),  469–
496 (2006) 

[2]  Antunes, P., Bandeira, R., Carriço, L., Zurita, G., Baloian, N., Vogt, R.: Risk Assessment 
in Healthcare Collaborative Settings: A Case Study Using SHELL. In: Briggs, R.O., Antunes,
 P., de Vreede, G.-J., Read, A.S. (eds.) CRIWG 2008. LNCS, vol. 5411, pp. 65–73. 
Springer, Heidelberg (2008) 

[3]  Draves,  R.,  Padhye,  J.,  Zill,  B.:  Comparison  of  Routing  Metrics  for  Static  Multi-hop 
Wireless Networks. In: Proc. of the 2004 Conference on Applications, Technologies, Architectures,
  and Protocols  for  Computer  Communications  (SIGCOMM  2004), pp.  133–
144. ACM Press, New York (2004) 

[4]  Dyck, J.: A Survey of Application-Layer Networking Techniques for Real-time Distributed 
Groupware. Technical Report HCI-TR-06-06, University of Saskatchewan (2006) 

[5]  Dyck, J.,  Gutwin, C.,  Graham,  T.C.N., Pinelle, D.: Beyond the LAN: Techniques from 
Network  Games  for  Improving  Groupware  Performance.  In:  Proc.  of  Group  2007,  pp. 
291–300. ACM Press, New York (2007) 

[6]  Ellis, C.A., Gibbs, S.J., Rein, G.L.: Groupware: Some Issues and Experiences. Communications 
of the ACM 34(1), 38–58 (1991) 

[7]  Gutwin, C.: The Effects of Network Delays on Group Work in Real-Time Groupware. In: 
Proc.  of  the  Seventh  European  Conference  on  Computer  Supported  Cooperative  Work 
(ECSCW 2001), pp. 299–318. Kluwer Academic Publishers, Norwell (2001) 

[8]  RFC3626 - Optimized Link State Routing Protocol (OLSR)(2003), 

http://www.ietf.org/rfc/rfc3626.txt 

[9]  Better Approach To Mobile Ad-hoc Networking, B.A.T.M.A.N. (2008), 

http://tools.ietf.org/html/ 
draft-wunderlich-openmesh-manet-routing-00 

[10]  Kanchanasut, K., Tunpan, A., Awal, M.A., Das, D.K., Wongsaardsakul, T., Tsuchimoto, 
Y., Dumbonet, M.: A Multimedia Communication System for Collaborative Emergency 
Response  Operations  in  Disaster-affected  Areas.  International  Journal  of  Emergency 
Management 4, 670–681 (2007) 

[11]  Kiess,  W.,  Mauve,  M.:  A  Survey  on  Real-World  Implementations  of  Mobile  Ad-hoc 

Networks. Ad Hoc Networks 5(3), 324–339 (2007) 

[12]  Mejia, D., Moran, A., Favela, J.: Supporting Informal Co-located Collaboration in Hospital 
 Work.  In:  Haake,  J.M.,  Ochoa,  S.F.,  Cechich,  A.  (eds.)  CRIWG  2007.  LNCS, 
vol. 4715, pp. 255–270. Springer, Heidelberg (2007) 

[13]  Messeguer, R., Ochoa, S.F., Pino, J.A., Navarro, L., Neyem, A.: Communication and Coordination 
Patterns to Support Mobile Collaboration. In: Proc. of the 12th International 
Conference  on  Computer  Supported  Cooperative  Work  in  Design  (CSCWD  2008),  pp. 
565–570. IEEE CS Press, Los Alamitos (2008) 

[14]  Monares, A., Ochoa, S.F., Pino, J.A., Herskovic, V., Neyem, A.: MobileMap: A Collaborative 
Application to Support Emergency Situations in Urban Areas. In: Proc. of 13th International 
 Conference  on  Computer  Supported  Cooperative  Work  in  Design  (CSCWD 
2009), pp. 565–570. IEEE Press, Los Alamitos (2009) 

[15]  Rodríguez-Covili,  J.,  Ochoa,  S.f.,  Pino,  J.,  Favela,  J.,  Mejía,  D.,  Moran,  A.:  Designing 
Mobile Shared Workspaces by Instantiation. In: Proc. of 13th International Conference on 
Computer Supported Cooperative Work in Design (CSCWD 2009), April 2009, pp. 402–
407. IEEE Press, Los Alamitos (2009) 

16 

R. Messeguer et al. 

[16]  Tirumala,  A.,  Gates,  M.,  Qin,  F.,  Dugan,  J.,  Ferguson,  J.:  Iperf:  The  TCP/UDP  Bandwidth 
 Measurement  Tool,  http://dast.nlanr.net/Projects/Iperf  (Last 
visit, March 2009)  

[17]  Tschudin, C., Gunningberg, P., Lundgren, H., Nordstrom, E.: Lessons from Experimental 

MANET Research. Ad Hoc Networks 3(2), 221–233 (2005) 

[18]  Vaghi, I., Greenhalgh, C., Benford, S.: Coping with Inconsistency due to Network Delays 
in Collaborative Virtual Environments. In: Proc. of the ACM Workshop on Virtual Reality 
and Software Technology, pp. 42–49 (1999) 

[19]  Whalen, T., Black, J.P.: Adaptive Groupware for Wireless Networks. In: Proc. of the 2nd 
IEEE Workshop on Mobile Computer systems and  Applications (WMCA 1999), p. 20. 
IEEE Press, Los Alamitos (1999) 

[20]  Zurita, G., Baloian, N., Baytelman, F.: Using mobile devices to foster social interactions 
in the classroom. In: Proc. of the 12th International Conference on Computer Supported 
Cooperative Work in Design (CSCWD 2008), pp. 1041–1046. IEEE Press, Los Alamitos 
(2008) 

