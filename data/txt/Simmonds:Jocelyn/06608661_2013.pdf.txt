978-1-4673-6449-2/13/$31.00 c(cid:13) 2013 IEEE

33

PLEASE 2013, San Francisco, CA, USA

VariabilityinSoftwareProcessModels:RequirementsforAdoptioninIndustrialSettingsJocelynSimmondsInformaticsDepartmentUniv.T´ec.F.SantaMar´ıa,Chilejsimmond@inf.utfsm.clMar´ıaCeciliaBastarricaCSDepartmentUniv.deChile,Chilececilia@dcc.uchile.clLuisSilvestreCSDepartmentUniv.deChile,Chilelsilvest@dcc.uchile.clAlcidesQuispeCSDepartmentUniv.deChile,Chileaquispe@dcc.uchile.clAbstract—ItisanincreasingtrendtoapplySoftwareProd-uctLine(SPL)conceptsandtechniquesforsoftwareprocesstailoring,generatingaSoftwarePRocessLine(SPrL).However,thereareseveralaspectsthatmustbeaddressedbeforeSPrLscanbefullyadoptedbyindustry,akeyaspectbeinghowsoftwareprocessvariabilityisspeciﬁedandmanaged.Intheliterature,thereareseveralgeneral-purposeaswellasdomain-speciﬁcproposalsforspecifyingprocessvariability.Inthispaper,weanalyzethebeneﬁtsanddrawbacksoftwogeneral-purpose(featuremodelsandOVM)andtwodomain-speciﬁc(SPEMvariabilityprimitivesandvSPEM)approaches,aswellasdiscusswhathindersindustryadoptionineachcase.I.INTRODUCTIONForthelastsixyearswehaveworkedwithsmallcompaniesinChiledeﬁningandformalizingtheirsoftwareprocesses[14].TheseprocessesarespeciﬁedusingtheSoftware&SystemsProcessEngineeringMetamodel(SPEM2.0),intermsofactivities,roles,tasksandworkproducts.Wehaveusedvarioustoolstosupportthisprocess,encounteringsomeofthebarriersforadoptionthatthesetools’targetusers,processengineers,strugglewithinpractice.Basedonthisexperience,aswellasexistingdiscussionsaboutwhatittakestomakeanacademicprototypeanindustrialsuccess[2][13],wehaveidentiﬁedrequirementsforindustrialadoptionofSPrLsupporttools.ThreeyearsagowestartedanewprojectforautomaticallytailoringformalizedprocessesusingSPrLconcepts[4].Ac-cordingtoRombach[11],anSPrLisasystematicmecha-nismformanagingaprocessanditsvariants.Thisproject,ADAPTE1,appliesmodel-drivenengineeringtechniquestosolvetheproblemoftailoringorganizationalprocessestoindividualprojects’context.Inthisapproach,theprocessisformalizedusingEPFComposer,awidelyusedfreetoolthatsupportstheSPEM2.0standard.Thecontextisalsoformalized,andtailoringisimplementedthroughATL2rules.Inourinitialexperience,variabilityinSPEMprocessmodelswaslimitedtotaskandworkproductoptionality.However,wehavefoundinpracticethatmorecomplextypesofvariabilitiesarealsoneeded,suchashavingalternativeworkproductsorwaysofperformingatask.SpecifyingthesekindsofvariabilitiesisnotstraightforwardinEPFComposer,sowehavestudiedothernotationsandtoolsforthispurpose.Inthis1http://www.adapte.cl2http://www.eclipse.org/atlpaper,weﬁrstpresenthowprocessvariabilitiesisspeciﬁedusingSPEMprimitives,andthendiscusshowfeaturemodels,OVMandvSPEMcanalsobeusedforspecifyingprocessvariabilities3.Wehaveusedtheseapproachesinpracticewithvaryinglevelsofsuccess;however,noneoftheseproposalsfullysatisﬁesourrequirementsforbeingsuccessfullyadoptedbyprocessengineersinindustry.SectionIIstatesourrequirementsforindustrialadoption.SectionIIIpresentseachapproachwitharunningexample,in-cludingabriefevaluationofeach.Finally,sectionIVpresentsthesummaryoftheevaluationcomparingalltheapproaches.II.REQUIREMENTSFORADOPTIONInourexperienceworkingwithSPrLinseveralsmallChileancompanies,wehavefoundthatthemostrelevantfac-torsthataffectSPrLadoptionare:notationexpressivenessandunderstandability,supportingtools’usabilityandavailability,andthelevelofinteroperabilityofthesetoolswithothertoolsusedbythecompany.Anotationandsupportingtoolthatsatisfytheserequirementshaveabetterchanceofindustryadoption.NotationExpressiveness:Thenotationforspecifyingvari-abilitymustbeexpressiveenoughtoallowthedeﬁnitionofapplicationdomainelements,aswellasvariabilities,common-alitiesand/orconnectionstounderlyingmodels.Thespeciﬁca-tionofconstraintsbetweenelementsshouldalsobepossible.Inthecaseofsoftwareprocessmodeling,thenotationshouldallowthedeﬁnitionofroles,tasksandworkproductsaswellastheirvariability,whichshouldatleastallowthespeciﬁcationofrole,taskandworkproductoptionalityandalternatives[8].NotationUnderstandability:Thenotationshouldbeeasilyunderstoodbytargetusers,makinguseofdomainconceptswheneverpossible[3].Caremustbetakentonotmakethenotationtoogeneral-purpose,asthismayaddunnecessarycomplexity,possiblyconfusingthetargetuser.Forinstance,inthecaseofsoftwareprocessmodels,wehavenotyetfoundtheneedforspecifyinginclusive-orsinpractice.Notationconcisenessisaplus,itshouldnotbenecessarytoaddanoverwhelmingamountofdetailinordertospecifyvariability,andtheeffectsofspecifyingvariabilityshouldbeclear.3Notethatadditionalproposalscanbefoundintheliterature,wehavenotincludedtheminthiscomparisonduetospacelimitations.34

ToolAvailabilityandSupport:Eventhebestnotationwillnotbeadoptedwithoutgoodtoolsupport.Toolsforsupportingprocessvariabilityspeciﬁcationaregenerallyacademicproto-types,solong-termsupportisnotguaranteed.Thisdiscouragesadoptionsincethecompany’sinvestmentcouldbelostiftheinterestsoftheresearchgroupbehindthetoolchange.Inthecaseofmaturetoolswithavailablesupport,itisalsoimportantforsmallsoftwarecompaniesthatthesetoolsarefreeoratleastinexpensive.Easytoolinstallation,gooddocumentation,frequentupgradesandup-to-datetutorialsarealsodesirableforadoption.ToolUsability:Industrialadoptionwillnothappeniftheuserdoesnotfeelcomfortablewiththetoolhe/sheisusing.Therehavebeenseveraleffortsdevelopingnotationsandtoolsthatareverysophisticatedforexpressingcomplexsituationsandallowingforanalysis[12].However,iftheuserinterfaceisnotclearorifitisnotdomain-speciﬁc,thetargetusermaynotunderstandthebeneﬁtsthatthetooloffers.Alsothecompletetoolsetshouldbesimple,includingasfewdifferentnotationsaspossible,allofthemseamlesslyintegratedfromtheuser’spointofview.Interoperabilitywithstandardformats:Toolssupportingprocessvariabilitymodelingarejustasmallpartofacom-pany’stoolset,soitisimportantthatthesetoolsﬁtinwiththerestofthetoolsused.Thereforetoolsshouldallowdirectinteroperability,orexportdatainstandardformats.Oneparticularformofthisissueisbackwardscompatibility,i.e.,dataproducedbyanolderversionofthetoolcanbereadinbynewerversions.III.CURRENTPROPOSALSSPEM2.0isthestandardnotationforsoftwareprocessmodeling.Inthissection,weﬁrstexplainhowprocessvari-abilitiesisspeciﬁedusingSPEMprimitives.WethendiscusshowgeneralnotationsforvariabilityspeciﬁcationsuchasfeaturemodelsandOVM,canalsobeusedtospecifyprocessvariability.Finally,wediscussvSPEM,aSPEMextensionthatusesOVM-likeconceptsforvariabilityspeciﬁcation.Weanalyzethepotentialforadoptionofeachproposal,takingintoaccounttherequirementsstatedintheprevioussection.A.SPEMVariabilityPrimitivesSPEMdeﬁnesfourprimitivesforspecifyingvariabilitybetweentwoprocesselementsofthesametype[9]:Contributes:Asourcevariabilityelementcontributesitspropertiestothetargetvariabilityelementwithoutdirectlyalteringanyofthetargetelement’sproperties.Replaces:Asourcevariabilityelementreplacesitstargetvariabilityelement.Inthiscase,onlytheincomingassoci-ationsofthetargetelementarepreserved,boththetarget’sattributesandoutgoingassociationsarereplacedbythesourceelement’s.Thetargetofmultiplereplacesrelationscanonlybereplacedbyonesourceelementinaconﬁguration.InFig.1,DeﬁneUseCasesreplacesDeﬁneRequirements.Extends:Asourcevariabilityelementextendsthedeﬁnitionofitstargetvariabilityelement,possiblyoverridingthetarget’sattributesandassociations.Fig.1.SPEMspeciﬁcationofasimpleRequirementsactivity(includesvariability)Extends-Replaces:Inthisrelationship,asourcevariabilityelementﬁrstextendsitstargetvariabilityelement,andthenreplacesit.Instancesoftheserelationsmayoverrideeachother,sovariabilityrelationsmustberesolvedinthepresentedorder.Apriori,itishardtopredicthowvariabilityrelationsinteractwitheachother,whichiswhytheSPEM2.0variabilitymechanismsarerarelyusedinpractice[7].Whentheyareused,themostcommonlyusedprimitiveisreplaces,usedasshowninFig.1tospecifyalternativeprocesselements.InEPFComposer4,optionalityisspeciﬁedbysettinganelementproperty,butalternativescannotbespeciﬁeddirectly:theusermustmanuallycreatetwo(ormore)processmodels,oneforeachalternative.EPFComposerisapubliclyavailableandrobusttool;itcanpublishprocessesinHTML,aswellasexporttheminXMLforfurtherprocessing.B.FeatureModelsFeatureModels[5](FM)arefrequentlyusedtomodelvariabilityinSPLs.InordertospecifyvariabilityinSPrL,eachfeatureinaFMrepresentsaprocesselement.Mandatory/optionalprocesselementsaremarkedasmanda-tory/optionalintheFM,andprocesselementsthatcanberealizedindifferentwaysaremodeledusingalternatives.Requiresconstraintsareaddedtoensurethatexistinglinksbetweenrolesandtasks,andtasksandworkproductsarepreserved.Forexample,theFMshowninFig.2modelsboththecommonandvariableelementsoftheRequirementsactiv-ityusingtheSPLOTtool5.Toincreasetheunderstandabil-ityofthismodel,wehaveseparatedtheFMhierarchyintothreeparts:tasks,workproductsandroles.AsperFig.1,requirementscanbespeciﬁedusingscenariosorusecasemodels,sointheFM,theDeﬁneRequirementstaskhastwochildren:DeﬁneRequirementswithScenariosandDeﬁneRequirementswithUseCases.TheSRSworkproductandAnalystrolearemodeledinasimilarmanner.InFig.1,theArchitectrole(a)performstheDevelopNonFunctionalRequirementstask(b).Inorderto4EPFComposer:http://www.eclipse.org/epf5SPLOT:http://www.splot-research.org/35

Fig.2.ProcessVariabilitiesSpeciﬁedwithFeatureModelsmodelthisintheFM,weneedtoaddsomeconstraints:1)iftaskbisincludedinaconﬁguration,thenroleamustalsobeincluded(brequiresa,or¬b∨ainSPLOT),and2)ifroleaisincludedinaconﬁguration,thenatleastoneofthetasksthatthisroleperformsisrequired.SinceaonlyperformsbinFig.1,weaddedtheconstraint¬a∨btotheFM.Additionally,eachmandatorylinkbetweenataskandaworkproductintroducesanewrequiresconstraint,thedirectionofthisconstraintdependsonwhethertheworkproductisaninputoroutputartifact.Forexample,theDeﬁneRequirementstaskrequirestheexistenceoftheRequirementsDraftworkproduct,whereastheSRSworkproductrequirestherealizationoftheDeﬁneRequirementstask.Optionallinksbetweentasksandworkproductsdonotintroducenewconstraints.ThemodelshowninFig.2hassixvalidconﬁgurations.Thisﬁguredoesnotshowthecross-treeconstraintsbecauseofspacelimitations,butthecompletemodelisavailableathttp://gsd.uwaterloo.ca:8088/SPLOT/models/model20121219629525870.xml.Eventhoughdeﬁningtypicalvariabilities,suchasstatingthattheArchitectisanoptionalroleisquitestraightfor-wardinFM,addingtheconstraintsthatthisroleperformstheNonFunctionalRequirementsissomewhatcumbersome.Featuresandlinksofdifferentkindscannotbedistinguished:roles,tasksandworkproductsareallfeatures,andalllinksareexpressedusingcross-treeconstraints.Moreover,thecontrolﬂowpresentinaSPEMmodelislostintheFM,e.g.,nothinginFig.2documentsthattheVerifyRequirementstaskmustbeperformedaftertheDeﬁneRequirementstask.ThereareseveralfreetoolsforspecifyingFM,e.g.,SPLOT,fmp6,clafer7.Theyareallabletoexportdatatostandardfor-6fmp:http://gp.uwaterloo.ca/fmp7Clafer:http://gsd.uwaterloo.ca/claferFig.3.ProcessVariabilitiesSpeciﬁedwithOVMmatslikeasXMLorAlloy.TheyalsoallowthespeciﬁcationofhierarchicalFMsinanintuitivemanner,butrequiresandexcludesconstraintsaregenerallyspeciﬁedusingthespeciﬁclanguageoftheunderlyinganalysisengine.C.OVMOrthogonalVariabilityModels[10](OVM)isanotherno-tationusedtomodelvariability.Inordertospecifysoftwareprocessmodelvariability,weneedtocreatetwomodels:aSPEM2.0modelwherethevariationpointsareidentiﬁedinsomeform,andanOVM,whereeachvariationpointisasso-ciatedtovariantsthatrepresentdifferentpossiblerealizationsofeachvariationpoint.LikeFM,variantscanbeoptionalormandatory,andrequiresandexcludesconstraintscanbeaddedbetweenelements.Figure3showshowwemodeledthevariabilityintheRequirementsactivityusingOVM.Therearefourvaria-tionpoints(VP):oneforeachofthethreeprocessele-mentsthatcanbereplacedintheoriginalSPEMspeciﬁ-cation(seeFig.1),andonerepresentingtheoptionaltaskDevelopNonFunctionalRequirements.Allvariantsarere-latedtotheirvariationpointsthroughoptionaldependencies,andinthecaseofthemandatoryvariationpoints,exactlyonevariantmustbechosen.Requiresandexcludesconstraintsareusedtoenforcetheexistingdependenciesbetweenthevariants.OVMprovidesaconcisenotationforspecifyingallandonlythevariabilityforacertainmodel.Thenotationisclearandthediagramisuncluttered,sincecommonelementsareomittedfromit.Commonalitiesarespeciﬁedinthenativedomainlanguageandneedtobelinkedwiththevariabilitiessothatthecompletemodelcanbemanaged.UnfortunatelytherearenomatureandsupportedtoolsavailableforOVM,sothisproposalisnotagoodcandidateforindustrialadoption.D.vSPEMTakingintoaccountthelimitationsoftheSPEM2.0vari-abilitymechanisms,mainlyfromtheunderstandabilitypointofview,Mart´ınezetal.[7]proposevSPEM,aSPEM2.0extensionthatallowsthedirectspeciﬁcationofprocessvari-ability.Inthisproposal,theprocessengineerdeﬁnesprocessvariationpoints(calledVarPoints),aswellasvariantsthatcanﬁllthevariationpoints.TherelationshipbetweenavariationpointanditsvariantsisaSPEM2.0replacesrelation,and36

(a)(b)Fig.4.ProcessVariabilitiesSpeciﬁedwithvSPEMduringprocessinstantiation,eachvariationpointisreplacedbyexactlyonevariant.Figure4showsthevSPEMspeciﬁcationofthevariabilityoftheRequirementsactivity.Thismodelhasthreevariationpoints,DeﬁneRequirements,SRSandAnalyst.TheoptionaltaskDevelopNonFunctionalRequirementsisnotavariationpointinvSPEM,butmarkedasoptionalintheSPEMmodel.TheDeﬁneRequirementsvariationpointhastwovariants:DeﬁneUseCasesandDeﬁneScenarios.Theothertwovaria-tionpointsaredeﬁnedinasimilarfashion.TheSPEMlinksbetweenprocesselementsinvolvedinreplacerelationshipsinFig.1aremodeledasrequiresconstraintsinvSPEM.LikeOVM,vSPEMisaconcisenotationwiththeaddedadvantagethatitisspeciﬁctotheprocessdomain.However,existingtoolsupportisatanacademicprototypelevel,withoutgraphicaluserinterfaces,makingitapoorcandidateforindustryadoption.Additionally,thistool’sinputandoutputformatsarenon-standardandpoorlydocumented,soitisdifﬁcultforthird-partydeveloperstointegratethistoolwithothertools.IV.DISCUSSIONANDCONCLUSIONSVariabilitymodelingisakeyissuefortheadoptionofSPrLinindustry.Thereareseveralfactorsaffectingtheadoptionofnewtechnologies,suchasnotationexpressivenessandunderstandability,toolavailability,supportandusability,andinteroperabilitywithstandards.Inthispaper,wepresentedthemostpromisingnotationsforspecifyingprocessvariability,includingbothgeneralSPLnotations(featuremodelsandOVM)andprocessdomain-speciﬁcnotations(SPEMandvSPEM),andweevaluatedthesenotationsaccordingtothepreviouslyidentiﬁedfactors.Whencomparingthebeneﬁtsanddrawbacksofeachofthesenotations,weconcludethatnoneofthemsatisﬁesalloftherequirementswehaveestablishedforbeingadoptedinindustry,ascanbeseeninTableI.Atthispointintime,itisouropinionthatthebestapproachistospecifybothTABLEIEVALUATIONOFADOPTIONFACTORSNotationsforSpecifyingVariabilitySPEMFMOVMvSPEMExpressiveness+-++Understandability--++ToolAvailabilityandSupport-+--ToolUsability++--InteroperabilitywithStandards++--theprocessanditsvariabilityusingSPEM2.0withtheEPFComposer,sincethisallowsthespeciﬁcationoftheprocessanditsvariationusingonlyonenotationandtool.Eventhoughinpracticewehavefoundthatonlyelementoptionalityandreplacesrelationsareneededformodelingprocessvariabilityinindustrialsettings,highlyspecializedprocessengineersarestillrequiredduringprocessformaliza-tion.Smallcompaniesdonotusuallyhiresuchspecializedpersonnel,andwithouttheseengineers,thesemodelswillbealmostimpossibletomaintainandevolve.Moreover,alltherichanalysesthathaveproposedbytheSPLcommu-nity[1]cannotbedirectlyappliedtothesemodels.AllthesedrawbacksmaydetracttheperceivedusefulnessoftheSPrLformalizationprocess,andthushinderadoption.REFERENCES[1]D.Benavides,S.Segura,andA.Ruiz-Cort´es.Automatedanalysisoffeaturemodels20yearslater:Aliteraturereview.Inf.Syst.,35(6):615–636,Sept.2010.[2]H.Bruneli´ere,J.Cabot,F.Jouault,M.Tisi,andJ.B´evizin.Industrial-izationofResearchTools:theATLCase.InKienle[6],pages44–57.[3]F.D.Davis,R.P.Bagozzi,andP.R.Warshaw.Useracceptanceofcomputertechnology:Acomparisonoftwotheoreticalmodels.ManagementScience,35(8):982–1003,1989.[4]J.A.Hurtado,M.C.Bastarrica,S.O.Ochoa,andJ.Simmonds.MDESoftwareProcessLinesinSmallCompanies.ToappearinJ.Syst.Software,2013.[5]K.C.Kang,S.G.Cohen,J.A.Hess,W.E.Novak,andA.S.Peterson.Feature-orienteddomainanalysis(foda)feasibilitystudy.TechnicalReportCMU/SEI-90-TR-21,CarnegieMellonUniversity,Nov.1990.[6]H.Kienle,editor.Proc.of3rdWorkshoponAcademicSoftwareDevelopmentToolsandTechniques,co-locatedwithASE’10,2010.[7]T.Mart´ınez-Ruiz,F.Garc´ıa,M.Piattini,andJ.M¨unch.Modellingsoftwareprocessvariability:anempiricalstudy.IETSoftware,5(2):172–187,2011.[8]T.Mart´ınez-Ruiz,J.M¨unch,F.Garc´ıa,andM.Piattini.RequirementsandConstructorsforTailoringSoftwareProcesses:ASystematicLit-eratureReview.J.ofSoftwareQualityControl,20(1):229–260,Mar.2012.[9]OMG.SoftwareandSystemsProcessEngineeringMetamodelspeciﬁca-tion(SPEM)Version2.0.http://www.omg.org/spec/SPEM/2.0,AccessedMar.2012.[10]K.Pohl,G.B¨ockle,andF.J.vanderLinden.SoftwareProductLineEngineering:Foundations,PrinciplesandTechniques.Springer,Nov.2010.[11]H.D.Rombach.IntegratedSoftwareProcessandProductLines.InProc.ofSPW’05,China,pages83–90,2005.[12]F.Roos-Frantz,J.A.Galindo,D.Benavides,andA.Ruiz-Cort´es.FaMa-OVM:AToolfortheAutomatedAnalysisofOVMs.InProc.ofSPLC’12,pages250–254,Sept.2012.[13]P.Trinidad,C.M¨uller,J.Garc´ıa-Gal´an,andA.Ruiz-Cort´es.BuildingIndustyReadyTools:FaMaFramework&ADA.InKienle[6],pages160–173.[14]G.Valdes,M.Visconti,andH.Astudillo.TheTutelkanReferenceProcess:AReusableProcessModelforEnablingSPIinSmallSettings.InProc.ofEuroSPI’11,pages179–190,2011.