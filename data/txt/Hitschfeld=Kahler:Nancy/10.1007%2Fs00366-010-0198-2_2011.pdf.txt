Engineering with Computers (2011) 27:285–297
DOI 10.1007/s00366-010-0198-2

O R I G I N A L A R T I C L E

Jacobian-based repair method for ﬁnite element meshes
after registration

Marek Bucki • Claudio Lobos • Yohan Payan •
Nancy Hitschfeld

Received: 8 September 2009 / Accepted: 18 October 2010 / Published online: 4 November 2010
Ó Springer-Verlag London Limited 2010

Abstract Registration methods are used in the meshing
ﬁeld to ‘‘adapt’’ a given mesh to a target domain. Finite
element method (FEM) is applied to the resulting mesh to
compute an approximate solution to the system of partial
differential equations (PDE)
representing the physical
phenomena under study. Prior to FE analysis the Jacobian
matrix determinant must be checked for all mesh elements.
The value of this Jacobian depends on the conﬁguration of
the element nodes. If it is negative for a given node, the
element is invalid and therefore the FE analysis cannot be
carried out. Similarly, some elements, although valid, can
present poor quality regarding Jacobian-based indicator
values, such as the Jacobian ratio. Mesh registration procedures 
are likely to produce invalid and/or poor quality
elements if the Jacobian parameter is ignored. To repair
invalid and poor quality elements after mesh registration,

we propose a relaxation procedure driven by speciﬁc
validity and quality energy formulations derived from the
Jacobian value. The algorithm ﬁrst recovers mesh validity
and further improves elements quality, focusing primarily
on nodes that make the elements invalid or of poor quality.
Our novel approach has been developed in the context of
non-rigid mesh registration and validated on a data set of
60 clinical cases in the context of orthopaedic and
orthognathic hard and soft tissues modelling studies. The
proposed repair method achieves a valid state of the mesh
and also raises the quality of the elements to a level suitable 
for commercial FE solvers.
Keywords Meshing  Mesh repair  Registration  Finite
element method  Quality improvement

M. Bucki  Y. Payan
TIMC-IMAG UMR CNRS 5525, Pavillon Taillefer,
Faculte´ de Me´decine, Domaine de la Merci,
38706 La Tronche Cedex, France
e-mail: marek.bucki@imag.fr

Y. Payan
e-mail: yohan.payan@imag.fr

C. Lobos (&)
Departamento de Informa´tica, Universidad Te´cnica Federico
Santa Marı´a, Av. Vicun˜a Mackenna 3939, San Joaquı´n,
8940897 Santiago, Chile
e-mail: clobos@inf.utfsm.cl

N. Hitschfeld
Departamento de Ciencias de la Computacio´n,
Universidad de Chile, Blanco Encalada 2120, 4to piso,
837-0459 Santiago, Chile
e-mail: nancy@dcc.uchile.cl

1 Introduction

The ﬁnite element method (FEM) [13, 33] is a numerical
technique computing an approximate solution to a set of
partial differential equations (PDEs) and therefore, it is
widely used to simulate mechanical behaviors.

The FEM relies on a subdivision of the continuum
domain X to be simulated. This subdivision, called mesh, is
the partition of X into simpler geometrical bodies known as
elements. The FEM provides an approximation of the
solution to the system of PDEs at each node of the mesh.
This approximate solution can be further computed at any
point p 2 X by interpolation of the values found at the
nodes of the element containing p.

The context of our work is biomechanical modeling of
human organs for biomedical applications. In this ﬁeld, the
most common way to produce a mesh is to perform the
following steps:

123

286

Engineering with Computers (2011) 27:285–297

• Acquire volumetric medical images of the patient’s
organ using magnetic resonance imaging (MRI), ultrasound 
(US), computed tomography scanner (CT) or
other imaging techniques.

• Achieve image segmentation in order to produce a
cloud of points or an initial surface mesh deﬁning the
geometry of the modelled domain.

• Add internal nodes to produce the 3D elements that will

conform the ﬁnal volumetric mesh.

Some examples of such mesh generators are [1, 12, 23]
for tetrahedral meshes. Others like [26, 32] are interested in
hexahedral meshes and ﬁnally other works such as [19, 20]
focus on the production of mixed-element meshes.

Even though those techniques are suited for most of the
cases, in the medical ﬁeld it is sometimes preferred to work
with ‘‘registration’’ techniques which take advantage of an
a priori knowledge of the studied body part. Consider for
instance the concept of image registration which is the
process of transforming different sets of data into one
coordinate system. In the case of mesh registration, the
different sets of data come on the one hand, from a generic
model, named the Atlas, and on the other hand, from
patient data. The Atlas is usually a predeﬁned volume mesh
conserving all the relevant data for the simulation. The
patient data is usually a set of points or a surface mesh.
The ﬁrst step is to compute a rigid registration between
the Atlas and patient data, which consists, in the case of
medical image processing, in converting both data sets in a
common coordinate system. The second step is to produce
an elastic registration, which consists in deforming the
Atlas in order to represent or ﬁt the patient data. This
process is called ‘‘mesh registration’’.

There exist several mesh registration techniques, but the
present work focuses on the so called mesh-matching
(M-M) algorithm introduced by Couteau et al. [6]. The
statement is that building a mesh of an organ is a complex
task. To achieve accurate surface representation and good
quality while limiting the number of elements in the mesh is
somehow a difﬁcult compromise. Therefore in many cases,
meshes are built by hand. As this task is time consuming
and usually requires expert user interaction, it cannot be
easily put
in practice for a great number of patients.
Therefore an interesting alternative is to use a pre-deﬁned
generic FE mesh (the Atlas mesh) of the target organ in
order to achieve accurate representation of its structure.

FE mesh construction relies on the patient data obtained
from segmented medical images. The resulting data can
either be a cloud of points or a surface mesh of the organ.
Using this representation a mesh registration process ﬁts the
surface nodes of the Atlas onto the target organ by applying
a transformation function T. In other words, an elastic
registration function is an application T : R3 ! R3 that

123

minimizes a given registration error, or better said ‘registration 
energy’, between a given source points set S and a
destination points set D. The registration energy is a ‘sim-
ilarity’ measure between the transformed source points set
T(S) and the target destination points set D. If the registration 
energy and function search space are not carefully
deﬁned, ﬁnding T is an ill-posed problem, i.e. the existence
and uniqueness of the solution are not guaranteed.

The registration energy can be freely deﬁned in order to
reﬂect the nature of the registration problem. An optimal
registration is achieved when this energy reaches zero i.e.
when each transformed source point has found a counterpart 
within the destination set. Given the sparse and uneven
nature of the data, the search for the elastic transformation
must be constrained in order to avoid erratic registrations.
Various approaches to produce a registration have been
proposed in the literature [6, 7, 24, 29], the discussion of
which falls out of the scope of this article.

Note that T is computed using the surface nodes S (of the
Atlas volume mesh) and the points set D (patient data).
Moreover, T is a 3D transformation function so it can be
applied to the Atlas internal nodes in order to produce a 3D
mesh of the target organ, called ‘‘patient mesh’’. Unfortunately 
it has been reported [21] that, in some cases, the
application of T to internal nodes can produce invalid or
poor quality elements (both concepts are deﬁned in Sect.
2). Figure 1 shows an example of M–M (here illustrated in
2D for clarity) and suggests how invalid and poor quality
elements can be created.

Note that invalid and poor quality elements are not only
produced by registration methods [2, 5, 25], but can also
appear in the output of meshing techniques such as the
whisker-weaving from CUBIT1 [17].

The goal of the present work is to repair the invalid and
poor quality elements that might result from the process of
mesh registration. The proposed method is based on the
computation of the determinant of the element Jacobian
matrix and to this end Sect. 2 deﬁnes what are invalid and a
poor quality elements. Section 3 gives the State of the Art
regarding mesh repair and quality improvement in our
scope. Section 4 explains in further detail our proposed
solution, in particular the Jacobian formulation, the penalty
functions that are used, our algorithm and a practical
example. Finally Sects. 5 and 6 provide conclusions and
perspectives.

2 Deﬁnition of invalid and poor quality elements

This section introduces the concepts of invalid and poor
quality elements. It is important to mention that the two

1 See http://cubit.sandia.gov for details.

Engineering with Computers (2011) 27:285–297

287

Fig. 1 The mesh-matching
algorithm: (a) The Atlas mesh,
(b) the target domain or patient
data, (c) the Atlas and the target
surface domain represented by a
dashed line and (d) the ﬁnal
mesh of the target organ
obtained by applying the
transformation function T onto
the entire Atlas mesh. The
circled region shows the
location of possible distorted
element leading to mesh
invalidity or poor quality

(a)

(c)

(b)

(d)

deﬁnitions proposed here rest upon the Jacobian matrix of
the mapping function F relating the parent, or reference,
element frame to its actual coordinates within the mesh. In
the remainder of the article this matrix is denoted as J. Note
that other geometrical functions can be used to deﬁne the
quality of an element [8, 19, 20, 31].

2.1 Invalid element

As mentioned before, the FEM computes for each node of
the underlying mesh an approximated solution to the system 
of PDEs describing the physical phenomenon under
study. For this purpose, a perfect element is deﬁned in a
reference parent system ðn1; n2; n3Þ where each reference
element point is related to its actual counterpart within the
in the modeled domain referential ðx1; x2; x3Þ
element
through the mapping F, as shown in Fig. 2. The Jacobian
matrix of mapping F considered at a parent frame point n is
deﬁned as:
oF
JðnÞ :¼
on

ðnÞ

The FE analysis can be carried out on a mesh as long as
the mapping F, considered for each mesh element, remains
a one-to-one application. For a given element, this property
can be assessed by considering the determinant of
the Jacobian matrix of F, jJðnÞj; at a number of ‘‘control

points’’, such as the element nodes or Gaussian quadrature
(integration) points. This check must be carried out for all
the elements forming the mesh prior to FE analysis. If a
Jacobian value is found to be negative, then the mapping
F for the considered element is not a bijection, which
makes the mesh not suitable for FE analysis as the singularity 
of the mapping F leads to modeling inconsistency.

Let us consider this situation from a geometrical point of
view as illustrated in Fig. 3. If nodes b, c and d are connected 
to node a then an imaginary plane can be formed by
nodes b, c and d. The normal ^n of this plane is computed as
(c - b) 9 (d - b). After normalizing the vector ^n the
signed distance of a to the plane can be computed as: ða  
bÞ  ^n . If this distance is positive, then the position of a is
valid within this element. If not, then this element is considered 
invalid for the FEM at node a.
Note that the value of jJðnÞj must be considered for each
node within each element. If a node a is shared by two
elements e1 and e2, it is possible to devise a nodal conﬁguration 
where the position of a is valid within e1 but
invalid within e2.

2.2 Poor quality element

The Jacobian value measures the distortion of the actual
mesh element w.r.t. its reference conﬁguration at a given

Fig. 2 The reference-to-actual
frame mapping from which the
Jacobian matrix is derived. Left
the reference/parent space and
right the current/actual mesh
space

P4

7P

P6

0P

P3

P2

P5

P1

x 3

N5

N4

N6

N0

F

P0
P1
P2
P3
P4
P5
P6
7P

N0
N1
N2
N3
N4
N5
N6
N7

x

1

N1

N7

N3

x

2

N2

123

288

Engineering with Computers (2011) 27:285–297

Fig. 3 If the signed distance of
node a to the plane formed by
‘‘connected nodes’’ b, c and d is
positive, the element is valid
(left), in any other case the
entire element is said to be
invalid (right)

c

b

a

n^

b

c

n^

a

bcd plane

d

bcd plane

d

point but does not carry overall distortion information. To
overcome this issue the quality of an element can be
measured at each node n as a ratio between the nodal
Jacobian value at n, and a global distortion information.
The latter is given by the maximal Jacobian value among
those measured at all element nodes. This element quality
criterion is called Jacobian Ratio or JR [19].

Mathematically, the JR at node n0 taken within element

e, JRn0
e

, is computed as:

JRn0
e

:¼ jJðn0Þj=maxn2efjJðnÞjg
Considering the case presented in Fig. 3, the value of
jJðaÞj , computed at node a within the element, would be
very small if a was close to plane bcd and so would be the
value of JRa . Indeed, when JRa value is positive, but close
to 0, the element presents a poor quality at node a. When
the JR increases, so does the quality of the element until it
reaches the ideal value of 1.

As it is usually impossible to ﬁnd a mesh conﬁguration
where all the JR within the mesh have the perfect value of
1,
the mesh repair procedure must rely on a quality
acceptance threshold. We have chosen to follow the recommendations 
adopted in the commercial FE analysis
software ANSYS (ANSYS Inc., USA), where an element
e is said to present poor quality when any node n within
e has a JR value lower than 0:03 [14]. A good quality
element, thus, has all its JR values within the interval
½0:03; 1:

3 Overview of mesh repair techniques proposed

in the literature

In this work, our goal is to achieve validity and improve the
quality of the elements in a mesh after applying a non-rigid
registration in the context of mesh generation procedures
such as the mesh-matching introduced in Sect. 1. To do so,
we focus speciﬁcally on the Jacobian matrix as it is at the
root of many popular mesh rejection criteria implemented
in commercial FE analysis softwares.

123

In the literature we can ﬁnd several

interesting
approaches for mesh quality improvement based on the
Jacobian criterion, both in surface and volume meshes. In
the case of surface meshes, an algorithm to perform
optimization over triangular and quadrilateral 2D meshes
based on reference Jacobian matrix was introduced in [18,
30] and later extended to 3D surfaces in [11]. In the case
of volume meshes, Freitag proposed in [9] the use of
Laplacian-based algorithms to improve the overall quality
of meshes. In particular, the Smart-Laplacian algorithm
proposed in [9] changes the position of a given node only
if it results in overall quality improvement. This ﬁlter is
implemented in such a way that no invalid element can be
generated within the mesh. Following the same idea,
Freitag and Plassmann proposed in [10] the combination
of Smart-Laplacian with optimization algorithms, having
a much higher computational cost than the Laplacian ﬁlter
alone,
In this
approach, invalid mesh conﬁgurations are eliminated by
mesh nodes reallocation and the applied optimization
maximizes the minimum volume of tetrahedra in a local
sub-mesh.

to achieve mesh untangling.

in order

Both volume repairing techniques presented above are
designed to repair tetrahedral meshes, and the idea of
extending this concept
to hexahedra and wedges was
introduced by Knupp in [16, 17]. The main principle here is
that the reallocation of a given node will only change the
Jacobian values of the nodes edge-connected to it (as
showed in Sect. 2.1). Moreover, for the tetrahedron, wedge
and hexahedron each node is connected to three nodes
within each element it is part of, therefore for those elements,
 a Jacobian-based repair method can always be
geometrically reduced to an optimization based on tetrahedra.
 More recently, Paoletti
in [27] extended this
approach to polyhedral meshes by including the ‘‘interpolation 
tensor’’ to the optimization.

Another important work was carried out by Kwok and
Chen [19] where the focus was made on the quality of
hexahedra and wedges. The Jacobian Ratio was used to
improve the quality in conjunction with other quality

Engineering with Computers (2011) 27:285–297

289

functions such as the aspect-ratio, the warping factor and
the control number [15].

The above mesh untangling techniques are focused
mainly on overall mesh quality by moving only internal
nodes. They do not need to move ‘‘surface’’ (or boundary)
nodes because they are already well located according to
the employed meshing technique. Unfortunately, this is not
the case for ‘‘mesh registration’’ techniques. Let’s recall
that this family of strategies intend to match a predeﬁned
FE mesh to a target domain. If the performed ‘‘registra-
tion’’ is accurate, it means that the domain is well represented.
 Nevertheless, producing a valid mesh might only be
possible by allowing surface node reallocation. For this
reason, the subsequent mesh repair procedure must be able
to reallocate surface nodes and therefore move as little as
possible the nodes in order to achieve mesh validity and
acceptable quality levels while preserving an acceptable
organ shape representation level. Moreover, we consider
that separating validity recovery and quality improvement
procedures is important when repairing a mesh as proposed
in [10]. The eventual problem when not doing so is that if
an invalid node a and a poor quality node b are connected,
ﬁnding a new position to improve the quality of b might
decrease the chances of ﬁnding a new valid position for a.
A completely different approach was proposed by Luboz
et al. [22]. This work was considered as a continuation of
the mesh matching (M–M) technique, initially presented in
[6], as it repairs invalid conﬁgurations after registration.
First of all, it relies on the determinant of the Jacobian
matrix of the mapping between parent and actual element
conﬁguration F, to detect the nodes that make the elements
invalid. Let n be one of these nodes and feigi¼1;...;k the set of
elements for which n is invalid. The direction of displacement 
of n is deduced from the gradient of F computed from
each ei. In other words, the direction of displacement of n is
the one that best increases the sum of the Jacobian values
associated to node n. A ‘‘displacement step’’ is also computed 
for each node and ﬁnally the overall set of invalid
nodes is iteratively shifted until the mesh is repaired.

Although the approach of Luboz was successfully used to
achieve a valid state of several registered meshes, in some
complex cases a valid mesh conﬁguration could not be found
and furthermore it did not consider the JR to improve the
quality of the elements. Another important remark is that
Luboz computed the direction of displacement of invalid
nodes n by considering only elements at which n was
invalid, and it should be noted here that if two elements e1
and e2 share node n and e1 is valid but e2 is not, the displacement 
of n to improve e2 might cause invalidity at e1.
In this article, we propose a new mesh repair technique
that only considers the displacement of nodes that make the
mesh invalid or of poor quality. To compute the new

position of a given node, all the elements linked to it are
taken into account. Moreover, cases where invalid conﬁgurations 
arise from the computation of new nodal positions
are also managed. Once mesh validity is achieved, the
overall quality is assessed and if necessary, our algorithm
reallocates mesh nodes exhibiting poor quality. Here, the
chosen quality indicator is the JR [19], for which we have
chosen a threshold value JRmin ¼ 0:03 , as mentioned
earlier in Sect. 2.2. The details of our mesh repair technique 
are given in the next section.

4 The proposed mesh repair procedure

The mesh repair procedure proposed in this article is a
twofold sequential process:
• ﬁrst all the elements in the mesh are inspected and, if
necessary, their nodes positions are adapted so as to
recover validity,
then a second procedure is carried out on the mesh if
the achieved quality levels are unacceptable.

•

The corrections applied to the nodal positions are based
on the validity and quality criteria, both derived from the
Jacobian of the mapping between the parent and actual
element frame, as described above. Section 4.1 gives the
details on the evaluation of the Jacobian for a given element.
Usually distorted elements are sparsely distributed
within the mesh, therefore both validity and quality optimizations 
can be carried out on ‘‘repair regions’’ deﬁned as
connected subsets of the mesh encapsulating distorted
elements where displacements may only be applied to
‘‘improper nodes’’, i.e. nodes being either invalid or presenting 
poor quality, leaving other regions unaffected. This
local repair strategy signiﬁcantly decreases computational
complexity as the number of degrees of freedom to be
considered in a region is usually small. The local relaxations 
strategies for both validity recovery and quality
improvement are described in Sect. 4.2.

The above mentioned relaxations are carried out as
maximizations of validity and quality ‘‘energy’’ terms. The
formulation of each energy term ensures that the mesh
nodal conﬁguration reached at the end of the maximization
procedure meets the desired validity or quality standards.
The formulations of both energy terms are discussed in
Sect. 4.3.

The complete implementation of the iterative relaxation
algorithm, common to both validity and quality optimization 
phases, is given in Sect. 4.4.

Finally, Sect. 4.5 gives a complete registration and
repair example in which the processing of a particular
repair region is discussed in detail.

123

290

Engineering with Computers (2011) 27:285–297

4.1 Jacobian computation

4.1.1 Parent-to-actual element mapping

Mesh relaxation relies on the iterative computation of the
Jacobian matrix of the mapping between the element parent
(or reference) coordinates system ðn1; n2; n3Þ and the actual
element coordinates ðx1; x2; x3Þ : F : R3 ! R3; n7!x (see
Fig. 2). The Jacobian matrix is computed at a number of
‘‘control points’’ which can be either mesh nodes or element 
integration points (Gaussian quadrature points).

Let n ¼ ðn1; n2; n3Þ be an element point

For a given element type and mesh conﬁguration the
Jacobian matrix oF=on can be assembled and the exact
value of its determinant quickly evaluated using precomputed 
element shape function derivatives w.r.t. parent
coordinates, as described below.
in parent
coordinates and x ¼ ðx1; x2; x3Þ the corresponding point in
the actual element coordinates, i.e. x ¼ FðnÞ . For an isoparametric 
element the mapping F can be expressed as a
combination of the shape functions /i : R3 ! R used for
value interpolation of the PDE solution within the element:

xðnÞ :¼ FðnÞ ¼

/nðnÞ xn

ð1Þ

where N is the number of nodes of the considered element
3Þ are the coordinates of the nth element
and xn ¼ ðxn
node in the actual mesh conﬁguration.

1; xn

2; xn

The Jacobian matrix J is deﬁned at parent frame point n as:

X

N

n¼1

0
@

ox
on

ðnÞ ¼

JðnÞ :¼

J12
J22
J32
where Jij ¼ ðoxi=onjÞðnÞ .

J11
J21
J31

1
A

J13
J23
J33

The Jacobian matrix elements can be further rewritten

using Eq. 1, as:

Jij ¼

o
onj

X

N

n¼1

/nðnÞ xn

i ¼

X

N

n¼1

o/n
onj

ðnÞ xn

i ¼

X

N

n¼1

j ðnÞ xn
Pn

i

In the above expression all Pn

j ðnÞ :¼ ðo/n=onjÞðnÞ
fxngn¼1;...;N and can be evaluated beforehand for all the

the current element conﬁguration

are independent of

foreseen control points n .
Finally, the Jacobian matrix of mapping F computed at
point n is assembled using the 3  N pre-computed shape
function derivatives Pn

j as follows:

JðnÞ ¼

ð

1ðnÞ Pn
Pn

2ðnÞ Pn

3ðnÞÞ

ð2Þ

1
A

0
@

X

N

n¼1

xn
1
xn
2
xn
3

From the computational point of view, the assembly of
the matrix JðnÞ requires 9  N multiplications and 9  N

123

additions, and the computation of the 3 9 3 determinant
jJðnÞj , 9 multiplications and 5 additions.

If fast computation is mandatory, the technique proposed 
by Knupp [16] and based on a geometrical decomposition 
of hexahedra and wedges into tetrahedra, can be
considered.

4.1.2 Normalized Jacobian value

The Jacobian of the mapping F at parent point n represents
the ratio between the measure of an inﬁnitesimal volume
located around n and its image by F in the element actual
conﬁguration, as suggested by the notation ox=on .

At element deﬁnition stage, parent coordinates magnitudes 
are usually not related to the physical world of the
modeled domain. If the modeled domain has dimensions
the order of the millimeter and the mesh nodes coordinates
are expressed in meters, then these coordinates are the
order of 0.001. The parent coordinates, on the other hand,
are usually deﬁned in a standard frame and their value
range is in the order of 1.

As a consequence, if we consider a perfectly regular
element, the Jacobian computed at one of the nodes already
carries the information of the scale change in all three
dimensions. Its value is thus 0:001  0:001  0:001 ¼
10 9 . This small value, although mathematically correct,
does not numerically reﬂect the evenness of the element
shape. In this case, the expected Jacobian value, ignoring
the scale change, would be 1.

In order to measure element distortion while eliminating
the scale factor between parent and actual element referential,
 we use a ‘‘normalized’’ value of the Jacobian
deﬁned as the product of the original Jacobian value
deﬁned above and a correction term K computed as
follows.

Let us consider the trihedral deﬁned by the Jacobian
under study. Let x be the mean edge length of the three
edges forming the trihedral in the actual element frame.
Now let n be the mean edge length of the corresponding
trihedral in parent conﬁguration. We deﬁne the correction
factor in 3D as:

 
K ¼ n
x

3

In 2D the above fraction should be raised to the power of
2. The normalized value of the Jacobian computed at
parent point n is now deﬁned as:
JðnÞ :¼ KJðnÞ

If we consider the initial example where a scale factor of
0.001 was applied to all three coordinates between parent
and actual element frame, the normalized value of the

Engineering with Computers (2011) 27:285–297

Jacobian for all element points is now J ¼ 1 . This fact can
be formally apprehended by considering the following
rewriting of the normalized Jacobian and noting that the 3D
determinant raises the contents of the Jacobian matrix to

the power of 3:
3 ox
on

 
JðnÞ ¼ n
x

 ¼ 1

To simplify subsequent computations, we will assume
that both mean edge lengths n and x computed beforehand
using the input mesh conﬁguration, do not signiﬁcantly
vary during validity or quality relaxations. The K scale
factor computed for a given Jacobian is thus considered
constant.

In the remainder of the article, for the sake of clarity, we
will omit the bar placed over the J symbol, as in the above
notation, and refer to the normalized Jacobian simply as
‘‘Jacobian’’.


M23 :¼ J11
J31

J12
J32

 ¼ J11J32   J31J12

291

Using the minor notation, the determinant of the matrix



in Eq. 3 can be developed w.r.t. the ﬁrst row as:
Jðx1; . . .; xN; nÞ

¼ M11



X

X

xn
1Pn
X

2ðnÞ

xn
1Pn

1ðnÞ   M12
xn
1Pn

3ðnÞ

n

n

þ M13

After deriving the above expression w.r.t. xn

1, it follows

n

that:
1ðnÞ ¼ M11Pn
2ðnÞ þ M13Pn
oJn
Finally, the general expression of oJn

1ðnÞ   M12Pn

3ðnÞ
i ðnÞ can be obtained

by developing the determinant of the Jacobian matrix w.r.t.
the ith row:
i ðnÞ ¼ ð 1Þiþ1 Mi1Pn
oJn

1ðnÞ   Mi2Pn

2ðnÞ þ Mi3Pn

3ðnÞ





4.1.3 Jacobian differentiation

4.2 Local relaxations

As the relaxation procedure relies on variational computation 
of Jacobian or JR values w.r.t. actual element nodes
coordinates, it is interesting to derive from the formulation
given in Sect. 4.1.1 the required differential expression. To
this end, let’s consider a Jacobian value estimated at parent
point n within an element built on the set of nodes

fxngn¼1;...;N .
The Jacobian matrix depends now on the element nodes
positions, hence J ¼ Jðx1; . . .; xN; nÞ , and we shall seek the

expression of the partial derivative of the determinant
Jðx1; . . .; xN; nÞ
w.r.t. the ith coordinate of the nth node,


i.e.:
o Jðx1; . . .; xN; nÞ

=oxn



i

For clarity, we denote this quantity as oJn
i ðnÞ :¼
oJn





Jðx1; . . .; xN; nÞ
X

0
@

1
A

ð

1ðnÞ Pn
Pn

2ðnÞ Pn

3ðnÞ

o
oxn
o
oxn



i

i

N

n¼1

¼

xn
1
xn
2
xn
3

i ðnÞ . Thus:



Þ

The analytical expression of the above derivative can be
easily obtained for i = 1, 2, 3. Let’s start by deriving it for
1
i = 1. Expression 2 can be rewritten as:
A
1Pn
2Pn
3Pn

Jðx1;...;xN;nÞ¼

1ðnÞ
1ðnÞ
1ðnÞ

2ðnÞ
2ðnÞ
2ðnÞ

3ðnÞ
3ðnÞ
3ðnÞ

1Pn
2Pn
3Pn

1Pn
2Pn
3Pn

n xn
n xn
n xn

n xn
n xn
n xn

n xn
n xn
n xn

P
P
P

P
P
P

P
P
P

0
@

ð3Þ

Now let’s denote Mij the minor of matrix J after removal

of row i and column j. For example:

The goal of the relaxation procedures is to successively
optimize the Jacobian and JR values, during validity
recovery and quality optimization phases respectively, by
moving the ‘‘improper nodes’’ (INs), i.e. the mesh nodes
which Jacobian or JR values need improvement. As the INs
are being moved by the relaxation procedure, the Jacobian
or JR values at the neighboring nodes can also be altered
and potentially degraded.

Given the large number of nodes often found in FE
meshes, repairing procedures can quickly become computationally 
prohibitive. This complexity can be greatly
reduced by grouping all INs and their neighborhood into
‘‘repair regions’’ deﬁned in such a way that all nodal corrections 
applied inside a region leave the outside mesh
conﬁguration unchanged. This local repair approach makes
it possible to perform all relaxation procedures independently 
on each repair region identiﬁed within the mesh.
The construction of such regions is described below.

The topological deﬁnition of repair region is different
between validity and quality optimization phases. This
difference stems from the criteria being optimized: Jacobian 
or JR. During validity recovery, the displacement of a
mesh node n affects the Jacobians of all nodes connected
by an edge to n. While during quality optimization phase,
the Jacobian at n can become the maximal Jacobian of any
element n is part of, and thus the JR of any node sharing an
element with n can be affected by its position shift.

Prior to mesh validity recovery, the repair regions are
extracted as follows. All the mesh nodes are examined. If a
node n has a negative or null Jacobian within an element
and is not already part of a region then a new region is
grown starting from n.

123

292

Engineering with Computers (2011) 27:285–297

All Jacobians inﬂuenced by the newly found improper
node n are listed. For each of these Jacobians, the four
nodes forming the Jacobian trihedral are evaluated. If one
of these nodes appears to be invalid, it is assigned to the
current region and all its related Jacobian trihedrals within
the mesh are in turn examined. The repair region growth
stops where all nodes under scrutiny have strictly positive
Jacobian values within all elements they are part of.

The repair regions have the following properties. An IN
is part of one and only one repair region. The same being
true of Jacobian trihedrals, the regions are computationally
independent. A repair region can comprise many INs along
with their associated Jacobian trihedrals.

The repair region extraction performed before quality
optimization only slightly differs from the above algorithm.
All mesh nodes are examined. If a node n has a JR below
the acceptance threshold JRmin , and is not already part of a
region then a new region is grown starting from the newly
found improper node n.

All JR inﬂuenced by n are listed and for each one, the
nodes forming the associated element are evaluated. If one
of these nodes appears to have a poor quality level, it is
assigned to the current region and all its related JR are in
turn examined. The region growth stops where all nodes
under scrutiny have satisfactory JR values within all elements 
they are part of. As before, the resulting repaired
regions are computationally independent.

During mesh relaxation phases, it is not uncommon to
ﬁnd a repair region having a nodal conﬁguration for which
a solution cannot be found by only moving its INs. In such
a case, the number of degrees of freedom of the region
needs to be extended by allowing other nodes to be displaced 
by the relaxation procedure.

In our mesh repairing algorithm, we have implemented a
straightforward region extension method. A locking situation 
is detected in a repair region when the attractor of the
region relaxation is a nodal conﬁguration having persistent
INs. Should this situation arise,
the region degrees of
freedom are extended by allowing the displacement of a
mesh node connected to a region IN by an edge, during
mesh validity recovery phase, or by an element, during
quality optimization phase.

This new node is tagged as ‘‘improper’’ although its
associated Jacobian or JR values are acceptable, as it was
not identiﬁed as IN in the ﬁrst place. Validity or quality
criteria are used to choose the new IN among all possible
neighbors to the region INs. During mesh validity recovery
or quality optimization, the node having the lowest Jacobian 
or JR respectively, is selected.

As the extended region has a wider inﬂuence on the
surrounding mesh conﬁguration and might overlap with
another region, a ‘‘fusion’’ check is performed after a
region has been extended. To this end the sets of Jacobians

123

inﬂuenced by the INs of all regions are checked against
each other. If a common Jacobian is found between two
regions, these regions are merged into a single one. This
way, the resulting repaired regions layout retains the initial
numerical independence that allows all regions to be processed 
separately and efﬁciently.

4.3 Validity and quality energy formulation

The goal of validity recovery for a mesh region R is to ﬁnd
a conﬁguration where all the Jacobians2 in R, fJjgj2R , are

positive. This nodal relaxation can be formulated as a
maximization procedure driven by a ‘‘validity energy’’ EV,
expressed as the sum of all Jacobians within R.

Since the maximization of a sum of terms does not
guarantee that all terms end up being positive, all the
Jacobian values within the sum are affected by a penalty
function uk , which strength is controlled by an index k,
giving the expression of validity energy:
EV ¼
ukðJjÞ; where ukðtÞ ¼ 1   e kt

X

j2R

As the parameter k is increased during the maximization
process, the inﬂuence of negative values overbalances the
positive ones thus favoring a solution where all Jacobians
in the sum are positive.
Figure 4 shows the plot of uk for three different values
of k. As can be seen in the ﬁgure, ukðtÞ 1 for all values of
t; the slope at 0, which is the acceptance threshold for the
region Jacobians, is k; and the function decreases rapidly as
t reaches lower negative values.

The aim of the quality optimization procedure, on the
other hand, is to ﬁnd a nodal conﬁguration where all the JR

in a region R, fJRjgj2R , are above a predeﬁned value JRmin
which, in our implementation, was set to 0:03 in accordance 
with the quality standard required by the commercial
FE analysis software ANSYS Workbench (ANSYS Inc.,
USA) [14].

We deﬁne the ‘‘quality energy’’ EQ associated to this
relaxation problem as the sum of the JR within R weighted
by a different penalty function wl, thus:
EQ ¼

wlðJRjÞ; where wlðtÞ ¼ 1   elðJRmin tÞ

X

j2R

Similarly to mesh validity recovery, a penalty parameter
l is used to ﬁnd a solution where all the JR contributing to
the sum EQ are above the quality threshold JRmin . The
penalty functions wl behave similarly to uk : all values are
lower than 1; the slope at the JR acceptance threshold JRmin

2 Note that in the remainder of the article, all considered Jacobian
values are assumed to be normalized as described in 4.1.2

Engineering with Computers (2011) 27:285–297

293

Fig. 4 Penalty function uk plot,
at the vicinity of 0, for k = 0.5
(a), k = 1 (b) and k = 2 (c)

 1.5

 1.5

 1.5

-2

 2

-2

 2

-2

 2

-1.5

(a)

-1.5

(b)

-1.5

(c)

is l; and all values below this limit are increasingly
penalized as the value of l is raised during relaxation.

Indeed, given their

Prior to region relaxation at validity recovery or quality
optimization stage, the initial values of the parameter for
the corresponding penalty function uk or wl must be
carefully chosen.
formulation, an
excessive penalization of unwanted Jacobian or JR values
might induce strong numerical instabilities in the optimization 
process. To avoid this issue, the starting values of
k or l are determined by computing the slope of the considered 
penalty function at the most penalized energy term
(minimal Jacobian during validity recovery; minimal JR
during quality optimization) and ensuring that they do not
exceed a predeﬁned slope threshold.

As the optimization advances, the penalty level k or l is
steadily risen to force all energy term values to converge
towards the desired interval: ]0, 1] during validity recovery
and JRmin;1 during quality optimization phase.

Both optimizations are carried out by gradient ascent,
with a limited number of ascent steps, each having a limited
amplitude. These restrictions ensure that the nodal conﬁguration 
of the relaxed mesh retains as much similarity as
possible with the input mesh. The detailed relaxation
algorithm is discussed in Sect. 4.4.

4.4 Validity and quality energy maximization

Both relaxation procedures, i.e. the maximizations of the
energies EV and EQ deﬁned above, are performed for each
region by gradient ascent. The optimal nodal correction
directions are given by the gradient of the energy with
respect to the coordinates of the INs in the considered
region. These vectors are computed at each step using the
derivatives of the penalty functions duk=dt or dwl/dt along
with the expression of the Jacobian differential given in
Sect. 4.1.3.

The procedure successfully stops once an acceptable
nodal conﬁguration has been found. Otherwise, if locking
conﬁgurations are detected, successive region extensions
are performed and the relaxation is repeated with a higher
number of degrees of freedom in the region under study.
The relaxation procedure fails if no suitable nodal conﬁguration 
can be found.

The mesh repair technique presented here was developed 
as part of the mesh-match-and-repair [3] algorithm
which relies on a non-rigid deformation of a generic mesh
towards a speciﬁc geometry. In this context, the quality of
the domain surface representation yielded by the non-rigid
deformation procedure must be preserved as much as
possible by the mesh relaxation.

In the biomedical ﬁeld, the dimensions of the modeled
organs are the order of the centimeter, and usually a submillimetric 
mean surface representation accuracy is
required to ensure the relevance of the ﬁnite elements
analysis. To limit the alteration of the surface representation 
produced by non-rigid registration, our implementation 
of mesh repair limits the number of relaxation steps to
50, and the maximal amplitude of nodal corrections at each
step to 0.1 mm. The maximal allowed nodal displacement
is thus 5 mm, a situation which seldom occurs as it requires
the same node to be moved in a constant direction
throughout the relaxation process.

The common structure for both relaxation procedures is
given by Algorithm 1 and the main steps (identiﬁed by a
number) are commented below.

(1) To ensure numerical stability of the relaxation, ﬁnd
the maximal value of k or l, depending on the current
relaxation phase, which complies with the penalty
function slope limit, as discussed in Sect. 4.3.

(2) The considered relaxation energy gradient vector
being formed by the derivatives of the energy w.r.t.
each 3D coordinate of the region improper nodes,
the coordinates of each nodal correction appear in
the gradient vector on the corresponding row. In
our speciﬁc implementation, the magnitudes of the
nodal corrections are clamped, at each step,
to
0.1 mm by applying a scale factor to the overall
gradient vector. The value of the maximal nodal
correction amplitude used here is not universal and
must be determined for each application ﬁeld
according to the dimensions of the modeled domain
and maximal tolerance on the representation of its
geometry. The local maximum line search in the
gradient direction is performed using the golden
section technique [28] between the current nodal

123

294

Engineering with Computers (2011) 27:285–297

conﬁguration and the conﬁguration obtained after
applying the maximal allowed amplitude correction.
The maximized energy functions are not smooth. To
approximate the ascent direction despite the slope
discontinuities a centered ﬁnite differences (CFD)
scheme is used. From a numerical point of view, the
CFDs act as a smoothing operator over the nonsmooth 
energy landscape yielding a good estimate
of the gradient in the smooth domain and managing
continuous transitions through slope discontinuity
boundaries.

(3) Raise the value of k or l so as the slope at the most

penalized term reaches its maximal allowed value.

(4)

Increase the region number of degrees of freedom by
including new nodes, edge or element-connected to
the region improper nodes, as described in Sect. 4.2.
(5) The region extension can be carried out to the point
where the region overlaps the entire mesh and hence all
other regions. Yet it appears unnecessary to put into
practice this exhaustive and computationally prohibitive
solution as in most cases, acceptable region conﬁgurations 
can be found by including in the relaxation process
the immediate neighborhood of the originally improper
region nodes. Thus, the iterations stop when all mesh
nodes connected to the initial improper nodes in the
considered region have been included.

123

Engineering with Computers (2011) 27:285–297

295

Fig. 5 Left input patient data
(skull and skin surfaces
segmented from medical
images). Middle patient data
and Atlas mesh. Right the ﬁnal
mesh registered onto the
patient’s skin and skull and
repaired

numerical results reliability. Both procedures rely on the
computation of Jacobian values within the mesh elements,
which is a mesh acceptance criterion widely used in popular 
FE analysis softwares. Within both validity and quality
energy formulations, the Jacobian measures are weighted
by carefully designed penalty functions that lead the nodal
corrections towards a conﬁguration where both mesh
validity and quality criteria are satisﬁed. The procedure
proposed here was successfully used to produce FE meshes
suitable for FE analysis within commercial softwares [3,
4], such as ANSYS (Ansys Inc., USA).

Our mesh repair procedure only affects invalid and poor
quality regions, leaving other mesh areas unchanged. If an
acceptable conﬁguration cannot be found by applying
corrections to invalid or poor quality nodes, other nodes are
progressively included into the repair process, according to
their validity and quality levels, following the region
extension procedure described above in Sect. 4.2. This
strategy preserves valid mesh regions as well as those with
higher quality level. In addition to the initially identiﬁed
improper nodes, only nearly invalid or low quality nodes
can be reallocated by our procedure which strongly limits
the difference between the repaired and initial input mesh.
The region-based mesh untangling process proposed in
the article is able to deal with Jacobian inter-locking situations 
where a solution can only be found by moving
simultaneously a number of nodes involved in shared elements.
 These situations require the whole set of involved
elements to be considered simultaneously and, from our
experience, can hardly be solved using a per-node approach
as antagonist nodal displacements can quickly lead to an
inﬁnite loop in the mesh untangling routine. Moreover, all
revised mesh untangling techniques proposed in the literature 
are prepared to work with meshes that count with
already well
located surface nodes, meaning that only
internal nodes can be reallocated in order to achieve
validity and acceptable quality levels. In the case of ‘‘mesh
registration’’, it cannot be assumed that surface nodes are
well located and therefore a repair process like the one
introduced here, that moves as little as possible the nodes,
must be used. Another important fact is that we consider
that separating validity recovery and quality improvement

123

Fig. 6 a Initial invalid region having 5 improper nodes (INs) and 24
elements and b the repaired region formed by 32 elements

4.5 Repair example

Figure 5 shows an example of mesh registration and repair
for a face model. At the end of the repair process, all the
elements were valid and presented acceptable quality
(JR [ 0:03). In particular, Fig. 6 shows a sample validity
recovery for a repaired region. The invalid Jacobian trihedrals 
are drawn in dark and the valid Jacobians in light
gray-scale.

The region repair depicted in Fig. 6 took approximately
600 ms. The region had initially 5 invalid nodes and
comprised 24 elements. In order to ﬁnd a suitable nodal
conﬁguration the region had to be extended by 2 nodes,
therefore including 8 more elements in the region. The
mean magnitude of the corrections applied to the 7 displaced 
mesh nodes was 0.5 mm (max = 0.8 mm, r =
0.1 mm).

More examples like this can be found in [3] where 10
femur and 50 face FE meshes were successfully registered
and repaired in the context of orthopaedic and orthognathic
hard and soft tissues modelling studies.

5 Conclusions

A novel mesh repair algorithm, based on a mesh relaxation
driven by speciﬁc validity and quality energy formulations,
has been presented. It ﬁrst recovers mesh validity and
further improves mesh elements quality in order to enhance

296

Engineering with Computers (2011) 27:285–297

procedures is important when repairing a mesh as proposed
in [10]. The eventual problem when not doing so is that if
an invalid node a and a poor quality node b are edgeconnected,
 ﬁnding a new position to improve the quality of
b may decrease the chances of ﬁnding a new valid position
for a. We consider that to focus on mesh validity ﬁrst,
increases the chances of ﬁnding a valid position for a. Once
a and b are of poor quality, both will have the same
chances to increase their quality, but the difference is that
both start from a valid mesh.

To our knowledge, the only other Jacobian-based repair
algorithm for ‘‘registered meshes’’ was introduced by
Luboz et al. [22]. The differences between this last work
and our approach, as well as the main contributions of our
algorithm are summarized below.
•

•

In order to compute the new position of an invalid node
n, only the elements that were invalid at n were
considered in the work of Luboz et al. Our technique,
on the other hand,
the
elements attached to n as its displacement can cause
previously valid elements to become invalid.
In our approach, the nodes to be repaired are grouped in
independent regions to avoid prohibitive computational
costs.

takes into consideration all

• As opposed to Luboz et al., our algorithm considers
mesh quality as well as mesh validity indicators. It is
thus capable of producing a mesh that guarantees the
stability of the numerical solution yielded by the FE
analysis carried out upon it.

6 Perspectives

In the context of mesh-matching, repair strategies should
take into account
the surface representation constraint,
in situations where surface nodes are being moved during
relaxation. This can be accomplished by considering the
gradient of the energy undergoing maximization at a given
improper node not along all space directions, as described
above, but tangentially to the represented organ surface.
The surface representation constraint should only be
implemented for surface mesh nodes, i.e. the ones that need
to rest as close as possible to the modeled domain surface
during the relaxation, to preserve the accuracy of shape
representation.

Domain surface representation could be further maintained 
by correcting small registration degradations likely
to occur during repairing. To this end, an Atlas-to-surface
registration step might be performed after each relaxation
step. Nevertheless, as registration and relaxation are independent 
and not necessarily collaborative procedures, the
convergence of this alternating method should be carefully

123

studied so as to avoid inﬁnite loops and eventually reach a
repaired mesh conﬁguration.

The local repair technique presented in Sect. 4.2 has
proved to be effective in all cases considered so far [3].
Yet, nodal conﬁgurations featuring intricate element interlocking 
can be devised so that the approach proposed here
fails. To overcome this issue, alternate relaxation paradigms 
can be considered.

Indeed, we have often observed that during relaxation
through a conﬁguration
complex repair regions transit
with a strongly reduced number of improper nodes. In
cases where the relaxation fails, instead of extending the
original repaired region and repeating the process from its
initial conﬁguration, a more efﬁcient approach would be
to start from the region conﬁguration featuring the minimal 
number of INs encountered during the unsuccessful
relaxation.

Should a repair region be restricted to this smaller
subset, its inﬂuence within the mesh must be recomputed
and possible region overlaps checked for. Furthermore, in
order to control the nodal correction amplitudes, track must
be kept of anterior nodal displacements in order to guarantee 
that the original surface representation does not get
excessively perturbed. Although promising, this approach
has not yet been implemented in our software.

Finally, future work should be focused on adding other
quality criteria to repair the mesh. The JR is an excellent
quality criterion that helps to detect
invalid and poor
quality elements, but it cannot detect, for instance, elements 
with small dihedral angles or elements with warped
faces. For these reasons, other quality criteria like dihedral
angles, aspect-ratio, volume, warping factor, etc. should be
also considered to ensure a quality output mesh.

Acknowledgments This project has been ﬁnancially supported by
FONDECYT 1061227, ALFA IPECA project, STIC-AmSud PLOMO,
and ECOS-Sud C06E04.

References

1. Alliez P, Cohen-Steiner D, Yvinec M, Desbrun M (2005) Variational 
tetrahedral meshing. ACM Trans Graph 24(3):617–625

2. Berar M, Desvignes M, Bailly G, Payan Y (2004) 3d meshes
registration: application to statistical skull model. In: Image
analysis and recognition. Lecture Notes in Computer Science, vol
3212. Springer, Berlin, pp 100–107

3. Bucki M, Lobos C, Payan Y (2010) A fast and robust patient
speciﬁc ﬁnite element mesh registration technique: application to
60 clinical cases. Med Image Anal 14(3):303–317

4. Bucki M, Nazari A, Payan Y (2010) Finite element speakerspeciﬁc 
face model generation for the study of speech production.
Comput Methods Biomech Biomed Eng 14(4):459–467

5. Castellano-Smith A, Hartkens T, Schnabel J, Hose R, Liu H, Hall
W, Truwit C, Hawkes D, Hill D (2001) Constructing patient
speciﬁc models for correcting intraoperative brain deformation.
In: MICCAI, pp 1091–1098

Engineering with Computers (2011) 27:285–297

297

6. Couteau B, Payan Y, Lavallee S (2000) The mesh-matching
algorithm: an automatic 3d mesh generator for ﬁnite element
structures. J Biomech 33(8):1005–1009

7. Delingette H (1999) General object reconstruction based on

simplex meshes. Int J Comput Vis 32(2):111–146

8. Field D (2000) Qualitative measures for initial meshes. Int J

Numer Methods Eng 47:887–906

9. Freitag L (1997) On combining Laplacian and optimization-based
mesh smoothing techniques. In: Trends in unstructured mesh
generation. ASME Applied Mechanics Division, vol 220, pp 37–44
10. Freitag L, Plassmann P (2000) Local optimization-based simplicial 
mesh untangling and improvement. Int J Numer Methods
Eng 49(1–2):109–125

11. Garimella R, Shashkov M, Knupp P (2004) Triangular and
quadrilateral surface mesh quality optimization using local
parametrization. Comput Methods Appl Mech Eng 193:913–928
12. George P, Borouchaki H, Laug P (2002) An efﬁcient algorithm

for 3d adaptive meshing. Adv Eng Software 33:377–387

13. Hughes T (1987) The ﬁnite element method: linear static and

dynamic ﬁnite element analysis. Dover Publications, NY

14. Kelly S (1998) Element shape testing. In: Ansys theory reference,

Chap 13. Ansys, USA

15. Knupp P (1999) Matrix norms & the condition number, a general
framework to improve mesh quality via node-movement. In:
Proceedings, 8th international meshing roundtable, pp 13–22

16. Knupp P (2000) Achieving ﬁnite element mesh quality via
optimization of the jacobian matrix norm and associated quantities.
 Part II—a framework for volume mesh optimization and the
condition number of the Jacobian matrix. Int J Numer Methods
Eng 48:1165–1185

17. Knupp P (2000) Hexahedral mesh untangling & algebraic mesh
In: Proceedings, 9th international meshing

quality metrics.
roundtable, pp 173–183

18. Knupp PM, Margolin LG, Shashkov MJ (2002) Reference
for arbitrary

Jacobian optimization-based rezone strategies
Lagrangian Eulerian methods. J Comput Phys 176:93–128

19. Kwok W, Chen Z (2000) A simple and effective mesh quality
metric for hexahedral and wedge elements. In: Proceedings, 9th
international meshing roundtable, pp 325–333

20. Lobos C, Bucki M, Hitschfeld N, Payan Y (2007) Mixed-element
mesh for an intra-operative modeling of the brain tumor extraction.
 In: Proceedings, 16th international meshing roundtable.
Sandia National Laboratories, Springer, New York, pp 387–404
21. Luboz V, Chabanas M, Swider P, Payan Y (2005) Orbital and
maxillofacial computer aided surgery: patient-speciﬁc ﬁnite

element models to predict surgical outcomes. Comput Methods
Biomech Biomed Eng 8(4):259–265

22. Luboz V, Payan Y, Couteau B (2001) Automatic 3d ﬁnite element 
mesh generation: an atlas ﬁtted onto patient data. In: Proceedings 
of
the ﬁfth international symposium on computer
methods in biomechanics and biomedical engineering

23. Molino N, Bridson R, Teran J, Fedkiw R (2003) A crystalline, red
green strategy for meshing highly deformable objects with tetrahedra.
 In: Proceedings, 12th international meshing roundtable.
Sandia National Laboratories, Springer, Berlin, pp 103–114

24. Montagnat J, Delingette H (1998) Globally constrained deformable 
models for 3d object reconstruction. Signal Process (SP)
71(2):173–186

25. Montagnat J, Delingette H (2005) 4d deformable models with
temporal constraints: application to 4d cardiac image segmentation.
 Med Image Anal (MedIA) 9(1):87–100

26. Nesme M, Faure F, Payan Y (2010) Accurate interactive animation 
of deformable models at arbitrary resolution. Int J Image
Graph 10(2):175–202

27. Paoletti S (2002) Polyhedral mesh optimization using the interpolation 
tensor. In: Proceedings, 11th international meshing
roundtable, pp 19–28

28. Press WH, Teukolsky SA, Vetterling WT, Flanery BP (1992)
Numerical recipes in C. Cambridge University Press, Cambridge
29. Schnabel J, Rueckert D, Quist M, Blackall J, Castellano-Smith A,
Hartkens T, Penney G, Hall W, Liu H, Truwit C, Gerritsen F, Hill
D, Hawkes D (2001) A generic framework for non-rigid registration 
based on non-uniform multi-level free-form deformations.
In: MICCAI, pp. 573–581

30. Shashkov MJ, Knupp PM (2001) Optimization-based referencematrix 
rezone strategies for arbitrary Lagrangian-Eulerian methods 
on unstructured grids. In: Proceedings, 10th international
meshing roundtable, pp 167–176

31. Shewchuk J (2002) What is a good linear element? interpolation,
conditioning, and quality measures. In: Proceedings of the 11th
international meshing roundtable. Sandia National Laboratories,
Springer, Berlin, pp. 115–126

32. Zhang Y, Bajaj C (2006) Adaptive and quality quadrilateral/
hexahedral meshing from volumetric data. Comput Methods
Appl Mech Eng 195(9–12):942–960

33. Zienkiewicz O, Taylor R (1989) The ﬁnite element method.

McGraw-Hill, London

123

