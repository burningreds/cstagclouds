Robust Tree-Ring Detection

Mauricio Cerda1,3, Nancy Hitschfeld-Kahler1, and Domingo Mery2

1 Department of Computer Science, University of Chile,

Blanco Encalada 2120, Santiago, Chile

2 Department of Computer Science, Pontiﬁcia Universidad Cat´olica de Chile,

Av. Vicu˜na Mackenna 4860(143), Santiago, Chile

mcerda,nancy@dcc.uchile.cl

dmery@ing.puc.cl

3 INRIA-Loria Laboratory, Campus Scientiﬁque 54506,

Vandoeuvre-l`es-Nancy, France

Abstract. The study of tree-rings is a common task in dendrology. Usually 
the rings deliver information about the age of the tree, historic climate 
conditions and forest densities. Many diﬀerent techniques exist to
perform the tree-ring detection, but they commonly are semi-automatic.
The main idea of this work is to propose an automatic process for the
tree-ring detection and compare it with a manual detection made by an
expert in dendrology. The proposed technique is based on a variant of
the Generalized Hough Transform (GHT) created using a very simple
growing model of the tree. The presented automatic algorithm shows
tolerance to textured and very noisy images, giving a good tree-ring
recognition in most of the cases. In particular, it correctly detects the
80% of the tree-rings in our sample database.

Keywords: dendrology, tree-ring, hough transform.

1 Introduction

The tree-rings or annual growth rings are formed in response to seasonal changes.
Generally, a tree-ring is composed by two growth zones. In the ﬁrst part of the
growing season, thin-walled cells of large radial diameters are produced (early-
wood), while towards the end of the season thick-walled cells of smaller diameter
appears (latewood), resulting in a sharp disjunction between growth rings (see
Fig. 1).

Analysis of tree-rings from cross-sections of the tree (called stem analysis)
plays a main role in assessing growth response of trees to environmental factors.
Furthermore, stem analysis is used to develop tree growth models to make yield
and stand tables, and to reconstruct the entire historical growth record. Hence
it has applicability in dendrochronological analysis 1. The tree-ring analysis is
usually made recording the ring-width of four or eight directions on a wood disc,
however in some applications it is necessary to record the entire growth ring [1],
achieving a better estimation of ring areas.

1 Study of woody plants such as shrubs and lianas.

D. Mery and L. Rueda (Eds.): PSIVT 2007, LNCS 4872, pp. 575–585, 2007.
c(cid:2) Springer-Verlag Berlin Heidelberg 2007

576

M. Cerda, N. Hitschfeld-Kahler, and D. Mery

The automatization of the tree-ring recognition process is important because
it could make more comparable and reproducible results, currently manually performed 
by experts. Additionally, an automatic algorithm could reduce the time
required to perform the analysis. The automatization of the tree-ring recognition
process requires of image analysis, but this is a tough task, because of a wood
disc image contains a high level of noise. The noise of the wood disc images comes
mainly from the texture and imperfections of the wood, and the acquisition process 
itself. Another problem is the diﬃculty to express the rings properties in
any detection algorithm as constraints or desirable properties.

Each tree-ring can be approximated by using a polygon (closed polyline). The
most obvious property of a tree-ring is that the polygon that represents it must
have empty intersections with the polygons that represent the other rings. In
addition, each polygon must contain the center of the wood disc (position of
the pith2). Some of the not obvious properties are that each ring is located at
the transition dark-to-light in the latewood sector taking as reference point the
pith position of the tree (see Fig. 1) and following the radial growth direction
[1], and also, that the shape of one ring constrains the shape of the others. In
Fig. 1, the shape similarity of close rings can be observed. The idea of this work
is to propose a simple way to include those restrictions in the detection process
in order to build an automatic algorithm for tree-ring detection.

In Section 2, we give an overview of diﬀerent existing approaches for the treering 
detection and some other techniques that could be applied to this problem.
The proposed algorithm is detailed in Section 3 and the results are presented in
Section 4. Finally, the conclusions of our work are presented in Section 5.

2 Overview

From all the techniques used and proposed for the tree-ring detection problem, a
simple classiﬁcation can be made: techniques based on local features, techniques
based on global models and other techniques. In the following section a discussion
on the eﬀectiveness of each technique is presented.

2.1 Local Features Techniques

The work of Conner [2] proposes a modiﬁed version of Canny edge detector [3]
with a preferred edge orientation for each region of interest and a suppression
of any edge that is not coming from a transition from latewood to earlywood.
The inherent problem of this scheme is that assumes one edge orientation for a
certain region of interest. The most interesting idea of the work of Conner [2] is
the restriction imposed to the allowable edge orientations, but the main problem
is that the restriction is ﬁxed to one value for each region of interest.

Laggoune et al. [4] propose a diﬀerent edge model that could handle noisy
edges as the ones present in wood disc images. This approach is still strongly

2 The oldest part of the tree, at its center, is called the pith.

Robust Tree-Ring Detection

577

Fig. 1. The image shows a cross-cut from a Radiata pine trunk. The lighter zone
indicates the earlywood, and the darker one the latewood. The abrupt edge of the
latewood indicates the end of the growth season. The dotted line represents one possible
approximate ring representation.

dependent on the kind of edge model assumed, then it does not always work. So it
is possible to ﬁnd wood disc images where in some parts, the Canny edge detector
works better than noisy edge models as the one described in [4], and viceversa.
Again, inherent to the local nature of this technique, there is no warranty that
the output will be a closed shape for each tree-ring.

2.2 Global Model Techniques

One of the most simple techniques for template matching is the Hough Transform.
 In [5] a good review of this topic is given. The main restriction of the Hough
Transform is that a certain shape must be usually assumed, for example a circle
or an ellipse, and this delivers acceptable solutions only in a very reduced number
of cases. In the other hand, a detection based on non-analytical shapes, as could
be the output of a Generalized Hough Transform (GHT) [5,6] can not be used directly 
in the tree-rings problem. The GHT must be adapted ﬁrst to the special
characteristics of the tree-rings problem, as an example, there is no a priori ring
shape to look for. Other techniques such as LevelSets [7], are not well suited to
include restrictions speciﬁc to this problem, at least not in a simple way.

2.3 Other Techniques

The mentioned algorithms are mostly based on common techniques used in
image processing, but a family of algorithms taking advantage of biologicalmorphological 
properties has also been developed. In order to understand the
nature of some of these algorithms it is important to realize that the most common 
objective is not to detect each full ring, but other characteristics such as
the number of rings, the area of the rings, and the mean ring width.

The work of Georg Von Arx et al. [8] presents an automatic technique to
determine the mentioned characteristics and some additional ones. The authors

578

M. Cerda, N. Hitschfeld-Kahler, and D. Mery

use a high resolution image of a prepared sample where the wood cells can be
visualized and appear in a diﬀerent color. Using this image as input, the next
step is to morphologically classify the cells according to the tree species in order
to identify the ring zones. This work gives the idea that the input to detect the
rings can be greatly improved (coloring cells) even before any process is applied,
and it takes into account that the algorithm must make adjustments depending
on the species. For the problem of recognizing the full shape of each ring, this
technique does not deliver a good solution because it can not guarantee closed
shapes and the rings can intersect each other.

In the work of Soille et al. [9] another approach is presented to compute the
tree-ring area. The authors use diﬀerent morphological operators and thresholding 
values to identify the ring zones and combine this information with the
gradient of the image. The morphological ﬁlters are supposed to repair failures
in the rings. The authors discuss the problem of too close rings and indicate that
in some cases the approach does not deliver closed shapes.

Table 1. Comparison between the diﬀerent existing algorithms

Technique Authors
Local

Global

Others

-Conner [2]
-Laggoune et al. [4]
-Hough Transform [5]
-Generalized Hough Transform [6]
-Level Sets [7]
-Georg Von Arx et al. [8]
-Soille et al. [9]

Filter noise Impose shape Overlap rings

No
Yes
Yes
Yes
Yes
No
No

No
No
Yes
No
-
No
No

Yes
Yes
No
No
-
No
No

For the tree-ring detection process, most of the previous techniques have been
already tested on wood discs. Table 1 shows a comparison among them that
takes into account desirable properties that a good recognition method should
have. Since most of the reviewed techniques use only local or close to local
information [2,4,8,9], those techniques do not allow a proper recognition of the
rings. A proper recognition method should consider global restrictions such as
the similarity of the close rings and the inﬂuence of the shape of each ring on
the neighboring ones, among others. As shown in Table 1, GHT global model
shows more attractive characteristics but it must be adapted to the problem. We
claim than our top-down GHT-based approach, described in the next section, is
more similar to what the expert is implicitly doing in the manual processing and
because of that, closer to what we have evaluated as a better technique than the
known ones.

3 Proposed Algorithm

The proposed technique requires two parameters for each image, to compute the
full ring set. These two parameters are the location of the center of the wood disc

Robust Tree-Ring Detection

579

Fig. 2. Block diagram of the complete algorithm

image or pith (C) and a polygon (convex or not) that represents the perimeter
of the trunk (P ). Both parameters can be computed in diﬀerent ways or even
manually to have a semi-automatic algorithm. The description of the automatic
procedure to compute C and P is explained in detail in Sections 3.2 and 3.3,
respectively.

3.1 Main Algorithm
Fig. 2 shows a general diagram of the algorithm and Fig. 3 shows the algorithm
applied to a wood disc image. The algorithm consists of three steps: Filtering 
(Fig. 3(b) and (c)), Accumulation (Fig. 3(d)) and Selection of the rings
(Fig. 3(e)).

Filtering. The image is ﬁrstly transformed to the HSV color space, taking just
the saturation component because this is the most representative value for the
rings in the examined data. After this transformation, the Canny edge detection
algorithm [3] is applied (any other gradient based technique could also be used).
Then, for any point Q detected as belonging to an edge (edge point), the following
angle is computed:

(cid:2) (cid:2)Q − C(cid:2)(cid:2)∇I|Q(cid:2)
< Q − C,∇I|Q >

(cid:3)

α = arccos

(1)

where I is the image intensity at point Q. Using a threshold level for the angle
α, it is possible to keep only dark-to-light edges. Note that usually the Canny
algorithm delivers two edges for the latewood zone. In order to smooth this last
process, we have applied two diﬀerent thresholding levels, and for this, a standard
double threshold linking was used. The output of this part of the algorithm is
a binary image of not necessary connected edges but mostly in the correct ring
locations. Noise is not completely removed at this point.

580

M. Cerda, N. Hitschfeld-Kahler, and D. Mery

Fig. 3. Illustration of the proposed algorithm in each stage. (a) Sector of an input
image. (b) Edges obtained after the Canny edge detector is applied to (a). (c) Edges
obtained after the dark-to-light ﬁltering was applied to (b). (d) All the possible selectable 
polygons computed from P and C. (e) The selected rings from (d).

Accumulation. The growth model used to generate all the possible selectable
polygons requires the tree trunk perimeter P , and the pith location C of the wood
disk. The following restriction on the shape of the polygon is then imposed: “Any
polygon R can be represented as a function of the tree trunk perimeter P around
the center of symmetry of the tree (pith) C”, (see Fig. 4(a)). We can represent
this function by using the following expression:

Ri (Pi, C, k) = C + k (C − Pi)

(2)
where Ri represents the i−th vertex in the selectable polygon of scale parameter
k. Pi is the i− th vertex of the tree trunk perimeter. The space of accumulation
is 1D because is for the parameter k. The perimeter is not necessary a circle
and C is not necessary the center of the circle so, this scheme takes implicitly
into account the normal asymmetries and the constraints of the rings. After the
ﬁltering, each point detected as belonging to an edge is assigned to the closest
selectable polygon represented by a certain value of k. The output of this stage is
an accumulator for k, that represents roughly the probability of each selectable
polygon of being a tree-ring. In the simple case of an square image circumscribed
about a circle P with C the center of that circle, each selectable polygon will be
a circle of center C, k will represent the normalized radius and the total number
of selectable polygons will be at the most N/2, where N is the width of the
image.

Selection of the Rings. The last stage of the algorithm takes the 1D accumulator 
and computes all the local maxima considering the maximum of three
consecutive k values. This way to compute the local maxima gives less false negative 
rings than taking ﬁve or more consecutive k values. Usually all the local
maxima correspond to a ring, but it is necessary to ﬁx a certain level of noise
depending on the size of the image and on the size of the smaller tree-ring. For
example in a 512x512 image, an accumulator with a value less than or equal to
10 for a certain polygon of scale parameter k, is probably noise (see Fig. 4(b)).

Robust Tree-Ring Detection

581

(a)

(b)

Fig. 4. (a) a ring is computed taking the 50% of P. (b) an accumulator for 40 possible
scale changes (k). Note that larger rings, more similar to the tree trunk perimeter, have
a higher frequency value; this is because a larger ring is composed of more edge points.

3.2 Center of the Wood Disc Image

To estimate a point (x0, y0), that represents the center of the wood disc image
or pith, we can use a non-linear minimization process such as a gradient based
method like the one mentioned in [4]. By using this approach we ﬁnd the point
(x0, y0) that minimizes the following objective function:

(cid:4)

J(x0, y0) =

(xi − x0)2 + (yi − y0)2

(3)

i

where xi and yi represent the coordinates of each point detected as belonging
to an edge in the wood disc image. The minimization gives a point usually very
close to the center, but not precise enough for the main algorithm. This is then
corrected by using a common property observed in the sample database: the
center is the darkest point around a certain distance from (x0, y0). After testing
this strategy in many images it is possible to ﬁx the size of the neighborhood to
be checked.

3.3 Perimeter of the Wood Disc Image

Several approaches were tested to select the most appropriate tree trunk perimeter 
approximation. The most simple one was to compute the convex hull of the
edge image. The main problem with this approach is that it does not work well if
the perimeter has large concavities or the shape of the tree bark is too diﬀerent
from the shape of the most external ring. The second approach was to use a
Snake [5] algorithm but this also does not handle the concavities of the bark
and it is quite more complex. Finally, the selected technique was to compute the
perimeter using the convex hull of the edge image mostly because of the good
results obtained in most of the wood disc images of the sample database and
because of its simple implementation.

582

M. Cerda, N. Hitschfeld-Kahler, and D. Mery

3.4 Implementation

In the design of the implementation, one key factor was the performance of the
algorithm. The most time consuming step in the presented algorithm is the accumulation 
stage. Considering an image of N 2 pixels, in the worst case all of them
belong to an edge, the accumulator will have at the most N possible values each
one representing a possible ring and if each possible ring is composed of M points
(M segments), a brut force implementation will take time O(N 3M) because for
each pixel the closest possible ring must be calculated. A faster implementation
is obtained by pre-computing the Voronoi diagram [10] of the vertices that form
all the possible selectable rings and then iterating cell by cell of the diagram.
This implementation takes time O(N 2) to perform the accumulation. Note that
the Voronoi diagram can be computed in time O((N M)log(N M)) using the
Quickhull algorithm. To give an idea of the ﬁnal performance, the average time
to process one wood disc (see Section 4), was 172s: 46% of this time for the accumulation,
 18% for the Voronoi computation, 12% for the center and ﬁltering
stage, and the rest was spent in reading and in the transformation operations
such as RGB to HSV conversion.

4 Results

In this section we present and compare the ring detection results using the
proposed automatic algorithm, the semi-automatic variant and a manual ring
detection that we have called “real”. The automatic version of the algorithm was
applied by using the same parameters for the Canny edge detector and the double 
threshold linking in each one of the images. The semi-automatic technique
was performed by asking the user for the perimeter, but the center point was still
automatically obtained. All tests were performed using Matlab R(cid:4) Software [11],

Table 2. Table of results indicating the number of detected rings of each technique.
TP: true positive rings, FN: false negative rings, ˆSn = T P

T P +F N : sensitivity.

Automatic

Semi-automatic

Images

Wood disc (base)
Wood disc 1
Wood disc 2
Wood disc 3
Wood disc 4
Wood disc 5
Wood disc 6
Wood disc 7
Wood disc 8
Wood disc 9
<>

Diﬃculty

Real

(1-10) TP FN

3
4
5
5
6
7
7
7
7
9
-

0
9
9
0
11 0
9
0
12 0
11 0
10 0
12 0
0
9
0
9
-
-

ˆSn TP FN
1
1
1
1
1
1
1
1
1
1
1

0
9
9
0
10 1
7
2
5
7
6
5
10 1
8
4
1
8
2
7
-
-

ˆSn TP FN
0
1.00 9
1.00 9
0
0.90 10 1
0.77 7
2
0.58 10 2
0.54 6
5
0.90 10 0
0.66 8
4
1
0.88 8
2
0.77 7
0.80 -
-

ˆSn
1.00
1.00
0.90
0.77
0.83
0.54
1.00
0.66
0.88
0.77
0.85

Table 3. Number of detected rings that mix two diﬀerent manually detected rings

Robust Tree-Ring Detection

583

Images
Wood disc (base)
Wood disc 1
Wood disc 2
Wood disc 3
Wood disc 4
Wood disc 5
Wood disc 6
Wood disc 7
Wood disc 8
Wood disc 9

Diﬃculty(1-10) Real Automatic Semi-automatic

3
4
5
5
6
7
7
7
7
9

0
0
0
0
0
0
0
0
0
0

0
0
1
2
2
4
1
3
0
3

0
0
1
2
2
2
0
0
0
3

with 10 color jpeg ﬁles of approximately 700 by 700 pixels each. The wood disk
images were taken directly in the ﬁeld with a Nikon Coolpix 885 camera. The
chosen images include both, easy and diﬃcult cases even for manual detection,
and were selected for being representative of the main diﬃculties founded in the
wood disc image database. The counting of the rings was performed automatically 
and the overlapping manually.

The results are summarized in Table 2 and Table 3. It can be seen that the
proposed algorithm gives very good results. The automatic algorithm usually
recognizes the same number of rings (TP+overlaps) than the manual detection
does, but sometimes, some of them are not true rings. This occurs when the
detection algorithm mix two very close rings as shown in Table 3. This kind of
problem in the automatic detection algorithm is produced when the bark of the
tree does not give a good approximation of the ﬁrst ring, as occurs in wood disc 5
and 7. In this case, we recommend to use the semi-automatic algorithm because
it usually improves the results. If the bark is too deformed is better to ask the
user to directly indicate the ﬁrst ring instead of the bark. It can be also seen
in Table 2 and Table 3 that in the wood tree disc 9, the algorithm (automatic
or semi-automatic) did not work well, but it was because this wood disc image
contains a branch, situation that deforms the normal radial growth of the tree.
The assumption that all the rings can be obtained by scaling the shape of the
bark works well, when the bark is a good approximation of the ﬁrst ring (usually
this implies a thin bark) and the wood disc presents a close to regular growing
(without branches).

5 Conclusions

In this work we present a robust automatic algorithm for tree-ring detection that
works well in recognizing the rings of trees with normal or close to normal growing,
 tolerating false partial rings, textured zones and even additional lines. The
proposed technique is composed of a ﬁltering stage, followed by a voting for the
re-scaling parameter of the perimeter. The new idea presented here is to take a

584

M. Cerda, N. Hitschfeld-Kahler, and D. Mery

(a) Sample Tree 3.

(b) Fully automatic recognition with the input 
ﬁgure 5(a). The detailed sector shows
two overlapping rings.

(c) Sample Tree 8.

(d) Fully automatic recognition with
the input ﬁgure 5(c).

Fig. 5. Two examples of input and result using the automatic algorithm

ring-prototype obtained from the bark of the wood tree image as input for this
Hough-like-Transform without any previous assumption in the shape of the rings
and to deform this ring-prototype using a very simple growing model of the tree.
Future work includes (a) the use of diﬀerent edge detection models more adapted
to recognize noisy edges, (b) the use of a more accurate growing model for the tree
rings and (c) the testing of the algorithm in diﬀerent tree species.

Acknowledgments

Special thanks to Fernando Padilla from the Mathematical Modeling Center
(CMM) of the Faculty of Physical Sciences and Mathematics (FCFM) of the
University of Chile for the revision of the paper and valuable comments on how

Robust Tree-Ring Detection

585

to improve it and for lending us the trunk image database and to Bernard Girau
for useful comments about the paper. The authors acknowledge ﬁnancial support
to FONDECYT Chile - Project No. 1061227.

References

1. Forest, L., Padilla, F., Mart´ınez, S., Demongeot, J., Mart´ın, J.S.: Modelling of auxin
transport aﬀected by gravity and diﬀerential radial growth. Journal of Theoretical
Biology 241, 241–251 (2006)

2. Conner, W.S., Schowengerdt, R.A.: Design of a computer vision based tree ring
dating system. In: IEEE Southwest Symposium on Image Analysis and Interpretation,
 pp. 256–261 (1998)

3. Canny, J.: A computational approach to edge detection. IEEE Trans. Pattern Anal.

Mach. Intell. 8, 679–698 (1986)

4. Laggoune, H., Sarifuddin, G.V.: Tree ring analysis. In: Canadian Conference on

Electrical and Computer Engineering, pp. 1574–1577 (2005)

5. Nixon, M., Aguado, A.: Feature Extraction & Image Processing. Elsevier, Amsterdam 
(2005)

6. Ballard, D.H.: Generalizing the hough transform to detect arbitrary shapes. Pattern 
Recognition 13(2), 111–122 (1981)

7. Sethian, J.A.: Level Set Methods and Fast Marching methods. Cambridge University 
Press, Cambridge (1999)

8. Arx, G.V., Dietz, H.: Automated image analysis of annual rings in the roots of

perennial forbs. International Journal of Plant Sciences 166, 723–732 (2005)

9. Soille, P., Misson, L.: Tree ring area measurements using morphological image

analysis. Can. J. For. Res. 31, 1074–1083 (2001)

10. Aurenhammer, F.: Voronoi diagrams - a survey of a fundamental geometric data

structure. ACM Comput. Surv. 23, 345–405 (1991)

11. Mathworks:

Image processing toolbox for use with Matlab: User Guide. The

Mathworks Inc., Natick, MA, USA (2007)

