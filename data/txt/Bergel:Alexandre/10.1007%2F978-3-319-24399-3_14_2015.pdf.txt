A Tool for Assessing Quality of Rescue Plans

by Combining Visualizations of Diﬀerent

Business Process Perspectives

Alvaro Jose Peralta1, Nguyen Tuan Thanh Le2,3, Serge Stinckwich5,6,7(B),

Chihab Hanachi4, Alexandre Bergel1, and Tuong Vinh Ho5,6,8

1 Pleiad Lab, Department of Computer Science (DCC), University of Chile,

Santiago, Chile

ajperalt@gmail.com, alexandre.bergel@me.com

2 University Paul Sabatier Toulouse III, IRIT Laboratory, Toulouse, France

3 University of Science and Technology of Hanoi, Hanoi, Vietnam

4 University of Toulouse I, IRIT Laboratory, Toulouse, France

nguyen.le@irit.fr

5 IRD, UMI 209, UMMISCO, IRD France Nord, 93143 Bondy, France

hanachi@univ-tlse1.fr

serge.stinckwich@ird.fr, ho.tuong.vinh@ifi.edu.vn

6 Sorbonne Universit´es, University of Paris 06, UMI 209, UMMISCO,

7 Universit´e de Caen Basse-Normandie, Caen, France

75005 Paris, France

8 Institute Francophone International, Vietnam National University, Hanoi, Vietnam

Abstract. Rescue plans for crisis situations such as natural or made disasters 
are mostly presented in a textual format to the relevant authority.
Assessing the quality of a rescue plan requires analyzing diﬀerent perspectives,
 such as plan complexity, resources costs, service time, allocation 
strategy and organization eﬃciency. Unfortunately, textual rescue
plans lack a formal structure to ease the reading and navigation through
the document. To address this problem we are composing tailored visualizations,
 each visualization representing a particular perspective. We
provide a domain speciﬁc language to describe domain speciﬁc visualizations 
of processes. We validate our approach using static and dynamic
analysis of the Ho Chi Minh city rescue plan in case of a tsunami. Our
approach provides recommendations that are useful for the authority to
improve the original rescue plan.

Keywords: Rescue plans assessments · Business process modeling ·
Visualization · BPMN

1 Introduction

Disaster situations including natural disasters, man-made disasters or combined
natural and man-made disaster with environmental consequences, require the
eﬃcient coordination of various stakeholders (public sectors, private sectors, as
c(cid:2) Springer International Publishing Switzerland 2015
N. Bellamine Ben Saoud et al. (Eds.): ISCRAM-med 2015, LNBIP 233, pp. 155–166, 2015.
DOI: 10.1007/978-3-319-24399-3 14

156

A.J. Peralta et al.

well as citizens) in order to minimize damages. When the Hurricane Katrina
stroke the United States in 2005, it has been estimated that the lack of eﬃcient
coordination caused the death of more than 1200 people in Louisiana, Mississippi 
and Alabama, left hundreds of thousands homeless and caused tens of
billions of dollars in damage [1]. In the context of crisis resolution, rescue plans
unfortunately are mostly expressed in textual guidelines. It has been shown that
textual guidelines suﬀer drawbacks [2–4]. Ambiguities make the coordination
among stakeholders diﬃcult and error prone. Moreover, textual guidelines are
not easy to analyze and simulate.

An alternative to textual plans is to use Business Process Modeling (BPM)
as we did in our previous work [2–4] with a BPMN (Business Process Model and
Notation) diagram. This diagram, built by examining an oﬃcial textual plan,
supports subsequent formal analysis: process complexity, end-to-end process
time, resources costs, allocation strategy, process simulation, transformation to
multi-agent simulation, etc.

Rescue plans cost resources and lives. Even expressed as a business process,
the quality of rescue plans is still diﬃcult to be accurately assessed. A rescue
plan is generally validated during the recovery phase, after a disaster occurred.
Moreover, the process has to be assessed from multiple points of view that could
induce an information overload for the rescue plan expert.

This papers has two contributions. First, it presents a new modeling of rescue
plan based on Business Processes. This modeling reproduces the results we have
previously obtained [4]. Second, we explore multiple perspectives on processes
using interactive, expressive, and domain speciﬁc visualizations. We build a tool
named A4BP (Assessment for Business Processes) that will allow rescue experts
to evaluate the quality of these processes. The originality of our approach is
summarized as follows:

– We use a model-based approach: BPMN models may be imported and represented 
as a set of objects; queries and metrics may be formulated on BPMN
models to specify visualizations.

– Rescue plans can be visually assessed with speciﬁc visualizations.
– Visualizations are interactive and explorable in order to reduce the feedback

loop when the end-users adapt the initial rescue plan.

The paper is organized as follows. First we model a rescue plan as business
processes using BPMN diagrams (Sect. 2). We use the rescue plan of Ho Chi Minh
City (HCMC) tsunami as the running example along this paper. Second, our
approach is detailed using two visualizations of the HCMC tsunami rescue plan
(Sect. 3). After brieﬂy presenting the related work (Sect. 4) the paper concludes
(Sect. 5).

2 Model Rescue Plans as Business Processes

Today, BPMN 2.0 is the standard notation for modeling business processes.
Developers, business analysts, enterprise architects could eﬀectively use this

A Tool for Assessing Quality of Rescue Plans

157

graphic notation to express business rules. A great deal of existing open-source
and commercial Business Process tools are available (e.g., jBPM1, BonitaSoft,
Camunda2, Activiti Modeler3, Bizagi Modeler4).

In our previous work, we presented a BPMN modeling of the Ho Chi Minh
City Tsunami rescue plan from textual plans. These plans were provided by the
Vietnamese authorities [2] (Fig. 1).

(a) BPMN Model

(b) BPMN Elements

Fig. 1. BPMN representation for Tsunami response plan

1 https://www.jboss.org/products/bpmsuite/overview.
2 https://camunda.com.
3 http://activiti.org/components.html.
4 http://www.bizagi.com.

158

A.J. Peralta et al.

In the BPMN process model, eight actors are represented by rectangular
boxes, called swimlanes. These actors are two pools (Ho Chi Minh City and
Institue of Geophysics) and six lanes (Health + Red Cross, ..., Local Admin-
istration). Besides, in order to visualize the task, we use the activity notation
(like T1: Detect tsunami risk), depicted by a rounded-corner rectangle. These
activities are connected by the Connectors (Sequence Flow and Message Flow),
and the Flow Objects like Start Event, Intermediate Event, End Event. Furthermore,
 the control structures help to coordinate the diﬀerent activities using
parallelism (diamond including “+”) or alternatives (diamond with “X”).

Quality of rescue plans is assessed in a number of diﬀerent ways. For example,
in our previous work [4], we show the beneﬁce of combining two diﬀerent levels
of analysis of rescue plans: a BPMN diagram that provides a graphical view
easily understandable by end-users and a multi-agent perspective that provides
an aggregate representation of the behavior of the actors involved in the plan.
The ﬁrst level allows one to analyze the rescue plan from the complexity of
the workﬂow and may be used in a simulation, while the second level focus on
dependencies between roles and enable the analysis of the robustness, ﬂexibility
and eﬃciency of the organization.

In order to analyze rescue plans, diﬀerent perspectives have be taken into
account at the various phases of the disaster (Fig. 2). The analysis during the
preparedness, when pre-disaster strategic planning is done and when all the
resources are not completely known, is not the same that we will be done during
the response phase just after the disaster.

Another speciﬁcity of a rescue plan is to be modiﬁed at run time depending
of the crisis current situation to be adapted to new actors appearing in the scene,
excess or lack or resources, etc.

Our proposition in this paper is to use visualizations to provide a convenient
and practical means for the end-users to analyze complex rescue plans with

Fig. 2. Lifecycle of rescue plan assessments

A Tool for Assessing Quality of Rescue Plans

159

diﬀerent perspectives. Visualizations also allow us to combine diﬀerent perspectives 
in a compact graphical and contextually pertinent presentation. For example,
 we can reuse the common blueprint of a BPMN diagram and add on top
of each BPMN elements some information related to the simulation (time or
resources needed for this element).

Another useful feature of visualization is to be able to view ﬂaws or defaults
using graphical patterns. This feature has already been used in the context of
software process modeling by Alegria et al. [6].

Visualizations allow us to have a very short feedback when the rescue plan is
modiﬁed in order to see the consequences. Visualizations further allow us to have
an explorable way to test diﬀerent rescue plans among all the possible scenarios.

3 Assessing Rescue Plans with Visualizations

We ﬁrst describes the A4BP tool that allow us to model, analyze and visualize
multiple perspective on Business Processes (Sect. 3.1). Subsequently, two examples 
of assessments done on the HCMC tsunami plan are shown and we give the
code of the domain-speciﬁc language use to do the visualizations (Sect. 3.2).

3.1 A4BP Tool Description

A4BP (Assessment for Business Processes)5 is a platform based on the Pharo6
programming environment. Its purpose is to craft custom analysis of Business
Process models (like BPMN 2.0). A4BP allows developers, engineers, process
managers and end-users to import, transform and navigate Business Process
meta-models descriptions.

The main idea of A4BP is to provide a tool to navigate the entire business
process deﬁnition including relation between process and technological services
related to process execution. It provides multiple perspectives to measure and
visualize business process code to identify quality and design problems.

The top architectural level (e.g., Fig. 3) is composed by (1) a meta-model
process engine to parse the process deﬁnition, build an object model of BPMN
instances and calculate quality metrics; (2) a simulation engine based on
BPSim7, a standard to conﬁgure simulations, deﬁnes scenarios and captures
results according to ﬁve dynamic perspectives: Time, Control, Resources, Cost
and Task priority; (3) a front end environment using Roassal8 [15], an agile visualization 
engine to produce dynamic visualization using elements of the Business
Processes.

5 http://www.a4bp.com.
6 A Smalltalk-inspired live programming environment to edit, manipulate and execute

objects interactively: http://pharo.org.

7 http://www.bpsim.org.
8 http://objectproﬁle.com/Roassal.html.

160

A.J. Peralta et al.

Fig. 3. A4BP layered architecture

A4BP includes the following metrics:

Metric

Description

Numbers of elements

Counting the number of element deﬁned in the formal

meta-model description

Control Flow Complexity (CFC) [9] Using Cardoso proposal for control ﬂow complexity in

Control Flow Complexity Absolute

(CFCAbs)

Process Length [8]

Process Volume [8]

Process Diﬃculty [8]

business process

A variant of CFC used to ﬁnd the complexity when the
elements have more related split elements. The basic
idea is to sum all CFC in oder to have the absolute
value

N = n1 × log2(n1) + n2 × log2(n2)
V = (N1 + N2) × log2(n1 + n2)
D = (n1/2) × (N2/n2)

where: n1 is the number of unique activities, splits &joins, and control-ﬂow elements 
of business process; n2 is the number of unique data variables manipulated
by the process and its activities; N1 and N2 are respectively the total number
of elements and data occurrences.

3.2 A4BP Assessments Scenarios

A4BP may be used by a rescue plan analyst in two diﬀerent ways:

1. Using the default predeﬁned visualizations provided by the tool,

A Tool for Assessing Quality of Rescue Plans

161

2. Building their own visualization with the scripting engine provided by A4BP,
based on the ROASSAL agile visualization engine. We will focus only on this
way in the rest of the section.

The usual workﬂow for process modeler is to load a process model in A4BP,
explore the interface navigator, and decide which element has relevant information 
to make a custom visualization (See Fig. 4 for the navigation interface used
in the modeler).

Fig. 4. A4BP model navigation interface

In order to illustrate the workﬂow that end-users could follow to assess a
rescue plan, we show ﬁrst how to build a static visualization from the HCMC
tsunami rescue plan (Fig. 5) with all ﬂow elements and their relations. We evaluate 
each element with the ﬂow complexity and ﬂow absolute complexity using
rectangle width (CFC metric) and height (CFCAbs metric) to identify which
element has more complexity in the model.

We obtain a visualization that is roughly similar to Fig. 1(a) with more information 
regarding each element. This information is more valuable for end-users
than just plain BPMN diagrams.

The visualization given in Fig. 5 is obtained by executing the following script.
The main part of the script is to select the nodes from the BPMN model that will
be displayed and given to these nodes. The suitable shapes and colors depend
on the metrics that business analysts want to examine.

This script may be built interactively and incrementally by the user during

the exploration of the model.

162

A.J. Peralta et al.

Fig. 5. Visualization of HCMC rescue plan process complexity

”Start Scripting visualization, using ﬂowElements as main imput”
values := model ﬂowElements.
”Conﬁgure each node in the view with the metrics, using visual properties”
view shape rectangle

”Add control ﬂow complexity metric”
width: [: nn | (nn metricCFC + 1) ∗ 10 ];
”Add control ﬂow complexity absolute metric”
height: [: nn | ( nn metricCFCAbs + 1 ) ∗ 10 ].

view nodes: values.
”Add number of relations metric to normalize the color”
view normalizer

normalizeColor: #numberOfRelations
using: (ColorPalette sequential colors: 9 scheme: 'YlOrRd') using: #value.

”Connect the elements depending on the outFlows relationship”
eb := view edges.
eb shape line color: (Color lightGray alpha: 0.2).
eb connectFrom: #yourself toAll: [:n | n outFlows ].
”Generate a tree layout to organize using outFlows references”
view layout tree.
”Execute the visualization”
view build.

A Tool for Assessing Quality of Rescue Plans

163

Thanks to this visualization, the end-user might gain insights from the
process. For example, it is apparent that one element (a parallel gateway ele-
ment) has a very high complexity (width) and a high number of relations with
other elements (color). This element corresponds probably to a critical task in
the rescue plan. Another fact that we discover is that there are some recurrent
patterns not only in terms of structure but also in terms of complexity.

From the output of ﬁrst assessment, the rescue plan analyst might decide
to enrich this ﬁrst visualization with some information provided by another
perspectives, like the simulation one.

The visualization is an output result after executing BPSim engine with
time and resource as input parameters used to simulate real execution process.
The visualization uses static meta-model to paint elements and dynamic BPSim
meta-model to capture time processing, then set width and height values for
each rectangle (Fig. 6).

Fig. 6. Visualization of HCMC process time information

The standard BPMN view combines static BPMN diagram on the left with
dynamic visualization of the BPMN simulation (time chronograph) on the right.
In the following script, the end-user adapts the shape size of BPMN elements
according to some metrics (like processing time) coming from the simulation
model:

164

A.J. Peralta et al.

”Script on the left side”
”Using color builder to ﬁnd color for each element”
cv := A4BPUIBVFactory color.
values := model ﬂowElements
”Find the result scenario to explore”
out := bpSimExecution fullOutputScenario.
view shape rectangle color:[: n | (n accept: cv)].
”Conﬁgure each node in the view with the metrics, using visual properties”
view shape rectangle

”Add processing time value result”
width: [:n | (out getParameterAt: n) processing vv ];
”Add control ﬂow complexity metric”
height: [:n | ( n metricCFC + 1 ) ].

view nodes: values.
”Add quantity of resource necessary to do the activity using normalize the color”
view normalizer

normalizeColor: [:n | (out getParameterAt: n ) quantity vv]
using: (ColorPalette sequential colors: 9 scheme: 'YlOrRd')
using: #value.

”Script on the right side”
”each simulation is a scenario to display”
b := RTGrapher new.

cv := Dictionary new.
cvv := A4BPUIBVFactory color.
”Find the result scenario to explore”
scenario := bpSimExecution fullOutputScenario.
”Prepare the datasource to put in the graph”
ds := RTStackedDataSet new.
”Conﬁgure the element inside the graph”
ds dotShape rectangle

width:[ :el | ( scenario getParameterAt: el ) quantity vv )];
height: 5.

”Insert the elements in the dataset”
ds points: bpSimExecution processModel allActivities.
”capture the processing time from scenario results”
ds y: [ :el | (scenario getParameterAt: el) processing vv ].
”Add the dataset in the graph”
b add: ds.
”Conﬁgure details”
b axisX title: 'Activities'; axisY title: 'Processing time'.
b build.

By combining these two perspectives together, the rescue plan analysis, could
understand the relationships between the complexity of each activities of the
Business Process according to the time needed to process each element. Selecting 
an element in one these views highlights the corresponding element in the
other one.

A Tool for Assessing Quality of Rescue Plans

165

4 Related Works

In the context of software process modeling [6] proposed model blueprints for
visualizing and analyzing diﬀerent perspectives of a software process model.
These blueprints are used to identify process anomalies like exceptional entities
and recurrent errors [14]. Error patterns are identiﬁed with process elements
that are graphically “abnormally diﬀerent” from the remaining elements. We
are doing something similar by decorating elements like tasks with information
from others perspectives.

This is also possible to assess a business process from the organizational point
of view. Grossi et al. [7] proposed a set of metrics in order to evaluate organizational 
structure based on the role graph with three dimensions: power, coordination 
and control. We already implement these metrics in a previous paper [3].
Cardoso et al. [8] presented a set of metrics such as Process Length, Process
Volume, Process Diﬃculty in order to assess the complexity of process model.
A4PB oﬀers these metrics making them easy to be combined in exploratory
visualizations.

Cardoso et al. [9] presented a metric to measure control-ﬂow complexity of a
work-ﬂow or a process. He also suggested other metrics such as: Activity Complexity,
 Data-Flow Complexity, Resource Complexity. These metrics, combined
with the equations of Role Graph [7], can help us determine the quality of a
coordination plan according to two points of view: process and organization.

5 Conclusion

Modeling rescue plans with business processes eases their engineering, including
formalization, simulation, analysis, quality assessment activities. To be accepted
by end-users and authorities in charge of disaster management, quality assessment 
has to be based on understandable graphical artifacts. To this end, our
paper has presented diﬀerent graphical perspectives of a plan on top of which
static and dynamic analysis are possible. For that purpose the A4BP visualization 
tool has been implemented and experimentations on a Ho Chi Minh City
rescue plan have been conducted. However, our tool remains general enough
to deal with any other type of application domain including complex processes.
The only constraint is that processes should be expressed in the BPMN standard
notation. Regarding our case study, our tool should now be evaluated by users
to have real feedback on its usability and the understandability of graphics produced.
 A process includes three dimensions: control structure, organization, and
information. This paper focussed on the process control structure dimension but
does not take into account the two others. As future work, we plan to provide
additional visualizations and metrics to measure the quality of the organization
(structure and communication). Analyzing actor interactions is likely to be the
base of our future analyses.

166

A.J. Peralta et al.

Acknowledgment. We gratefully acknowledge the ﬁnancial support of the European
Smalltalk User Group (http://www.esug.org). This work has been partially founded
by Lam Research and FONDECYT project 224857 (Chile).

References

1. Prizzia, R.: The role of coordination in disaster management. In: Public Administration 
and Public Policy-New York, vol. 138, pp. 75 (2008)

2. Le, N.T.T., Hanachi, C., Stinckwich, S., Ho, T.V.: Representing, simulating and
analysing Ho Chi Minh City Tsunami plan by means of process models. In:
ISCRAM Vietnam 2013 (Information Systems for Crisis Response and Manage-
ment) (2013)

3. Le, N.T.T., Hanachi, C., Stinckwich, S., Ho, T.V.: Combining process simulation
and agent organizational structure evaluation in order to analyze disaster response
plans. In: Gordan Jezic, G., Howlett, R.J., Jain, L.C. (eds.) Agent and Multi-Agent
Systems: Technologies and Applications, Part II. Smart Innovation, Systems and
Technologies, vol. 38, pp. 55–68. Springer, Switzerland (2015)

4. Le, N.T.T., Hanachi, C., Stinckwich, S., Ho, T.V.: Mapping BPMN processes to
organization centered multi-agent systems to help assess crisis models. In: 7th
International Conference on Computational Collective Intelligence Technologies
and Applications (2015)

5. Saoud, N.B.B., Mena, T.B., Dugdale, J., Pavard, B., Ahmed, M.B.: Assessing large
scale emergency rescue plans: an agent based approach. Int. J. Intell. Control. Syst.
11(4), 260–271 (2006)

6. Alegr´ıa, J.A.H., Bastarrica, M.C., Bergel, A.: AVISPA: a tool for analyzing software 
process models. J. Softw. Evol. Process. 26(4), 434–450 (2013)

7. Grossi, D., Dignum, F.P.M., Dignum, V., Dastani, M., Royakkers, L.M.M.: Structural 
aspects of the evaluation of agent organizations. In: Noriega, P., V´azquezSalceda,
 J., Boella, G., Boissier, O., Dignum, V., Fornara, N., Matson, E. (eds.)
COIN 2006. LNCS (LNAI), vol. 4386, pp. 3–18. Springer, Heidelberg (2007)

8. Cardoso, J., Mendling, J., Neuman, J., Reijers, H.A.: A discourse on complexity
of process models. In: Eder, J., Dustdar, S., et al. (eds.) BPM 2006 Workshops.
Lecture Notes in Computer Science, vol. 4103, pp. 115–126. Springer, Berlin (2006)
9. Cardoso, J.: Business process control-ﬂow complexity: metric, evaluation, and validation.
 Int. J. Web Serv. Res. (IJWSR) 5(2), 49–76 (2008). IGI Global

10. van der Aalst, W.M.P., Nakatumba, J., Rozinat, A., Russell, N.: Business process
simulation. In: Brocke, J., Rosemann, M. (eds.) Handbook on Business Process
Management 1. International Handbooks on Information Systems, pp. 313–338.
Springer, Heidelberg (2010)

11. Makni, L., Khlif, W., Haddar, N.Z., Ben-Abdallah, H.: A tool for evaluating the

quality of business process models. In: ISSS/BPSC, pp. 230–242 (2010)

12. Curtis, B., Kellner, M., Over, J.: Process modeling. Commun. ACM 35(9), 75–90

(1992)

13. Lanza, M., Ducasse, S.: Polymetric views - a lightweight visual approach to reverse

engineering. Trans. Softw. Eng. 29(9), 782–795 (2003)

14. Demeyer, S., Ducasse, S., Nierstrasz, O.: Object-Oriented Reengineering Patterns.

Square Bracket Associates, Kehrsatz (2008)

15. Bergel, A., Cassou, D., Ducasse, S., Laval, J.: Deep Into Pharo. Square Bracket

Associates, Kehrsatz (2013)

